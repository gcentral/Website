use gcentral_dev;

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

INSERT INTO `user` (`id`, `email`, `roles`, `password`, `display_name`, `full_name`, `location`, `reset_pass`, `registered`, `reg_ip`, `last_login`, `login_ip`, `temp_key`) VALUES
(3, 'test@gcentral.org', '[]', '$argon2i$v=19$m=65536,t=4,p=1$VmxTYmY5T0F4Qk1LZ2dwNA$D0NLOhZSkcaJIE3xogJClUvnZZpwKGEHVaoPY2nafBI', 'GCentralDev', 'GCentral Developer', 'The space between purpose and action.', 0, '2020-06-23 05:06:25', '::1', NULL, NULL, '');
COMMIT;

INSERT INTO `package_repo` (`id`, `name`, `repo_type`, `last_update`, `url`, `enabled`) VALUES
(5, 'GPM Repository', 'gpm', NULL, '', 1),
(6, 'VIPM Community', 'vipm', NULL, '', 1);

INSERT INTO `developer_group` (`id`, `name`, `url`, `email`, `personal_user_id`, `description`, `display_name`) VALUES
(136, 'ethandstern', '', '', NULL, '', 'Ethan Stern (ethan.stern@composed.io)'),
(137, 'Wovalab', '', '', NULL, '', 'Olivier Jourdan'),
(138, 'steveball', '', '', NULL, '', 'Steve Ball (Steve.Ball@composed.io)'),
(139, 'DerekMGI', '', '', NULL, '', 'Moore Good Ideas, Inc (support@mooregoodideas.com)'),
(140, 'TheQ', '', '', NULL, '', 'TheQ (q@qsoftwareinnovations.com)'),
(141, 'JKI', '', '', NULL, '', 'JKI'),
(142, 'jmcbee', '', '', NULL, '', 'Jon McBee (jon.mcbee@composedsystems.com)'),
(143, 'Cyth UK & drjdpowell', '', '', NULL, '', 'James David Powell and Wes Ramm'),
(144, 'LabVIEW Open Source Project', '', '', NULL, '', 'Francois Normandin'),
(145, 'mgh', '', '', NULL, '', 'Moore Good Ideas, Inc. (support@mooregoodideas.com)'),
(146, 'Bienkowski Michal', '', '', NULL, '', 'Bienkowski Michal'),
(147, 'tkuiper', '', '', NULL, '', 'S5 Solutions, Inc. (info@s5solutions.com)'),
(148, 'paulr', '', '', NULL, '', 'Paul Ross (paul.ross@composedsystems.com)'),
(149, 'picklecolor2', '', '', NULL, '', 'Marty Vowles (marty@endigit.com)'),
(150, 'AddQ Consulting', '', '', NULL, '', 'Thomas Olsson Mattias Ericsson'),
(151, 'Hooovahh', '', '', NULL, '', 'Brian Hoover'),
(152, 'Hampel Software Engineering', '', '', NULL, '', 'Hampel Software Engineering'),
(153, 'JKI Labs', '', '', NULL, '', 'info@jkisoft.com'),
(154, 'JKI Software', '', '', NULL, '', 'info@jkisoft.com'),
(155, 'stephenMGI', '', '', NULL, '', 'Moore Good Ideas, Inc (support@mooregoodideas.com)'),
(156, 'Felipe P. Silva', '', '', NULL, '', 'Felipe P. Silva'),
(157, 'University of Leeds', '', '', NULL, '', 'Gavin Burnell'),
(158, 'Field R&D Services', '', '', NULL, '', 'Christopher R Field'),
(159, 'MediaMongrels', '', '', NULL, '', 'Sam Sharp'),
(160, 'Erencan TAYANC', '', '', NULL, '', 'Erencan TAYANC'),
(161, 'HopeMGI', '', '', NULL, '', 'Moore Good Ideas, Inc (support@mooregoodideas.com)'),
(162, 'LAVA', '', '', NULL, '', 'Ryan Porter'),
(163, 'ChrisCilino', '', '', NULL, '', 'Chirs Cilnio (christopher.cilino@composedsystems.io)'),
(164, 'labview', '', '', NULL, '', 'NI Systems Engineering (nisyseng@ni.com)'),
(165, 'OpenG.org', '', '', NULL, '', 'Jim Kring <jim@jimkring.com>'),
(166, 'NI', '', '', NULL, '', 'jim.kring@jameskring.com'),
(167, '', '', '', NULL, '', 'Jim Kring <jim@jimkring.com>'),
(168, 'OpenG_org', '', '', NULL, '', 'OpenG.org'),
(169, 'National Instruments', '', '', NULL, '', 'OpenG.org'),
(170, 'JDP Science', '', '', NULL, '', 'jdpowell'),
(171, 'Test company', '', '', NULL, '', 'Administrator'),
(172, 'TheLabVIEWLab', '', '', NULL, '', 'EricM'),
(173, 'Q Software Innovations, LLC', '', '', NULL, '', 'Quentin \"Q\" Alldredge'),
(174, 'MNProjects', '', '', NULL, '', 'Martin Nöhrer'),
(175, 'Nicolas Bats', '', '', NULL, '', 'Nicolas Bats'),
(176, 'Omar Mussa', '', '', NULL, '', 'Omar Mussa'),
(177, 'argenta', '', '', NULL, '', ''),
(178, 'TSN Community', '', '', NULL, '', 'TSN Community'),
(179, 'mac671', '', '', NULL, '', 'Maciej Kolosko (maciej@bluecogsoftware.com)'),
(180, '', '', '', 3, '', '');

INSERT INTO `package` (`id`, `name`, `description`, `version`, `url`, `downloads`, `avg_rating`, `display_name`, `icon_url`, `repo_id`) VALUES
(8, '@cs/actor-framework-messages', 'Messaging extensions to the LabVIEW Actor Framework', '', '0', 0, -1, 'actor-framework-messages', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(9, 'wovalab_lib_antidoc', 'This tool parses lvproj to generate its documentation.\n\nThe document generated is a plain-text file that uses Asciidoc syntax. You can render this file as a PDF or HTML file using Asciidoctor toolchain (https://asciidoctor.org).\n\nNote: you can integrate Antidoc in you CI/CD process using the CLI tool provided by the additional package Antidoc CLI', '', '0', 0, -1, 'AntiDoc', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/wovalab_lib_antidoc/wovalab_lib_antidoc-1.1.0.30.bmp', 6),
(10, 'wovalab_lib_antidoc_cli', 'This package installs a CLI tool to generate lvproj documentation with a Windows terminal.\nThe main use case is to integrate documentation generation as part of your CI/CD.', '', '0', 0, -1, 'Antidoc CLI', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/wovalab_lib_antidoc_cli/wovalab_lib_antidoc_cli-1.0.0.2.bmp', 6),
(11, 'wovalab_lib_asciidoc_for_labview', 'This toolkit provides a set of vis that helps you builds plain-text file using asciidoc syntax\n\n= What is AsciiDoc ?\n\nAsciiDoc is two things:\n\n. A mature, plain-text writing format for authoring notes, articles, documentation, books, ebooks, web pages, slide decks, blog posts, man pages, and more.\n\n. A text processor and toolchain for translating AsciiDoc documents into various formats (called backends), including HTML, DocBook, PDF, and ePub.\n\nMore information here https://asciidoctor.org/docs/what-is-asciidoc/#what-is-asciidoc\n\n\nNOTE: This product description is written with asciidoc syntax ;)', '', '0', 0, -1, 'Asciidoc for LabVIEW', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/wovalab_lib_asciidoc_for_labview/wovalab_lib_asciidoc_for_labview-1.2.1.31.bmp', 6),
(12, '@cs/assertions', 'malleable type assertion library for LV2017', '', '0', 0, -1, 'assertions', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(13, '@mgi/base64', 'Provides basic Base64 Encode and Decode functionality.', '', '0', 0, -1, 'base64', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(14, '@cs/beacon', 'a library for peer network discovery using udp multicast', '', '0', 0, -1, 'beacon', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(15, '@qsi/calendar-qcontrol', 'Calendar style date selection control.  Similar to the calendar which displays in the Date/time stamp date picker dialog except this one can be used directly on your front panel.', '', '0', 0, -1, 'calendar-qcontrol', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(16, 'jki_lib_caraya', 'Caraya Unit Test Framework is an open source unit testing framework for LabVIEW. It takes a whole new approach to unit testing; your VI is your test. Caraya allows you to convert your manual test VIs you use for debugging into unit test cases with nearly no effort. Even running the tests is easy, just run the test case VI. Caraya significantly lowers the barrier for developers to write unit tests leading into improved overall code quality in real-world projects where developers don’t always have the luxury to write unit test cases first.\n\nIt runs on real-time targets and in the run-time engine too!\n\nTo learn more visit\n\nhttp://jki.net/tools#caraya', '', '0', 0, -1, 'Caraya Unit Test Framework', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_caraya/jki_lib_caraya-1.0.2.115.bmp', 6),
(17, '@cs/carwash', 'CLD Car Wash Example implemented with MVA Framework and Test Executive', '', '0', 0, -1, 'carwash', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(18, '@cs/ci', 'composed-ci that takes the LabVIEW-specific configuration complexities out of your continuous integration. ', '', '0', 0, -1, 'ci', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(19, '@qsi/colorselector-qcontrol', 'This QControl displays the RGB spectrum and provides a cursor to allow the user to select a color.', '', '0', 0, -1, 'colorselector-qcontrol', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(20, '@qsi/columnsortmulticolumnlistbox-qcontrol', 'This QControl adds sorting by column to a Multicolumn Listbox.  Inherit from the Sort class to specialize the sorting algorithm.  Requires the QControl Toolkit from NI Tools Network (http://bit.ly/QControlNITools).', '', '0', 0, -1, 'columnsortmulticolumnlistbox-qcontrol', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(21, 'columnsortmulticolumnlistbox-qcontrol', 'This QControl adds sorting by column to a Multicolumn Listbox.  Inherit from the Sort class to specialize the sorting algorithm.  Requires the QControl Toolkit from NI Tools Network (http://bit.ly/QControlNITools).', '', '0', 0, -1, 'columnsortmulticolumnlistbox-qcontrol', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(22, '@cs/composed-beacon', 'a library for peer network discovery using udp multicast', '', '0', 0, -1, 'composed-beacon', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(23, '@cs/composed-ci', 'composed-ci is an extension of the LabVIEW CLI common steps package that takes the LabVIEW-specific configuration complexities out of your continuous integration. ', '', '0', 0, -1, 'composed-ci', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(24, '@cs/configuration', 'A malleable, by-reference, configuration interface for everything', '', '0', 0, -1, 'configuration', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(25, '@cs/configuration-database', 'Read and write configuration values to a database!\nRequires @cs/configuration and @cs/database-interface', '', '0', 0, -1, 'configuration-database', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(26, '@mgi/console', 'An easy API to the windows console when working with windows CLI applications.', '', '0', 0, -1, 'console', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(27, 'cyth_logger_sqlite', 'A logger and log viewer using an SQLite database.  The logger is a background process.  A Log Viewer is available under the Tools menu.', '', '0', 0, -1, 'Cyth Logger (with SQLite)', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/cyth_logger_sqlite/cyth_logger_sqlite-1.6.2.45.bmp', 6),
(28, 'labview_open_source_lib_data_manipulation', 'Data Manipulation is a collection of low-level data manipulation methods for interacting directly with type descriptors and variants to process flattened data efficiently.', '', '0', 0, -1, 'Data Manipulation', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/labview_open_source_lib_data_manipulation/labview_open_source_lib_data_manipulation-1.2.3.10.bmp', 6),
(29, '@cs/data-type-serializer', 'Simple data type serialization package', '', '0', 0, -1, 'data-type-serializer', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(30, '@cs/database', 'Interface for multiple database engines to handle authentication, connection management and query support.  Source is LabVIEW 2017.', '', '0', 0, -1, 'database', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(31, 'database-configuration', 'Read and write configuration values to a database!\nRequires @cs/configuration and @cs/database-interface', '', '0', 0, -1, 'database-configuration', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(32, '@cs/database-event-logger', 'adds database sinks to extend composed-event-logger, supports sqlite and mysql', '', '0', 0, -1, 'database-event-logger', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(33, '@mgi/database-interface', 'An abstraction layer API built to help communicate with databases from LabVIEW.', '', '0', 0, -1, 'database-interface', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(34, '@cs/database-mysql', 'extension to composed-database that adds methods for managing a connection to a mysql database', '', '0', 0, -1, 'database-mysql', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(35, '@mgi/dci-atc-mini-chiller', 'A DCI Module for interfacing with a MINI Chiller from Applied Thermal Controls', '', '0', 0, -1, 'dci-atc-mini-chiller', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(36, '@mgi/dci-cdaq', 'DCI DAQ module for interfacing with cDAQ hardware.', '', '0', 0, -1, 'dci-cdaq', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(37, '@mgi/dci-daq', 'Virtual class for all DCI DAQ implementations', '', '0', 0, -1, 'dci-daq', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(38, '@mgi/dci-daq-manual', 'Manually simulated DAQ', '', '0', 0, -1, 'dci-daq-manual', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(39, '@mgi/dci-data-viewer', 'Simple data viewer for tag lists', '', '0', 0, -1, 'dci-data-viewer', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(40, '@mgi/dci-gilson-fc', 'DCI module for interacting with a Gilson Fraction Collector', '', '0', 0, -1, 'dci-gilson-fc', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(41, '@mgi/dci-gp-50', 'A DCI module for reading from a GP-50 pressure transducer.', '', '0', 0, -1, 'dci-gp-50', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(42, 'dci-gp-50', 'A DCI module for reading from a GP-50 pressure transducer.', '', '0', 0, -1, 'dci-gp-50', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(43, '@mgi/dci-labjack', 'A DAQ module for interfacing with LabJack hardware', '', '0', 0, -1, 'dci-labjack', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(44, '@mgi/dci-labjack-singlepoint', 'A DAQ module for interfacing with LabJack hardware', '', '0', 0, -1, 'dci-labjack-singlepoint', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(45, '@mgi/dci-log', 'Tag-based logger', '', '0', 0, -1, 'dci-log', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(46, '@mgi/dci-mfa-1600', 'DCI Module for Omega MFA-1600 series flow meters', '', '0', 0, -1, 'dci-mfa-1600', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(47, '@mgi/dci-module', 'Virtual class for DCI Modules', '', '0', 0, -1, 'dci-module', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(48, '@mgi/dci-tag-calibration', 'A reusable UI for calibrating tags', '', '0', 0, -1, 'dci-tag-calibration', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(49, '@mgi/dci-tag-engine', 'Simple tag engine with support for digital and analog signals with calibration where appropriate.', '', '0', 0, -1, 'dci-tag-engine', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(50, '@mgi/dci-watlow-modbus', 'DCI module for reading and controlling watlow modbus controllers', '', '0', 0, -1, 'dci-watlow-modbus', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(51, '@mgi/detailed-error', 'An error parser that helps decode error source strings.', '', '0', 0, -1, 'detailed-error', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(52, '@mgi/dotnet-cleanup', 'A simple interfance to help track and clean up .NET reference.', '', '0', 0, -1, 'dotnet-cleanup', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(53, '@mgi/dotnet-database', 'Provides a concrete implementation of the System.Data.DbConnection.', '', '0', 0, -1, 'dotnet-database', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(54, 'jki_lib_easyxml', 'The EasyXML Toolkit for LabVIEW from JKI is a simple set of VIs that make generating and parsing XML data in LabVIEW as easy as creating a cluster.', '', '0', 0, -1, 'EasyXML Toolkit for LabVIEW', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_easyxml/jki_lib_easyxml-3.0.0.170.bmp', 6),
(55, 'bienkowski_michal_lib_enclose_with_error_case_structure_quick_drop', '', '', '0', 0, -1, 'Enclose With Error Case Structure Quick Drop', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/bienkowski_michal_lib_enclose_with_error_case_structure_quick_drop/bienkowski_michal_lib_enclose_with_error_case_structure_quick_drop-1.0.0.1.bmp', 6),
(56, '@mgi/error-file-logger-panel', 'A basic file logger panel interface.', '', '0', 0, -1, 'error-file-logger-panel', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(57, '@mgi/error-history-panel', 'Basic helpful reuse VIs', '', '0', 0, -1, 'error-history-panel', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(58, '@mgi/error-log', 'An Error logging interface', '', '0', 0, -1, 'error-log', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(59, '@mgi/error-logger-panel', 'A basic panel to log errors', '', '0', 0, -1, 'error-logger-panel', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(60, '@mgi/error-reporter-core', 'Provides the basic interface for the MGI Error Reporter Framework', '', '0', 0, -1, 'error-reporter-core', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(61, '@s5/errorlog', 'Simple Error Logger for LabVIEW', '', '0', 0, -1, 'errorlog', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(62, '@cs/event-logger', 'Composed Event Logger is an extendable, ready to use LabVIEW event logger. Injectable event destinations, referred to as \'sinks\', log entry formats, and application wide error processing allow extension and customization', '', '0', 0, -1, 'event-logger', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(63, '@endigit/exitimer', 'Exitimer provides timing and shutdown for loops that is reference-based.', '', '0', 0, -1, 'exitimer', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(64, '@endigit/exitimer-examples', 'Examples of how Exitimer is used.', '', '0', 0, -1, 'exitimer-examples', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(65, '@cs/file-explorer-extension', 'This package is an extension of the MVA Framework and provides a view that replicates a Windows file explorer window.', '', '0', 0, -1, 'file-explorer-extension', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(66, 'addq_lib_gsharp', 'The G# Framework is a free, award winning add-on toolkit for LabVIEW that adds reference based object-oriented support. It takes advantage of the data value reference structure  (dvr) together with the native classes and will add a full object-oriented support with excellent performance. This is the new generation of object-oriented support that makes LabVIEW as powerful as any object-oriented language. The G# Framework is a National Instrument Compatible with LabVIEW Gold product and was awarded \"Add-On of the Year for Community\" at NI Week 2011.\n\n<b>NB!</b> LabVIEW must be restarted to load the features that are integrated into the LabVIEW development environment, such as the right-click menu in the project explorer.', '', '0', 0, -1, 'G# Framework', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/addq_lib_gsharp/addq_lib_gsharp-2.0.0.2.bmp', 6),
(67, '@mgi/gpm-package-parser', 'Parses a GPM Package File', '', '0', 0, -1, 'gpm-package-parser', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(68, '@mgi/hash', 'Provides Hashing functions implemented in native LabVIEW', '', '0', 0, -1, 'hash', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(69, 'hello-world', 'A simple demo package', '', '0', 0, -1, 'hello-world', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(70, 'hooovahh_array_vims', 'This package contains Array functions converted into VIMs, primarily taken from the OpenG Array package. With minor improvements and optimizations using newer array manipulation techniques. ', '', '0', 0, -1, 'Hooovahh Array VIMs', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/hooovahh_array_vims/hooovahh_array_vims-1.2.0.12.bmp', 6),
(71, 'hooovahh_tremendous_tdms', 'This package contains various tool for TDMS operations.  These tools can help in TDMS file creation, editing, conversion, or reading, also with several demos.', '', '0', 0, -1, 'Hooovahh Tremendous TDMS', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/hooovahh_tremendous_tdms/hooovahh_tremendous_tdms-1.0.0.4.bmp', 6),
(72, 'hse_lib_hse_layout_manager', 'A layout system for LabVIEW frontpanel objects (controls) inspired by Qt5 (https://doc.qt.io/qt-5/layout.html).\r\n\r\nMore information is available at\r\nhttps://dokuwiki.hampel-soft.com/code/open-source/hse-layout-manager\r\n\r\nThe latest release version can be found at\r\nhttps://gitlab.com/hampel-soft/open-source/hse-layout-manager', '', '0', 0, -1, 'HSE Layout Manager', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/hse_lib_hse_layout_manager/hse_lib_hse_layout_manager-1.2.0.3.bmp', 6),
(73, 'hse_lib_hse_logger', 'A flexible and extensible logging system inspired by the Python logging module.\r\n\r\nFor common logging tasks this logger library has a Quick-API which makes it very easy to integrate and use it in a project without caring about the LVOOP internals. The library provides five log levels (DEBUG, INFO, WARNING, ERROR, CRITICAL) and two targets for the output (file handler, event handler). Because of the LVOOP design it is flexibly usable and every part of it can be extended with custom child classes to implement new features. \r\n\r\nThis software is published under a free licence, you can use,  modify and extend it as you wish. However, if you need commercial support please contact us. We also offer packages to extend the basic functionality (e.g. log rotate for files).\r\nE-Mail: info@hampel-soft.com\r\n\r\nMore information is available at\r\nhttps://dokuwiki.hampel-soft.com/code/open-source/hse-logger\r\n\r\nThe latest release version can be found at\r\nhttps://gitlab.com/hampel-soft/open-source/hse-logger', '', '0', 0, -1, 'HSE Logger', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/hse_lib_hse_logger/hse_lib_hse_logger-2.0.3.2.bmp', 6),
(74, '@mgi/ide-interface', 'Gets information about the currently installed LabVIEW IDE versions.', '', '0', 0, -1, 'ide-interface', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(75, 'jki_design_palette', 'A powerful visual controls palette for LabVIEW. Launch from the <i>\"Tools >> JKI Design Palette\"</i> menu or press <b>Ctrl+Shift+Space</b> from any VI Front Panel.', '', '0', 0, -1, 'JKI Design Palette', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_design_palette/jki_design_palette-1.0.5.196.bmp', 6),
(76, 'jki_flat_ui_controls_2_0', 'The JKI Flat UI Controls 2.0 is a set of professionally designed controls and indicators to help you create amazing UIs in LabVIEW. To browse the controls launch the JKI Design Palette from the <i>Tools >> JKI Design Palette</i> menu in LabVIEW or press <b>Ctrl+Shift+Space</b> from any VI Front Panel.', '', '0', 0, -1, 'JKI Flat UI Controls 2.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_flat_ui_controls_2_0/jki_flat_ui_controls_2_0-2.0.1.28.bmp', 6),
(77, 'jki_lib_rest_client', 'JKI HTTP REST Client is a library for connecting LabVIEW applications with RESTful web services for creating Industrial Internet of Things (IoT) applications. This library extends LabVIEW’s native HTTP client with powerful features such as support for the status code, support for multiple parallel requests, support for request specific HTTP headers and support for automatically escaping URLs. These useful features streamline the process of integrating LabVIEW applications with REST based web service APIs.', '', '0', 0, -1, 'JKI HTTP REST Client', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_rest_client/jki_lib_rest_client-1.3.3.25.bmp', 6),
(78, 'jki_lib_json_serialization', 'JKI JSON is a serialization and deserialization library for serializing LabVIEW data into JSON strings and deserializing JSON strings into LabVIEW data.', '', '0', 0, -1, 'JKI JSON', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.1.10.37.bmp', 6),
(79, 'jki_magic_delay_fairy', '\n<b>About this tool:</b>\nThe Magic Delay Fairy fixes race conditions in your code by inserting magical delays into your code that are specifically tuned using advanced magical algorithms to fix your race conditions. Don\'t ask how it works, because it\'s magic.\n\n<b>How to use this tool:</b>\nHit Ctrl+<space> to invoke QuickDrop then press Ctrl+F to invoke the Magic Delay Fairy and watch her do her magic. Before invoking the MDF, select error clusters to insert delays on error clusters, select objects to insert delays next to objects, or select nothing to place a delay on your block diagram. Delays are random, because that\'s how the magic works.\n\n<b>Thanks to:</b>\n- Norm Kirchner for doing the magic fairy dance\n- The guy whose face is on Norm\'s presentation about the Magic Delay Fairy (we\'ll update this description later)\n- Gavin Burnell for awesome Scripting Tools.\n- Brian Hoover (hooovahh) and Yair on LAVA for help getting screen coordinates of GObject on Block Diagram\n- Darren Nattinger (dnatt) for making QuickDrop awesomeness\n- Everyone at JKI who contributed to this tool.', '', '0', 0, -1, 'JKI Magic Delay Fairy (QD Plug-in)', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_magic_delay_fairy/jki_magic_delay_fairy-1.0.0.11.bmp', 6),
(80, 'jki_lib_serialization', '', '', '0', 0, -1, 'JKI Serialization', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_serialization/jki_lib_serialization-1.0.1.14.bmp', 6),
(81, 'jki_lib_smo_editor', '', '', '0', 0, -1, 'JKI SMO Editor', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_smo_editor/jki_lib_smo_editor-2.0.2.5.bmp', 6),
(82, 'jki_smo_templates', 'This package provides templates to get started withthe JKI State Machine Objects (SMO) framework.\nTemplates can be instantiated by copying those classes and renaming them, or by using the SMO Editor Tool (separate package) to do so.\r\n\r\nThe JKI State Machine Objects for LabVIEW is an easy-to-use yet powerful object-oriented framework, based on the JKI State Machine. It is the very same framework that is used by the JKI team in our everyday project work, and is the result of years of refinement by our team of LabVIEW experts.\r\n\r\n', '', '0', 0, -1, 'JKI SMO Template (Basics)', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_templates/jki_smo_templates-1.4.0.15.bmp', 6),
(83, 'jki_smo_daqmx_templates', 'This package provides DAQmx templates to get started with the JKI State Machine Objects (SMO) framework.\r\n\r\nThe JKI State Machine Objects for LabVIEW is an easy-to-use yet powerful object-oriented framework, based on the JKI State Machine. It is the very same framework that is used by the JKI team in our everyday project work, and is the result of years of refinement by our team of LabVIEW experts.\r\n\r\n', '', '0', 0, -1, 'JKI SMO Template (DAQmx)', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_daqmx_templates/jki_smo_daqmx_templates-1.1.0.2.bmp', 6),
(84, 'jki_smo_templates_graph', 'This package provides Graph templates to get started with the JKI State Machine Objects (SMO) framework.\r\n\r\nThe JKI State Machine Objects for LabVIEW is an easy-to-use yet powerful object-oriented framework, based on the JKI State Machine. It is the very same framework that is used by the JKI team in our everyday project work, and is the result of years of refinement by our team of LabVIEW experts.\r\n\r\n', '', '0', 0, -1, 'JKI SMO Template (Graphs)', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_templates_graph/jki_smo_templates_graph-1.1.0.11.bmp', 6),
(85, 'jki_smo_timedloop_templates', 'This package provides timed loop templates to get started with the JKI State Machine Objects (SMO) framework.\r\n\r\nThe JKI State Machine Objects for LabVIEW is an easy-to-use yet powerful object-oriented framework, based on the JKI State Machine. It is the very same framework that is used by the JKI team in our everyday project work, and is the result of years of refinement by our team of LabVIEW experts.\r\n\r\n', '', '0', 0, -1, 'JKI SMO Template (Timed Loop)', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_timedloop_templates/jki_smo_timedloop_templates-1.0.0.2.bmp', 6),
(86, 'jki_smo_ui_templates', 'This package provides UI templates to get started with the JKI State Machine Objects (SMO) framework.\r\n\r\nThe JKI State Machine Objects for LabVIEW is an easy-to-use yet powerful object-oriented framework, based on the JKI State Machine. It is the very same framework that is used by the JKI team in our everyday project work, and is the result of years of refinement by our team of LabVIEW experts.\r\n\r\n', '', '0', 0, -1, 'JKI SMO Template (UIs)', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_ui_templates/jki_smo_ui_templates-1.0.0.3.bmp', 6),
(87, 'jki_lib_state_machine', 'The JKI State Machine™ is a template you can use for quickly creating your own LabVIEW applications. This is the very same template that is used by the JKI team, nearly every day, and is the result of years of refinement by our team of LabVIEW experts. We encourage you to post any questions or comments to the JKI Software Forums. There you will find an active community of JKI software users, as well as JKI team members.\n\nHow to use:\n\nFind the JKI State Machine in the palettes\n1) Functions >> JKI Toolkits >> JKI State Machine\n\nUse QuickDrop to place a JKI State Machine on the block diagram\n1)  Press Control+Space then type \"JKI\"\n2) choose the \"JKI State Machine\" option that appears\n\nLaunch the JKI State Machine Explorer by either\r\nA) Right-click on a State String, Case Structure, or Event Structure to launch JKI SM Editor\r\nB) Press Control+Space then Control+J when you\'re on the block diagram of a VI containing a JKI SM\n\r\r\nUsing the Right-click menu on the JKI SM Parts for increased productivity:\r\n- Select an item in the tree to make that frame visible\r\n- Click back and forward to navigate the history\r\n- Drag and drop frames to reorganize the order\r\n- Right-click on items in the tree-view to rename, duplicate, delete, etc.\r\n- Right-click on a state string and choose Goto State Frame to jump to that frame of the JKI SM.\n- Right click on a state string or frame and choose Find Callers to find all callers of a state\n- Right-click on a bundle or unbundle by name and choose Find Data Accessors to find all accessors of the data.\r\n\r\nSpecial thanks to Jim Carmody for open sourcing his CaseSelect tool as a launching off point for the JKI SM Editor.', '', '0', 0, -1, 'JKI State Machine', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_state_machine/jki_lib_state_machine-2018.0.7.45.bmp', 6),
(88, 'jki_state_machine_editor', 'Makes working with the JKI State Machine very easy.\r\n\r\nHow to use:\r\n\r\nLaunching the Tool via Right-Click\r\n1) Right-click on a State String, Case Structure, or Event Structure to launch JKI SM Editor\r\n\r\nLaunching the Tool via QuickDrop:\r\n1) Select a Case Structure or Event Structure\r\n2) Press Control+Space then Control+J\r\n3) Enjoy increased productivity working with your Case/Event structure\r\n\r\nUsing the Tool:\r\n- Select an item in the tree to make that fram visible\r\n- Click back and forward to navigate the history\r\n- Drag and drop frames to reorganize the order\r\n- Right-click on items in the tree-view to rename, duplicate, delete, etc.\r\n- Right-click on a state string and choose Goto State Frame to jump to that frame of the JKI SM.\n- Right click on a state string or frame and choose Find Callers to find all callers of a state\n- Right-click on a bundle or unbundle by name and choose Find Data Accessors to find all accessors of the data.\r\n\r\nSpecial thanks to Jim Carmody for open sourcing his CaseSelect tool as a launching off point for the JKI SM Editor.', '', '0', 0, -1, 'JKI State Machine Editor', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.6.3.241.bmp', 6),
(89, 'jki_statemachineobjects', 'The JKI State Machine Objects (SMO) for LabVIEW is an easy-to-use yet powerful object-oriented framework, based on the JKI State Machine. It is the very same framework that is used by the JKI team in our everyday project work, and is the result of years of refinement by our team of LabVIEW experts.\r\n\r\n<b>Get the Source Code:</b>\r\nAll the source code is available on our GitHub repository (https://github.com/JKISoftware/JKI-State-Machine-Objects) where you can download the framework and make your own changes. You can also download the built package.\r\n\r\n<b>Discuss by Asking Questions & Presenting Your Ideas:</b>\r\nThe JKI SMO NI Community Group (https://decibel.ni.com/content/groups/jki-state-machine-objects) is a great place to have discussions about your ideas and feedback.', '', '0', 0, -1, 'JKI State Machine Objects (SMO)', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.3.0.56.bmp', 6),
(90, 'jki_lib_unicode', '', '', '0', 0, -1, 'JKI Unicode', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_unicode/jki_lib_unicode-1.0.0.7.bmp', 6),
(91, 'jki_labs_tool_vi_tester-1.1.2.164', 'JKI VI Tester is a unit test framework for LabVIEW based on xUnit test framework patterns.\n\n-= Release Notes =-\nFixes all known issues (Cases: 6811, 6953, 7056, 7057, 7883, 8072, 9425)', '', '0', 0, -1, 'jki_labs_tool_vi_tester', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_labs_tool_vi_tester/jki_labs_tool_vi_tester-1.1.2.164-1.bmp', 6),
(92, 'jki_labs_tool_vi_tester-1.1.2.274', 'JKI VI Tester is a unit test framework for LabVIEW based on xUnit test framework patterns.\n\n-= Release Notes =-\n[Fix] Template Instantiation updated.', '', '0', 0, -1, 'jki_labs_tool_vi_tester', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_labs_tool_vi_tester/jki_labs_tool_vi_tester-1.1.2.274-1.bmp', 6),
(93, 'jki_labs_tool_vi_tester-2.0.0.285', 'JKI VI Tester is a unit test framework for LabVIEW based on xUnit test framework patterns.\n\n-= Release Notes =-\n- Released under BSD open source license\n- Source code and project moved to GitHub', '', '0', 0, -1, 'jki_labs_tool_vi_tester', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_labs_tool_vi_tester/jki_labs_tool_vi_tester-2.0.0.285-1.bmp', 6),
(94, 'jki_labs_tool_vi_tester-3.0.0.292', 'JKI VI Tester is a unit test framework for LabVIEW based on xUnit test framework patterns.\n\n-= Release Notes =-\n- [NEW #35] Upgraded sources to LabVIEW 2013\n- [FIX #27] Sort Recent Files by time relevance\n- [NEW #28] Template Tests Should Have Compiled Code Seperated\n- [FIX #34] Some reference types lost when passed from setup to test VI\n- [NEW #36] Separate compiled source on all VIs', '', '0', 0, -1, 'jki_labs_tool_vi_tester', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_labs_tool_vi_tester/jki_labs_tool_vi_tester-3.0.0.292-1.bmp', 6),
(95, 'jki_labs_tool_vi_tester-3.0.2.294', 'JKI VI Tester is a unit test framework for LabVIEW based on xUnit test framework patterns.\n\n-= Release Notes =-\n- [NEW #35] Upgraded sources to LabVIEW 2013\n- [FIX #27] Sort Recent Files by time relevance\n- [NEW #28] Template Tests Should Have Compiled Code Seperated\n- [FIX #34] Some reference types lost when passed from setup to test VI\n- [NEW #36] Separate compiled source on all VIs\n- [NEW #38] Allow skipping tests from setUp.vi - tests will now be skipped if skip.vi is called inside setUp.vi\n- [FIX #39] Some reference types lost when created in TestSuite.lvclass:setUp.vi', '', '0', 0, -1, 'jki_labs_tool_vi_tester', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_labs_tool_vi_tester/jki_labs_tool_vi_tester-3.0.2.294-1.bmp', 6),
(96, 'jki_labs_tool_vi_tester-1.0.0.70', 'JKI VI Tester', '', '0', 0, -1, 'jki_labs_tool_vi_tester-1.0.0.70', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/jki_labs_tool_vi_tester-1.0.0.70-1.bmp', 6),
(97, 'jki_labs_tool_vi_tester-1.1.0.121', 'JKI VI Tester', '', '0', 0, -1, 'jki_labs_tool_vi_tester-1.1.0.121', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/jki_labs_tool_vi_tester-1.1.0.121-1.bmp', 6),
(98, 'jki_labs_tool_vi_tester-1.1.1.137', 'JKI VI Tester\n\n-= Release Notes =-\n[FIXED] Case 7650: Added project environment integration in LabVIEW 2009.', '', '0', 0, -1, 'jki_labs_tool_vi_tester-1.1.1.137', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_labs_tool_vi_tester/jki_labs_tool_vi_tester-1.1.1.137-1.bmp', 6),
(99, 'jki_lib_easyxml-1.0', 'Toolkit to easily flatten and unflatten LabVIEW data to and from XML.', '', '0', 0, -1, 'jki_lib_easyxml-1.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/jki_lib_easyxml-1.0-1.bmp', 6),
(100, 'jki_lib_easyxml-2.0', 'Toolkit to easily flatten and unflatten LabVIEW data to and from XML.', '', '0', 0, -1, 'jki_lib_easyxml-2.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_easyxml/jki_lib_easyxml-2.0-1.bmp', 6),
(101, 'jki_lib_rcf_create_enum_from_string-1.0.1', 'Create an Enum from a String, an Array of String, a String Constant, or an Array of String constant.\n\n-= Release Notes =-\nFirst Release', '', '0', 0, -1, 'jki_lib_rcf_create_enum_from_string-1.0.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_rcf_create_enum_from_string/jki_lib_rcf_create_enum_from_string-1.0.1-1.bmp', 6),
(102, 'jki_lib_rcf_create_enum_on_disabled_property-1.0.1', 'Creates an enum for a Control\'s \"Disabled\" property with the values \"enabled\", \"disabled\", and \"grayed out\".\n\n\n-= Release Notes =-\nFirst Release', '', '0', 0, -1, 'jki_lib_rcf_create_enum_on_disabled_property-1.0.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_rcf_create_enum_on_disabled_property/jki_lib_rcf_create_enum_on_disabled_property-1.0.1-1.bmp', 6),
(103, 'jki_lib_rcf_disconnect_from_typedef_recursive-1.0.1', 'Recursively disconnects a control, indicator, or constant from type definitions.\n\n-= Release Notes =-\nFirst Release', '', '0', 0, -1, 'jki_lib_rcf_disconnect_from_typedef_recursive-1.0.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_rcf_disconnect_from_typedef_recursive/jki_lib_rcf_disconnect_from_typedef_recursive-1.0.1-1.bmp', 6),
(104, 'jki_lib_rcf_justify_text-1.0.1', 'Justifies text of string controls, indicators, constants, and labels.\n\n-= Release Notes =-\nFirst Release', '', '0', 0, -1, 'jki_lib_rcf_justify_text-1.0.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_rcf_justify_text/jki_lib_rcf_justify_text-1.0.1-1.bmp', 6),
(105, 'jki_lib_rcf_wire_error_case_structure-1.2.1', 'Allows you to wrap a block of code in a Case Structure and then right-click on the Case Structure to convert it to an Error Case Structure (wires the error cluster to the Case Selector terminal and wires the error through the Error frame).\n\n-= Release Notes =-\nFirst Release', '', '0', 0, -1, 'jki_lib_rcf_wire_error_case_structure-1.2.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_rcf_wire_error_case_structure/jki_lib_rcf_wire_error_case_structure-1.2.1-1.bmp', 6),
(106, 'jki_lib_state_machine-2.0.0', 'The JKI State Machine™ is a template you can use for quickly creating your own LabVIEW applications. This is the very same template that is used by the JKI team, nearly every day, and is the result of years of refinement by our team of LabVIEW experts. We encourage you to post any questions or comments to the JKI Software Forums. There you will find an active community of JKI software users, as well as JKI team members.', '', '0', 0, -1, 'jki_lib_state_machine-2.0.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/jki_lib_state_machine-2.0.0-1.bmp', 6),
(107, 'jki_rsc_toolkits_palette-1.1', 'JKI Toolkits Palette', '', '0', 0, -1, 'jki_rsc_toolkits_palette-1.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/jki_rsc_toolkits_palette-1.1-1.bmp', 6),
(108, 'jki_tool_right_click_framework-1.0.0.189', 'The JKI Right-Click Framework for LabVIEW is an amazing tool that allows you to create new features in LabVIEW and use new features created by other developers.  It does this using the power of LabVIEW Scripting (using LabVIEW to programmatically edit LabVIEW code).\n\n-= Release Notes =-\nFirst Release', '', '0', 0, -1, 'jki_tool_right_click_framework-1.0.0.189', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_tool_right_click_framework/jki_tool_right_click_framework-1.0.0.189-1.bmp', 6),
(109, 'jki_tool_right_click_framework-1.0.1.199', 'The JKI Right-Click Framework for LabVIEW is an amazing tool that allows you to create new features in LabVIEW and use new features created by other developers.  It does this using the power of LabVIEW Scripting (using LabVIEW to programmatically edit LabVIEW code).\n\n-= Release Notes =-\n[Bug Fix] case 7738: \"Mass compile widow is stuck\"\n[Bug Fix] case 7742: \"Some plugin icons dissappear when selected\"\n[Bug Fix] case 7748: \"Plugin icon transparency is showing as black\"\n[Bug Fix] case 7746: \"Not all selected object are included in the RCF active selection area.\"\n[Change] The new default selection color is blue and is only 80% transparent.', '', '0', 0, -1, 'jki_tool_right_click_framework-1.0.1.199', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_tool_right_click_framework/jki_tool_right_click_framework-1.0.1.199-1.bmp', 6),
(110, 'jki_tool_right_click_framework-1.0.2.208', 'The JKI Right-Click Framework for LabVIEW is an amazing tool that allows you to create new features in LabVIEW and use new features created by other developers.  It does this using the power of LabVIEW Scripting (using LabVIEW to programmatically edit LabVIEW code).\n\n-= Release Notes =-\n[Bug Fix] case 7654: \"RCF not working in LV2009\"\n[Bug Fix] Plugin source browse button was set for existing file instead of existing folder\n[Feature] case 7778: \"Enable/Disable source plugins checkbox on options dialog\"', '', '0', 0, -1, 'jki_tool_right_click_framework-1.0.2.208', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_tool_right_click_framework/jki_tool_right_click_framework-1.0.2.208-1.bmp', 6),
(111, 'jki_tool_tortoisesvn-2.0.0.119', 'The JKI TortoiseSVN Tool for LabVIEW adds a TortoiseSVN submenu to the Tools menu, allowing access to common TSVN operations from within LabVIEW.\n\n-= Release Notes =-\nFirst public release.', '', '0', 0, -1, 'jki_tool_tortoisesvn-2.0.0.119', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_tool_tortoisesvn/jki_tool_tortoisesvn-2.0.0.119-1.bmp', 6),
(112, 'jki_tool_tortoisesvn-2.0.1.135', 'The JKI TortoiseSVN Tool for LabVIEW adds a TortoiseSVN submenu to the Tools menu, allowing access to common TSVN operations from within LabVIEW.\n\n-= Release Notes =-\n[FIX] Case 7602: Some SVN folder types were not detected properly.', '', '0', 0, -1, 'jki_tool_tortoisesvn-2.0.1.135', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_tool_tortoisesvn/jki_tool_tortoisesvn-2.0.1.135-1.bmp', 6),
(113, '@mgi/json', 'Fast and flexible JSON Parsing.', '', '0', 0, -1, 'json', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(114, 'felipefoz_lib_json_pretty_printer', '<b>Installation and Usage</b>\n- Just drop this library in your project.\n\n<b>Compatibility and Dependencies</b>\n- There are no dependencies.\n\n<b>Additional Information</b>\n- VI Analyzer passed.\n- Works on RT.\n- It does not validate your JSON string.', '', '0', 0, -1, 'JSON Pretty Printer', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/felipefoz_lib_json_pretty_printer/felipefoz_lib_json_pretty_printer-0.1.1.6.bmp', 6),
(115, '@mgi/json-rpc', 'A LabVIEW implementation of the JSON RPC Spec', '', '0', 0, -1, 'json-rpc', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(116, '@mgi/jwt', 'Encodes and decodes JSON Web Tokens', '', '0', 0, -1, 'jwt', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(117, 'jki_tool_labview_icon_version_overlay', '= About =\nThis package applies a four digit year overlay (e.g. the text \"2009\" in orange font) to the LabVIEW EXE program icon (similar to LabVIEW 2014 icon). This package  was inspired by the LabVIEW idea exchange idea posted by the great @dnatt here:\nhttp://forums.ni.com/t5/LabVIEW-Idea-Exchange/Include-LabVIEW-Version-Number-in-Application-Icon/idi-p/1002117/page/2\n\n= Compatibility =\nThis package works on 32-bit LabVIEW 2009 through 2013 (on 32-bit or 64-bit Windows). When installed on LabVIEW 2014 or greater, the package will take no action (it does not attempt to alter the icon, since LabVIEW 2014 and greater already have the year number in the icon).\n\n= UNINSTALLATION INSTRUCTIONS = \nTo remove the icon overlay, run the batch file located here (this should be done *prior* to uninstalling the package, since uninstalling the package will remove the files):\n<LabVIEW>\\project\\_lv_icon_overlay\\restore_icon.bat', '', '0', 0, -1, 'LabVIEW Icon Version Overlay', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_tool_labview_icon_version_overlay/jki_tool_labview_icon_version_overlay-1.0.0.15.bmp', 6),
(118, 'lava_lib_labview_api_scripting_tools', 'This is a LabVIEW 8.6.1 Library of VIs to help with scripting.\n\nThe public VIs include routines to get hold of the block diagram references, control terminal references, get the connector pane reference and select the connector pane pattern and wire controls up to it. There are a number of routines to help wire the block diagram up, including creating a selection of the primitives (I got bored of coding them all up !).\n\nI\'ve stuck in some routines that work with tags - hidden away is the capability to tag LabVIEW vi-server objects with arbitary data. One possibility is to use this to identify bits of the block diagram of a vi for moving and rewiring via scripting.\n\nThe scripting Tools includes a separate XNode support library that provides routines to help scripting and terminal adaptation in XNodes.\n\nThere are some routines to help with undo transactions new to this release.\n\nNB If you are installing this with the Array XNodes (also from the Code repository) then I strongly recommend unzipping the two files into the same common directory and preserving the names. That should help linkage problems. \n\n', '', '0', 0, -1, 'lava_lib_LabVIEW_API_scripting_tools', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/lava_lib_labview_api_scripting_tools/lava_lib_labview_api_scripting_tools-0.24.0.24.bmp', 6),
(119, 'lavag_lib_user_interface_xcontrole_multi_segment_ramp_xcontrol', 'A multi-segment ramp provides a waveform that the user defines in terms of a series of linear ramp segments with a target and either a step size or ramp rate. The start of each segment is the endpoint of the preceeding segment except for the first segment which has a defined start value.\n\nThe XControl supports the concept of each segment being \"active\" for a measurement.\n\nThe programmed waveform is shown on a preview tab as a plot showing the individual steps and colour coding the segments depending on whether they are active or not.\n\nThe XControl can keep track of a \'current position\' marker that can be drawn and updated on the preview pane.\n\nThe format and units used to program the wavefore can be set by properties and methods, the control and be programmed with a wavefore via a method. Import and export of waveform definitions can be carried out by the user with the import/exprt being to a JSON file.', '', '0', 0, -1, 'lavag_lib_User_Interface_XControls_multi-segment-ramp_xcontrol', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/lavag_lib_user_interface_xcontrole_multi_segment_ramp_xcontrol/lavag_lib_user_interface_xcontrole_multi_segment_ramp_xcontrol-1.7.0.34.bmp', 6),
(120, 'lavag_lib_user_interface_xcontrole_waveform_xcontrol', 'Provides a drop in function generator that lets the user construct and view a waveform on screen. Provides methods to hide and show an x-axis, x and y scales and to show  a \'marker\' on the waveform to indicate a current position or progress.', '', '0', 0, -1, 'lavag_lib_User_Interface_XControls_waveform_xcontrol', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/lavag_lib_user_interface_xcontrole_waveform_xcontrol/lavag_lib_user_interface_xcontrole_waveform_xcontrol-1.2.0.18.bmp', 6),
(121, '@mgi/library-core', 'Basic helpful reuse VIs', '', '0', 0, -1, 'library-core', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(122, 'field_rnd_services_libssh2', 'Adds SSH client support to LabVIEW using the libssh2 library', '', '0', 0, -1, 'LIBSSH2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/field_rnd_services_libssh2/field_rnd_services_libssh2-1.0.0.20.bmp', 6),
(123, '@cs/linked-list', 'A malleable, by reference, linked list', '', '0', 0, -1, 'linked-list', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(124, 'mediamongrels_lib_linx_raspberry_pi_addons', 'An open source collection of libraries for communicating with hardware on the Raspberry Pi/BeagleBone using LabVIEW and the LINX Toolkit developed/curated/maintained by Sam Sharp of MediaMongrels.\n\nSupports a wide range of hats such as the Automation Hat, Sense Hat, Explorer Hat Pro as well as a range of chips for ADC/DAC/Environmental/PWM sensors etc.\n\nChips supported include:\nADS1015/1115/1256 ADC\nSN3218 LED/PWM driver\nPCA9685 PWM driver\nDAC8552 DAC\nLSM9DS1 9DOF IMU\nHTS221 / LPS25H environmental sensors\nAnd much more!\n\nSee the GitHub repository for latest information: https://github.com/MediaMongrels-Ltd/RPi-LINX-Addons', '', '0', 0, -1, 'LINX Raspberry Pi Addons', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/mediamongrels_lib_linx_raspberry_pi_addons/mediamongrels_lib_linx_raspberry_pi_addons-1.0.0.1.bmp', 6),
(125, '@cs/listbox', 'You can do more with listboxes (while writing less code)', '', '0', 0, -1, 'listbox', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(126, '@cs/lookup-table', 'A malleable, by-reference, lookup table API with in-placeness optimization and type abilities', '', '0', 0, -1, 'lookup-table', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(127, '@mgi/markdown-error-log', 'Writes LabVIEW errors to a markdown file.', '', '0', 0, -1, 'markdown-error-log', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(128, '@mgi/markdown-error-logger-panel', 'Logs errors to a markdown file and displays a preview.', '', '0', 0, -1, 'markdown-error-logger-panel', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(129, '@mgi/markdown-viewer', 'Displays Rendered Markdown', '', '0', 0, -1, 'markdown-viewer', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(130, 'erencan_tayanc_lib_material_icons_pack', '', '', '0', 0, -1, 'Material Icons Pack', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/erencan_tayanc_lib_material_icons_pack/erencan_tayanc_lib_material_icons_pack-1.0.0.2.bmp', 6),
(131, '@mgi/mdi-panels', 'Provides a Multiple Document Interface (MDI) extension for the MGI Panel Manager Framework.', '', '0', 0, -1, 'mdi-panels', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(132, '@mgi/monitored-actor', 'Provides a quick way to visual actor based applications', '', '0', 0, -1, 'monitored-actor', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(133, '@mgi/monitored-actor-core', 'The core functionality to monitor actors', '', '0', 0, -1, 'monitored-actor-core', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(134, '@s5/mru', 'LabVIEW library for automating a Most-Recently-Used list. Ties a Combo Box to an INI file.', '', '0', 0, -1, 'mru', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(135, '@mgi/multi-panel-error-reporter', 'Combine multiple error reporters into a single panel', '', '0', 0, -1, 'multi-panel-error-reporter', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5);
INSERT INTO `package` (`id`, `name`, `description`, `version`, `url`, `downloads`, `avg_rating`, `display_name`, `icon_url`, `repo_id`) VALUES
(136, 'lv_muparser', 'This package provides a simple API for calling the muParser Fast Math Expression Parser (http://beltoforion.de/article.php?a=muparser).\n\nA modified version of muParser v2.2.5 will be installed to your \"<LabVIEW>\\resource\" directory. \n\nModifications to muParser include:\n- Support for the \"!\" (not) operator\n- Support for \":\" as a valid character for variable names.', '', '0', 0, -1, 'muParser Expression Parser API', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/lv_muparser/lv_muparser-2.0.1.1.bmp', 6),
(137, '@cs/mva-core', 'Core framework components to run a headless MVA application on a PC or real-time target', '', '0', 0, -1, 'mva-core', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(138, '@cs/mva-dialogbox', 'An extension for MVA-Viewable (the view component that can be installed with a dependency on MVA-Core) that defines an extension point for Dialog Boxes.', '', '0', 0, -1, 'mva-dialogbox', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(139, '@cs/mva-framework', 'An Actor-based Separation-of-Concerns framework (MVVM) for very cool LabVIEW developers', '', '0', 0, -1, 'mva-framework', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(140, '@cs/mva-message-mapper', 'This is a static code analyis tool for understanding the locations of publishers and subscribers of MVA data. ', '', '0', 0, -1, 'mva-message-mapper', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(141, '@cs/mva-viewable', 'User interface components for building a complete MVA Framework separation of concerns application', '', '0', 0, -1, 'mva-viewable', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(142, '@cs/mva-viewmanager', 'An extension for MVA-Viewable that provides concrete ViewManagers', '', '0', 0, -1, 'mva-viewmanager', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(143, '@cs/network-sink', 'The network sink is an add on to @cs/event-logger. This package facilitates transmission of log entries across a network to be logged in another log instance.', '', '0', 0, -1, 'network-sink', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(144, 'ni-syslog', 'The Syslog protocol is a simple UDP communication standard for sending messages from distributed systems and processes to a central collector for logging and later analysis. It can be used for debugging embedded and distributed applications by sending simple messages from the embedded code to a separate system running the syslog collector, also called the syslog server or daemon.', '', '0', 0, -1, 'ni-syslog', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(145, 'ni_goop_wizard-1.0', 'NI GOOP 1.0 Wizard.', '', '0', 0, -1, 'ni_goop_wizard-1.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ni_goop_wizard-1.0-1.bmp', 6),
(146, 'nilib_rectangle-1.0', 'The NI Rectangle Tools package adds a subpalette to the picture control palette that contains vi.lib rectangle support library VIs.', '', '0', 0, -1, 'nilib_rectangle-1.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/nilib_rectangle-1.0-1.bmp', 6),
(147, 'nilib_rectangle-1.1', 'The NI Rectangle Tools package adds a subpalette to the picture control palette that contains vi.lib rectangle support library VIs.', '', '0', 0, -1, 'nilib_rectangle-1.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/nilib_rectangle-1.1-1.bmp', 6),
(148, 'nilib_rectangle-1.2', 'The NI Rectangle Tools package adds a subpalette to the picture control palette that contains vi.lib rectangle support library VIs.', '', '0', 0, -1, 'nilib_rectangle-1.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/nilib_rectangle-1.2-1.bmp', 6),
(149, 'nirsc_html_help_common-1.0', 'common files for OpenG help documentation', '', '0', 0, -1, 'nirsc_html_help_common-1.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/nirsc_html_help_common-1.0-1.bmp', 6),
(150, 'nirsc_html_help_common-2.0', 'common files for OpenG help documentation', '', '0', 0, -1, 'nirsc_html_help_common-2.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/nirsc_html_help_common-2.0-1.bmp', 6),
(151, '@mgi/odbc-database', 'Provides a database interface for working with ODBC database connections.', '', '0', 0, -1, 'odbc-database', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(152, 'ogctl_buttons-2.1', 'The buttons package contains various button controls.', '', '0', 0, -1, 'ogctl_buttons-2.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogctl_buttons-2.1-1.bmp', 6),
(153, 'ogctl_buttons-2.2', 'The buttons package contains various button controls.', '', '0', 0, -1, 'ogctl_buttons-2.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogctl_buttons-2.2-1.bmp', 6),
(154, 'ogctl_buttons-2.3', 'The buttons package contains various button controls.', '', '0', 0, -1, 'ogctl_buttons-2.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogctl_buttons-2.3-1.bmp', 6),
(155, 'ogedit_birds_eye_view-1.6', 'The Bird\'s Eye View utility allows panning and zooming of VIs block diagram and front panel.', '', '0', 0, -1, 'ogedit_birds_eye_view-1.6', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogedit_birds_eye_view-1.6-1.bmp', 6),
(156, 'ogedit_birds_eye_view-1.7', 'The Bird\'s Eye View utility allows panning and zooming of VIs block diagram and front panel.', '', '0', 0, -1, 'ogedit_birds_eye_view-1.7', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogedit_birds_eye_view-1.7-2.bmp', 6),
(157, 'ogedit_file_locate_in_project-1.0.0.3', 'Adds a \'Locate in Project\' option to the File menu', '', '0', 0, -1, 'ogedit_file_locate_in_project-1.0.0.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogedit_file_locate_in_project-1.0.0.3-1.bmp', 6),
(158, 'ogfwk_opengoop-0.10', 'The OpenGOOP package is a utility for creating OpenG flavorded GOOP objects.', '', '0', 0, -1, 'ogfwk_opengoop-0.10', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogfwk_opengoop-0.10-1.bmp', 6),
(159, 'ogfwk_opengoop-0.8', 'The OpenGOOP package is a utility for creating OpenG flavorded GOOP objects.', '', '0', 0, -1, 'ogfwk_opengoop-0.8', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogfwk_opengoop-0.8-1.bmp', 6),
(160, 'ogfwk_opengoop-0.9', 'The OpenGOOP package is a utility for creating OpenG flavorded GOOP objects.', '', '0', 0, -1, 'ogfwk_opengoop-0.9', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogfwk_opengoop-0.9-1.bmp', 6),
(161, 'oglib_appcontrol-2.0', 'The appcontrol package contains several routines application control.', '', '0', 0, -1, 'oglib_appcontrol-2.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_appcontrol-2.0-1.bmp', 6),
(162, 'oglib_appcontrol-2.1', 'The appcontrol package contains several routines application control.', '', '0', 0, -1, 'oglib_appcontrol-2.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_appcontrol-2.1-1.bmp', 6),
(163, 'oglib_appcontrol-2.10', 'The appcontrol package contains several routines application control.', '', '0', 0, -1, 'oglib_appcontrol-2.10', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_appcontrol-2.10-1.bmp', 6),
(164, 'oglib_appcontrol-2.2', 'The appcontrol package contains several routines application control.', '', '0', 0, -1, 'oglib_appcontrol-2.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_appcontrol-2.2-1.bmp', 6),
(165, 'oglib_appcontrol-2.3', 'The appcontrol package contains several routines application control.', '', '0', 0, -1, 'oglib_appcontrol-2.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_appcontrol-2.3-1.bmp', 6),
(166, 'oglib_appcontrol-2.4', 'The appcontrol package contains several routines application control.', '', '0', 0, -1, 'oglib_appcontrol-2.4', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_appcontrol-2.4-1.bmp', 6),
(167, 'oglib_appcontrol-2.5', 'The appcontrol package contains several routines application control.', '', '0', 0, -1, 'oglib_appcontrol-2.5', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_appcontrol-2.5-1.bmp', 6),
(168, 'oglib_appcontrol-2.6', 'The appcontrol package contains several routines application control.', '', '0', 0, -1, 'oglib_appcontrol-2.6', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_appcontrol-2.6-1.bmp', 6),
(169, 'oglib_appcontrol-2.7', 'The appcontrol package contains several routines application control.', '', '0', 0, -1, 'oglib_appcontrol-2.7', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_appcontrol-2.7-1.bmp', 6),
(170, 'oglib_appcontrol-2.8', 'The appcontrol package contains several routines application control.', '', '0', 0, -1, 'oglib_appcontrol-2.8', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_appcontrol-2.8-1.bmp', 6),
(171, 'oglib_appcontrol-2.9', 'The appcontrol package contains several routines application control.', '', '0', 0, -1, 'oglib_appcontrol-2.9', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_appcontrol-2.9-1.bmp', 6),
(172, 'oglib_array-2.0', 'The array package contains several routines for operating on array data.', '', '0', 0, -1, 'oglib_array-2.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_array-2.0-1.bmp', 6),
(173, 'oglib_array-2.1', 'The array package contains several routines for operating on array data.', '', '0', 0, -1, 'oglib_array-2.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_array-2.1-1.bmp', 6),
(174, 'oglib_array-2.2', 'The array package contains several routines for operating on array data.', '', '0', 0, -1, 'oglib_array-2.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_array-2.2-1.bmp', 6),
(175, 'oglib_array-2.3', 'The array package contains several routines for operating on array data.', '', '0', 0, -1, 'oglib_array-2.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_array-2.3-1.bmp', 6),
(176, 'oglib_array-2.4', 'The array package contains several routines for operating on array data.', '', '0', 0, -1, 'oglib_array-2.4', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_array-2.4-1.bmp', 6),
(177, 'oglib_array-2.5', 'The array package contains several routines for operating on array data.', '', '0', 0, -1, 'oglib_array-2.5', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_array-2.5-1.bmp', 6),
(178, 'oglib_array-2.6', 'The array package contains several routines for operating on array data.', '', '0', 0, -1, 'oglib_array-2.6', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_array-2.6-1.bmp', 6),
(179, 'oglib_array-2.7', 'The array package contains several routines for operating on array data.', '', '0', 0, -1, 'oglib_array-2.7', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_array-2.7-1.bmp', 6),
(180, 'oglib_array-3.0.0', 'The array package contains several routines for operating on array data.', '', '0', 0, -1, 'oglib_array-3.0.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_array/oglib_array-3.0.0-1.bmp', 6),
(181, 'oglib_boolean-2.0', 'The boolean package contains several routines for operating on Booleans.', '', '0', 0, -1, 'oglib_boolean-2.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_boolean-2.0-1.bmp', 6),
(182, 'oglib_boolean-2.1', 'The boolean package contains several routines for operating on Booleans.', '', '0', 0, -1, 'oglib_boolean-2.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_boolean-2.1-1.bmp', 6),
(183, 'oglib_boolean-2.2', 'The boolean package contains several routines for operating on Booleans.', '', '0', 0, -1, 'oglib_boolean-2.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_boolean-2.2-1.bmp', 6),
(184, 'oglib_boolean-2.3', 'The boolean package contains several routines for operating on Booleans.', '', '0', 0, -1, 'oglib_boolean-2.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_boolean-2.3-1.bmp', 6),
(185, 'oglib_comparison-2.0', 'The comparison package contains several routines for comparing data.', '', '0', 0, -1, 'oglib_comparison-2.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_comparison-2.0-1.bmp', 6),
(186, 'oglib_comparison-2.1', 'The comparison package contains several routines for comparing data.', '', '0', 0, -1, 'oglib_comparison-2.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_comparison-2.1-1.bmp', 6),
(187, 'oglib_comparison-2.2', 'The comparison package contains several routines for comparing data.', '', '0', 0, -1, 'oglib_comparison-2.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_comparison-2.2-1.bmp', 6),
(188, 'oglib_comparison-2.3', 'The comparison package contains several routines for comparing data.', '', '0', 0, -1, 'oglib_comparison-2.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_comparison-2.3-2.bmp', 6),
(189, 'oglib_dictionary-1.0', 'The dictionary package contains a library for key-value sets.', '', '0', 0, -1, 'oglib_dictionary-1.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_dictionary-1.0-1.bmp', 6),
(190, 'oglib_dictionary-1.1', 'The dictionary package contains a library for key-value sets.', '', '0', 0, -1, 'oglib_dictionary-1.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_dictionary-1.1-2.bmp', 6),
(191, 'oglib_error-2.0', 'The error package contains several routines related to error handling.', '', '0', 0, -1, 'oglib_error-2.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_error-2.0-1.bmp', 6),
(192, 'oglib_error-2.1', 'The error package contains several routines related to error handling.', '', '0', 0, -1, 'oglib_error-2.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_error-2.1-1.bmp', 6),
(193, 'oglib_error-2.2', 'The error package contains several routines related to error handling.', '', '0', 0, -1, 'oglib_error-2.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_error-2.2-1.bmp', 6),
(194, 'oglib_error-2.3', 'The error package contains several routines related to error handling.', '', '0', 0, -1, 'oglib_error-2.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_error-2.3-1.bmp', 6),
(195, 'oglib_file-2.0', 'The file package contains several routines for operating on files.', '', '0', 0, -1, 'oglib_file-2.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_file-2.0-1.bmp', 6),
(196, 'oglib_file-2.1', 'The file package contains several routines for operating on files.', '', '0', 0, -1, 'oglib_file-2.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_file-2.1-1.bmp', 6),
(197, 'oglib_file-2.2', 'The file package contains several routines for operating on files.', '', '0', 0, -1, 'oglib_file-2.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_file-2.2-1.bmp', 6),
(198, 'oglib_file-2.3', 'The file package contains several routines for operating on files.', '', '0', 0, -1, 'oglib_file-2.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_file-2.3-1.bmp', 6),
(199, 'oglib_file-2.4', 'The file package contains several routines for operating on files.', '', '0', 0, -1, 'oglib_file-2.4', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_file-2.4-1.bmp', 6),
(200, 'oglib_file-2.5', 'The file package contains several routines for operating on files.', '', '0', 0, -1, 'oglib_file-2.5', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_file-2.5-1.bmp', 6),
(201, 'oglib_file-2.6', 'The file package contains several routines for operating on files.', '', '0', 0, -1, 'oglib_file-2.6', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_file-2.6-1.bmp', 6),
(202, 'oglib_file-2.7', 'The file package contains several routines for operating on files.', '', '0', 0, -1, 'oglib_file-2.7', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_file-2.7-1.bmp', 6),
(203, 'oglib_file-2.8', 'The file package contains several routines for operating on files.', '', '0', 0, -1, 'oglib_file-2.8', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_file-2.8-2.bmp', 6),
(204, 'oglib_file-3.0.1', 'The file package contains several routines for operating on files.\n\n[Release Notes]\n* Fixes issues with errors generated when setting read-only permissions in LabVIEW 2009.\n* Package sources upgraded to LabVIEW 8.2 (package now compatible with LV8.2 or greater).', '', '0', 0, -1, 'oglib_file-3.0.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_file/oglib_file-3.0.1-1.bmp', 6),
(205, 'oglib_largefile-1.0', 'The largefile package contains several routines for operating on files over 2GB.', '', '0', 0, -1, 'oglib_largefile-1.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_largefile-1.0-1.bmp', 6),
(206, 'oglib_largefile-1.1', 'The largefile package contains several routines for operating on files over 2GB.', '', '0', 0, -1, 'oglib_largefile-1.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_largefile-1.1-1.bmp', 6),
(207, 'oglib_largefile-1.2', 'The largefile package contains several routines for operating on files over 2GB.', '', '0', 0, -1, 'oglib_largefile-1.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_largefile-1.2-1.bmp', 6),
(208, 'oglib_largefile-1.3', 'The largefile package contains several routines for operating on files over 2GB.', '', '0', 0, -1, 'oglib_largefile-1.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_largefile-1.3-1.bmp', 6),
(209, 'oglib_largefile-1.4', 'The largefile package contains several routines for operating on files over 2GB.', '', '0', 0, -1, 'oglib_largefile-1.4', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_largefile-1.4-1.bmp', 6),
(210, 'oglib_lvdata-2.0', 'This library contains several routines for operating on variant data and type descriptors.', '', '0', 0, -1, 'oglib_lvdata-2.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_lvdata-2.0-1.bmp', 6),
(211, 'oglib_lvdata-2.1', 'This library contains several routines for operating on variant data and type descriptors.', '', '0', 0, -1, 'oglib_lvdata-2.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_lvdata-2.1-1.bmp', 6),
(212, 'oglib_lvdata-2.2', 'This library contains several routines for operating on variant data and type descriptors.', '', '0', 0, -1, 'oglib_lvdata-2.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_lvdata-2.2-1.bmp', 6),
(213, 'oglib_lvdata-2.3', 'This library contains several routines for operating on variant data and type descriptors.', '', '0', 0, -1, 'oglib_lvdata-2.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_lvdata-2.3-1.bmp', 6),
(214, 'oglib_lvdata-2.4', 'This library contains several routines for operating on variant data and type descriptors.', '', '0', 0, -1, 'oglib_lvdata-2.4', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_lvdata-2.4-1.bmp', 6),
(215, 'oglib_lvdata-2.5', 'This library contains several routines for operating on variant data and type descriptors.', '', '0', 0, -1, 'oglib_lvdata-2.5', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_lvdata-2.5-1.bmp', 6),
(216, 'oglib_lvdata-2.6', 'This library contains several routines for operating on variant data and type descriptors.', '', '0', 0, -1, 'oglib_lvdata-2.6', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_lvdata-2.6-1.bmp', 6),
(217, 'oglib_lvdata-2.7', 'This library contains several routines for operating on variant data and type descriptors.', '', '0', 0, -1, 'oglib_lvdata-2.7', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_lvdata-2.7-1.bmp', 6),
(218, 'oglib_lvdata-2.8', 'This library contains several routines for operating on variant data and type descriptors.', '', '0', 0, -1, 'oglib_lvdata-2.8', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_lvdata-2.8-1.bmp', 6),
(219, 'oglib_lvdata-2.9', 'This library contains several routines for operating on variant data and type descriptors.', '', '0', 0, -1, 'oglib_lvdata-2.9', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_lvdata-2.9-1.bmp', 6),
(220, 'oglib_lvzip-2.0', 'The lvzip package contains several routines for operating on zip files.', '', '0', 0, -1, 'oglib_lvzip-2.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_lvzip-2.0-1.bmp', 6),
(221, 'oglib_lvzip-2.1', 'The lvzip package contains several routines for operating on zip files.', '', '0', 0, -1, 'oglib_lvzip-2.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_lvzip-2.1-1.bmp', 6),
(222, 'oglib_lvzip-2.2', 'The lvzip package contains several routines for operating on zip files.', '', '0', 0, -1, 'oglib_lvzip-2.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_lvzip-2.2-1.bmp', 6),
(223, 'oglib_lvzip-2.3', 'The lvzip package contains several routines for operating on zip files.\r\nThe new version 2.2 adds support for appending files to an existing archive, deleting files from an archive and password support for adding and extracting files.', '', '0', 0, -1, 'oglib_lvzip-2.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_lvzip-2.3-1.bmp', 6),
(224, 'oglib_lvzip-2.4', 'The lvzip package contains several routines for operating on zip files.\r\nThe new version 2.2 adds support for appending files to an existing archive, deleting files from an archive and password support for adding and extracting files.\r\n\r\nVersion 2.3 adds support for transparent Mac Resource file handling through MacBinary encoding.\r\nVersion 2.4 adds support for direct memory stream handling.', '', '0', 0, -1, 'oglib_lvzip-2.4', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_lvzip-2.4-1.bmp', 6),
(225, 'oglib_lvzip-2.5', 'The lvzip package contains several routines for operating on zip files.\r\n\r\nVersion 2.5: Changes license of LabVIEW sources from LGPL to BSD, Adds Memory Stream VIs to the palettes, Optimizes ZLIB Extract All Files to Dir, Fixes potential problem where error such as out of disk on finishing to add a file into an archive might get lost meaning that a corrupted archive could result without the user being informed about it, Fixes issue preventing adding files specified by UNC network path to zip archive.\r\nVersion 2.4 adds support for direct memory stream handling.\r\nVersion 2.3 adds support for transparent Mac Resource file handling through MacBinary encoding.\r\nVersion 2.2 adds support for appending files to an existing archive, deleting files from an archive and password support for adding and extracting files.', '', '0', 0, -1, 'oglib_lvzip-2.5', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_lvzip/oglib_lvzip-2.5-1.bmp', 6),
(226, 'oglib_lvzip-2.5.1', 'The lvzip package contains several routines for operating on zip files.\r\n\r\nVersion 2.5.1: Fixes issue with broken VIs in LabVIEW 2009 due to calling (now) private config utilities.\r\nVersion 2.5: Changes license of LabVIEW sources from LGPL to BSD, Adds Memory Stream VIs to the palettes, Optimizes ZLIB Extract All Files to Dir, Fixes potential problem where error such as out of disk on finishing to add a file into an archive might get lost meaning that a corrupted archive could result without the user being informed about it, Fixes issue preventing adding files specified by UNC network path to zip archive.\r\nVersion 2.4 adds support for direct memory stream handling.\r\nVersion 2.3 adds support for transparent Mac Resource file handling through MacBinary encoding.\r\nVersion 2.2 adds support for appending files to an existing archive, deleting files from an archive and password support for adding and extracting files.', '', '0', 0, -1, 'oglib_lvzip-2.5.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_lvzip/oglib_lvzip-2.5.1-2.bmp', 6),
(227, 'oglib_md5-1.2', 'An MD5 Digest implementation.', '', '0', 0, -1, 'oglib_md5-1.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_md5-1.2-1.bmp', 6),
(228, 'oglib_md5-1.3', 'An MD5 Digest implementation.', '', '0', 0, -1, 'oglib_md5-1.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_md5-1.3-1.bmp', 6),
(229, 'oglib_md5-1.4', 'An MD5 Digest implementation.', '', '0', 0, -1, 'oglib_md5-1.4', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_md5-1.4-1.bmp', 6),
(230, 'oglib_md5-1.5', 'An MD5 Digest implementation.', '', '0', 0, -1, 'oglib_md5-1.5', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_md5-1.5-1.bmp', 6),
(231, 'oglib_md5-1.6', 'An MD5 Digest implementation.', '', '0', 0, -1, 'oglib_md5-1.6', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_md5-1.6-1.bmp', 6),
(232, 'oglib_msgqueue-2.0', 'The message queue generates a response notifier to reply to messages', '', '0', 0, -1, 'oglib_msgqueue-2.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_msgqueue-2.0-1.bmp', 6),
(233, 'oglib_msgqueue-2.1', 'The message queue generates a response notifier to reply to messages', '', '0', 0, -1, 'oglib_msgqueue-2.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_msgqueue-2.1-1.bmp', 6),
(234, 'oglib_msgqueue-2.2', 'The message queue generates a response notifier to reply to messages', '', '0', 0, -1, 'oglib_msgqueue-2.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_msgqueue-2.2-1.bmp', 6),
(235, 'oglib_msgqueue-2.3', 'The message queue generates a response notifier to reply to messages', '', '0', 0, -1, 'oglib_msgqueue-2.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_msgqueue-2.3-1.bmp', 6),
(236, 'oglib_msgqueue-3.0', 'The message queue generates a response notifier to reply to messages', '', '0', 0, -1, 'oglib_msgqueue-3.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_msgqueue-3.0-1.bmp', 6),
(237, 'oglib_numeric-2.0', 'The numeric package contains several routines for operating on numeric data.', '', '0', 0, -1, 'oglib_numeric-2.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_numeric-2.0-1.bmp', 6),
(238, 'oglib_numeric-2.1', 'The numeric package contains several routines for operating on numeric data.', '', '0', 0, -1, 'oglib_numeric-2.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_numeric-2.1-1.bmp', 6),
(239, 'oglib_numeric-2.2', 'The numeric package contains several routines for operating on numeric data.', '', '0', 0, -1, 'oglib_numeric-2.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_numeric-2.2-1.bmp', 6),
(240, 'oglib_numeric-2.3', 'The numeric package contains several routines for operating on numeric data.', '', '0', 0, -1, 'oglib_numeric-2.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_numeric-2.3-2.bmp', 6),
(241, 'oglib_picture-2.0', 'The picture package contains routines for operating on picture controls.', '', '0', 0, -1, 'oglib_picture-2.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_picture-2.0-1.bmp', 6),
(242, 'oglib_picture-2.1', 'The picture package contains routines for operating on picture controls.', '', '0', 0, -1, 'oglib_picture-2.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_picture-2.1-1.bmp', 6),
(243, 'oglib_picture-2.2', 'The picture package contains routines for operating on picture controls.', '', '0', 0, -1, 'oglib_picture-2.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_picture-2.2-1.bmp', 6),
(244, 'oglib_portio-1.0', 'The OpenG Port IO library supports direct access to hardware IO.\r\nIt comes with its own kernel device driver for Windows NT (NT4, W2K, WXP, W2003) systems, which will be installed automatically if not found to be present on the system already.', '', '0', 0, -1, 'oglib_portio-1.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_portio-1.0-1.bmp', 6),
(245, 'oglib_portio-1.1', 'The OpenG Port IO library supports direct access to hardware IO.\r\nIt comes with its own kernel device driver for Windows NT (NT4, W2K, WXP, W2003) systems, which will be installed automatically if not found to be present on the system already.', '', '0', 0, -1, 'oglib_portio-1.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_portio-1.1-1.bmp', 6),
(246, 'oglib_portio-1.2', 'The OpenG Port IO library supports direct access to hardware IO and physical memory.\r\nIt comes with its own kernel device driver for Windows NT (NT4, W2K, WXP, W2003) systems, which will be installed automatically if not found to be present on the system already.', '', '0', 0, -1, 'oglib_portio-1.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_portio-1.2-1.bmp', 6),
(247, 'oglib_string-2.0', 'The string package contains several routines for operating on strings.', '', '0', 0, -1, 'oglib_string-2.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_string-2.0-1.bmp', 6),
(248, 'oglib_string-2.1', 'The string package contains several routines for operating on strings.', '', '0', 0, -1, 'oglib_string-2.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_string-2.1-1.bmp', 6),
(249, 'oglib_string-2.2', 'The string package contains several routines for operating on strings.', '', '0', 0, -1, 'oglib_string-2.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_string-2.2-1.bmp', 6),
(250, 'oglib_string-2.3', 'The string package contains several routines for operating on strings.', '', '0', 0, -1, 'oglib_string-2.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_string-2.3-1.bmp', 6),
(251, 'oglib_string-2.4', 'The string package contains several routines for operating on strings.', '', '0', 0, -1, 'oglib_string-2.4', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_string-2.4-1.bmp', 6),
(252, 'oglib_string-2.5', 'The string package contains several routines for operating on strings.', '', '0', 0, -1, 'oglib_string-2.5', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_string-2.5-1.bmp', 6),
(253, 'oglib_string-2.6', 'The string package contains several routines for operating on strings.', '', '0', 0, -1, 'oglib_string-2.6', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_string-2.6-1.bmp', 6),
(254, 'oglib_time-2.0', 'The time package contains several routines related software timing.', '', '0', 0, -1, 'oglib_time-2.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_time-2.0-1.bmp', 6),
(255, 'oglib_time-2.1', 'The time package contains several routines related software timing.', '', '0', 0, -1, 'oglib_time-2.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_time-2.1-1.bmp', 6),
(256, 'oglib_time-2.2', 'The time package contains several routines related software timing.', '', '0', 0, -1, 'oglib_time-2.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_time-2.2-1.bmp', 6),
(257, 'oglib_time-2.3', 'The time package contains several routines related to software timing.', '', '0', 0, -1, 'oglib_time-2.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_time-2.3-1.bmp', 6),
(258, 'oglib_variantconfig-2.0', 'The variantconfig package contains tools for writing and reading variant data to and from INI files.', '', '0', 0, -1, 'oglib_variantconfig-2.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_variantconfig-2.0-1.bmp', 6),
(259, 'oglib_variantconfig-2.1', 'The variantconfig package contains tools for writing and reading variant data to and from INI files.', '', '0', 0, -1, 'oglib_variantconfig-2.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_variantconfig-2.1-1.bmp', 6),
(260, 'oglib_variantconfig-2.2', 'The variantconfig package contains tools for writing and reading variant data to and from INI files.', '', '0', 0, -1, 'oglib_variantconfig-2.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_variantconfig-2.2-1.bmp', 6),
(261, 'oglib_variantconfig-2.3', 'The variantconfig package contains tools for writing and reading variant data to and from INI files.', '', '0', 0, -1, 'oglib_variantconfig-2.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_variantconfig-2.3-1.bmp', 6),
(262, 'oglib_variantconfig-2.4', 'The variantconfig package contains tools for writing and reading variant data to and from INI files.', '', '0', 0, -1, 'oglib_variantconfig-2.4', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_variantconfig-2.4-1.bmp', 6),
(263, 'oglib_variantconfig-2.5', 'The variantconfig package contains tools for writing and reading variant data to and from INI files.', '', '0', 0, -1, 'oglib_variantconfig-2.5', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_variantconfig-2.5-1.bmp', 6),
(264, 'oglib_variantconfig-2.6', 'The variantconfig package contains tools for writing and reading variant data to and from INI files.', '', '0', 0, -1, 'oglib_variantconfig-2.6', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_variantconfig-2.6-1.bmp', 6),
(265, 'oglib_variantconfig-2.7', 'The variantconfig package contains tools for writing and reading variant data to and from INI files.', '', '0', 0, -1, 'oglib_variantconfig-2.7', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/oglib_variantconfig-2.7-1.bmp', 6),
(266, 'ogmnu_appcontrol_plus-0.1', 'The additional appcontrol package adds new primitives to the Application Control palette', '', '0', 0, -1, 'ogmnu_appcontrol_plus-0.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogmnu_appcontrol_plus-0.1-1.bmp', 6),
(267, 'ogmnu_appcontrol_plus-0.2', 'The additional appcontrol package adds new primitives to the Application Control palette', '', '0', 0, -1, 'ogmnu_appcontrol_plus-0.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogmnu_appcontrol_plus-0.2-1.bmp', 6),
(268, 'ogmnu_appcontrol_plus-0.3', 'The additional appcontrol package adds new primitives to the Application Control palette', '', '0', 0, -1, 'ogmnu_appcontrol_plus-0.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogmnu_appcontrol_plus-0.3-1.bmp', 6),
(269, 'ogmnu_classic_sync-2.0', 'The classic_sync package installs the classic queue and notifier palettes', '', '0', 0, -1, 'ogmnu_classic_sync-2.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogmnu_classic_sync-2.0-1.bmp', 6),
(270, 'ogmnu_classic_sync-2.1', 'The classic_sync package installs the classic queue and notifier palettes', '', '0', 0, -1, 'ogmnu_classic_sync-2.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogmnu_classic_sync-2.1-1.bmp', 6),
(271, 'ogmnu_classic_sync-2.2', 'The classic_sync package installs the classic queue and notifier palettes', '', '0', 0, -1, 'ogmnu_classic_sync-2.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogmnu_classic_sync-2.2-1.bmp', 6),
(272, 'ogmnu_classic_sync-2.3', 'The classic_sync package installs the classic queue and notifier palettes', '', '0', 0, -1, 'ogmnu_classic_sync-2.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogmnu_classic_sync-2.3-1.bmp', 6),
(273, 'ogmnu_classic_sync-2.4', 'The classic_sync package installs the classic queue and notifier palettes', '', '0', 0, -1, 'ogmnu_classic_sync-2.4', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogmnu_classic_sync-2.4-1.bmp', 6),
(274, 'ogmnu_classic_sync-2.5', 'The classic_sync package installs the classic queue and notifier palettes', '', '0', 0, -1, 'ogmnu_classic_sync-2.5', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogmnu_classic_sync-2.5-1.bmp', 6),
(275, 'ogpatch_librarian_bugfix-1.0', 'Fixes a race condition in Copy From Folder To Folder', '', '0', 0, -1, 'ogpatch_librarian_bugfix-1.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogpatch_librarian_bugfix-1.0-1.bmp', 6),
(276, 'ogpatch_ni_motion6x_bugfix-1.0', 'Bug Fixes For NI Motion 6.x (For version 7.x use \"ogpatch_ni_motion7x_bugfix\"). Fix bugs in several VIs that do not return appropriate pass through data in case of error (note: some of these have been fixed in NI Motion 7.0).', '', '0', 0, -1, 'ogpatch_ni_motion6x_bugfix-1.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogpatch_ni_motion6x_bugfix-1.0-1.bmp', 6),
(277, 'ogpatch_ni_motion7x_bugfix-1.0', 'Bug Fixes For NI Motion 7.x (For version 6.x use \"ogpatch_ni_motion6x_bugfix\"). Fix bugs in several VIs that do not return appropriate pass through data in case of error.', '', '0', 0, -1, 'ogpatch_ni_motion7x_bugfix-1.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogpatch_ni_motion7x_bugfix-1.0-1.bmp', 6),
(278, 'ogpatch_notifier_bugfix-1.0', 'Fixes a memory leak caused by notifier name caching in compatibility VIs', '', '0', 0, -1, 'ogpatch_notifier_bugfix-1.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogpatch_notifier_bugfix-1.0-1.bmp', 6),
(279, 'ogpatch_template_bugfix-1.0', 'Fixes a bug where template browser does not ignore directories and files prefixed with an underscore.', '', '0', 0, -1, 'ogpatch_template_bugfix-1.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogpatch_template_bugfix-1.0-1.bmp', 6),
(280, 'ogrsc_builder-1.0.0alpha', 'OpenG\'s Software Builder.', '', '0', 0, -1, 'ogrsc_builder-1.0.0alpha', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_builder-1.0.0alpha-1.bmp', 6),
(281, 'ogrsc_builder-1.0.0alpha12', 'OpenG\'s Software Builder.  After installing this package, you can run the OpenG Builder by selecting Tools > OpenG Builder from the LabVIEW menubar.', '', '0', 0, -1, 'ogrsc_builder-1.0.0alpha12', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_builder-1.0.0alpha12-1.bmp', 6),
(282, 'ogrsc_builder-1.0.0alpha2', 'OpenG\'s Software Builder.', '', '0', 0, -1, 'ogrsc_builder-1.0.0alpha2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_builder-1.0.0alpha2-1.bmp', 6),
(283, 'ogrsc_builder-1.0.0alpha3', 'OpenG\'s Software Builder.  After installing this package, you can run the OpenG Builder by selecting Tools > OpenG Builder from the LabVIEW menubar.', '', '0', 0, -1, 'ogrsc_builder-1.0.0alpha3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_builder-1.0.0alpha3-1.bmp', 6),
(284, 'ogrsc_builder-1.0.0alpha4', 'OpenG\'s Software Builder.  After installing this package, you can run the OpenG Builder by selecting Tools > OpenG Builder from the LabVIEW menubar.', '', '0', 0, -1, 'ogrsc_builder-1.0.0alpha4', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_builder-1.0.0alpha4-1.bmp', 6),
(285, 'ogrsc_builder-1.0.0alpha6', 'OpenG\'s Software Builder.  After installing this package, you can run the OpenG Builder by selecting Tools > OpenG Builder from the LabVIEW menubar.', '', '0', 0, -1, 'ogrsc_builder-1.0.0alpha6', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_builder-1.0.0alpha6-1.bmp', 6),
(286, 'ogrsc_builder-1.0.0alpha8', 'OpenG\'s Software Builder.  After installing this package, you can run the OpenG Builder by selecting Tools > OpenG Builder from the LabVIEW menubar.', '', '0', 0, -1, 'ogrsc_builder-1.0.0alpha8', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_builder-1.0.0alpha8-1.bmp', 6),
(287, 'ogrsc_builder-1.0.0alpha9', 'OpenG\'s Software Builder.  After installing this package, you can run the OpenG Builder by selecting Tools > OpenG Builder from the LabVIEW menubar.', '', '0', 0, -1, 'ogrsc_builder-1.0.0alpha9', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_builder-1.0.0alpha9-1.bmp', 6),
(288, 'ogrsc_builder-1.0.0beta01', 'OpenG\'s Software Builder.  After installing this package, you can run the OpenG Builder by selecting Tools > OpenG Builder from the LabVIEW menubar.', '', '0', 0, -1, 'ogrsc_builder-1.0.0beta01', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_builder-1.0.0beta01-1.bmp', 6),
(289, 'ogrsc_builder-1.0.0beta02', 'OpenG\'s Software Builder.  After installing this package, you can run the OpenG Builder by selecting Tools > OpenG Builder from the LabVIEW menubar.', '', '0', 0, -1, 'ogrsc_builder-1.0.0beta02', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_builder-1.0.0beta02-2.bmp', 6),
(290, 'ogrsc_builder-1.0.0beta03', 'OpenG\'s Software Builder.  After installing this package, you can run the OpenG Builder by selecting Tools > OpenG Builder from the LabVIEW menubar.', '', '0', 0, -1, 'ogrsc_builder-1.0.0beta03', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_builder-1.0.0beta03-1.bmp', 6),
(291, 'ogrsc_builder-1.0.0beta04', 'OpenG\'s Software Builder.  After installing this package, you can run the OpenG Builder by selecting Tools > OpenG Builder from the LabVIEW menubar.', '', '0', 0, -1, 'ogrsc_builder-1.0.0beta04', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_builder-1.0.0beta04-1.bmp', 6),
(292, 'ogrsc_builder-1.0.0beta05', 'OpenG\'s Software Builder.  After installing this package, you can run the OpenG Builder by selecting Tools > OpenG Builder from the LabVIEW menubar.', '', '0', 0, -1, 'ogrsc_builder-1.0.0beta05', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_builder-1.0.0beta05-1.bmp', 6),
(293, 'ogrsc_builder-1.0.0beta07', 'OpenG\'s Software Builder.  After installing this package, you can run the OpenG Builder by selecting Tools > OpenG Builder from the LabVIEW menubar.', '', '0', 0, -1, 'ogrsc_builder-1.0.0beta07', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_builder-1.0.0beta07-1.bmp', 6),
(294, 'ogrsc_builder-2.0.0.399', 'OpenG\'s Software Builder.  After installing this package, you can run the OpenG Builder by selecting Tools > OpenG Builder from the LabVIEW menubar.', '', '0', 0, -1, 'ogrsc_builder-2.0.0.399', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_builder-2.0.0.399-1.bmp', 6),
(295, 'ogrsc_builder-3.0.0.9', 'OpenG\'s Software Builder.  After installing this package, you can run the OpenG Builder by selecting Tools > OpenG Builder from the LabVIEW menubar.', '', '0', 0, -1, 'ogrsc_builder-3.0.0.9', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/ogrsc_builder/ogrsc_builder-3.0.0.9-1.bmp', 6),
(296, 'ogrsc_compare_vi_to_disk-1.0', 'Adds a \'Compare to Disk...\' option to the File menu, which opens the active VI and the copy on disk in the LabVIEW comparison tool.  Thanks to Ian Dees for his application \'lvdiff\', from which this utility derives inspiration and code.', '', '0', 0, -1, 'ogrsc_compare_vi_to_disk-1.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_compare_vi_to_disk-1.0-1.bmp', 6),
(297, 'ogrsc_compare_vi_to_disk-1.1', 'Adds a \'Compare to Disk...\' option to the Tools menu, which opens the active VI and the copy on disk in the LabVIEW comparison tool.  Thanks to Ian Dees for his application \'lvdiff\', from which this utility derives inspiration and code.', '', '0', 0, -1, 'ogrsc_compare_vi_to_disk-1.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_compare_vi_to_disk-1.1-1.bmp', 6),
(298, 'ogrsc_deab-0.10', 'The DEAB package contains a utility building Development Environment Apps.', '', '0', 0, -1, 'ogrsc_deab-0.10', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_deab-0.10-1.bmp', 6),
(299, 'ogrsc_deab-0.9', 'The DEAB package contains a utility building Development Environment Apps.', '', '0', 0, -1, 'ogrsc_deab-0.9', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_deab-0.9-1.bmp', 6),
(300, 'ogrsc_dynamicpalette-0.10', 'The OpenG Dynamic Palette View creates palette syncronized directories within ./user.lib/_Dynamic_Palette_View/', '', '0', 0, -1, 'ogrsc_dynamicpalette-0.10', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_dynamicpalette-0.10-1.bmp', 6),
(301, 'ogrsc_dynamicpalette-0.11', 'The OpenG Dynamic Palette View creates palette syncronized directories within ./user.lib/_Dynamic_Palette_View/', '', '0', 0, -1, 'ogrsc_dynamicpalette-0.11', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_dynamicpalette-0.11-1.bmp', 6),
(302, 'ogrsc_dynamicpalette-0.12', 'The OpenG Dynamic Palette View creates palette syncronized directories within ./user.lib/_Dynamic_Palette_View/', '', '0', 0, -1, 'ogrsc_dynamicpalette-0.12', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_dynamicpalette-0.12-1.bmp', 6),
(303, 'ogrsc_dynamicpalette-0.13', 'The OpenG Dynamic Palette View creates palette syncronized directories within ./user.lib/_Dynamic_Palette_View/', '', '0', 0, -1, 'ogrsc_dynamicpalette-0.13', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_dynamicpalette-0.13-1.bmp', 6),
(304, 'ogrsc_dynamicpalette-0.14', 'The OpenG Dynamic Palette View creates palette syncronized directories within ./user.lib/_Dynamic_Palette_View/', '', '0', 0, -1, 'ogrsc_dynamicpalette-0.14', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_dynamicpalette-0.14-1.bmp', 6),
(305, 'ogrsc_dynamicpalette-0.15', 'The OpenG Dynamic Palette View creates palette syncronized directories within ./user.lib/_Dynamic_Palette_View/', '', '0', 0, -1, 'ogrsc_dynamicpalette-0.15', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_dynamicpalette-0.15-1.bmp', 6),
(306, 'ogrsc_dynamicpalette-0.16', 'The OpenG Dynamic Palette View creates palette syncronized directories within ./user.lib/_Dynamic_Palette_View/', '', '0', 0, -1, 'ogrsc_dynamicpalette-0.16', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_dynamicpalette-0.16-1.bmp', 6),
(307, 'ogrsc_dynamicpalette-0.17', 'The OpenG Dynamic Palette View creates palette syncronized directories within ./user.lib/_Dynamic_Palette_View/', '', '0', 0, -1, 'ogrsc_dynamicpalette-0.17', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_dynamicpalette-0.17-1.bmp', 6),
(308, 'ogrsc_dynamicpalette-0.18', 'The OpenG Dynamic Palette View creates palette syncronized directories within ./user.lib/_Dynamic_Palette_View/', '', '0', 0, -1, 'ogrsc_dynamicpalette-0.18', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_dynamicpalette-0.18-1.bmp', 6),
(309, 'ogrsc_dynamicpalette-0.19', 'The OpenG Dynamic Palette View creates palette syncronized directories within ./user.lib/_Dynamic_Palette_View/\n\n[Release Notes]\n* Can now be installed on LabVIEW 2010 (10.0)', '', '0', 0, -1, 'ogrsc_dynamicpalette-0.19', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/ogrsc_dynamicpalette/ogrsc_dynamicpalette-0.19-1.bmp', 6),
(310, 'ogrsc_dynamicpalette-0.2', 'The OpenG Dynamic Palette View creates palette syncronized directories within ./user.lib/_Dynamic_Palette_View/', '', '0', 0, -1, 'ogrsc_dynamicpalette-0.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_dynamicpalette-0.2-1.bmp', 6),
(311, 'ogrsc_dynamicpalette-0.4', 'The OpenG Dynamic Palette View creates palette syncronized directories within ./user.lib/_Dynamic_Palette_View/', '', '0', 0, -1, 'ogrsc_dynamicpalette-0.4', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_dynamicpalette-0.4-1.bmp', 6),
(312, 'ogrsc_dynamicpalette-0.5', 'The OpenG Dynamic Palette View creates palette syncronized directories within ./user.lib/_Dynamic_Palette_View/', '', '0', 0, -1, 'ogrsc_dynamicpalette-0.5', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_dynamicpalette-0.5-1.bmp', 6),
(313, 'ogrsc_dynamicpalette-0.6', 'The OpenG Dynamic Palette View creates palette syncronized directories within ./user.lib/_Dynamic_Palette_View/', '', '0', 0, -1, 'ogrsc_dynamicpalette-0.6', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_dynamicpalette-0.6-1.bmp', 6),
(314, 'ogrsc_dynamicpalette-0.7', 'The OpenG Dynamic Palette View creates palette syncronized directories within ./user.lib/_Dynamic_Palette_View/', '', '0', 0, -1, 'ogrsc_dynamicpalette-0.7', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_dynamicpalette-0.7-1.bmp', 6),
(315, 'ogrsc_dynamicpalette-0.8', 'The OpenG Dynamic Palette View creates palette syncronized directories within ./user.lib/_Dynamic_Palette_View/', '', '0', 0, -1, 'ogrsc_dynamicpalette-0.8', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_dynamicpalette-0.8-1.bmp', 6);
INSERT INTO `package` (`id`, `name`, `description`, `version`, `url`, `downloads`, `avg_rating`, `display_name`, `icon_url`, `repo_id`) VALUES
(316, 'ogrsc_dynamicpalette-0.9', 'The OpenG Dynamic Palette View creates palette syncronized directories within ./user.lib/_Dynamic_Palette_View/', '', '0', 0, -1, 'ogrsc_dynamicpalette-0.9', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_dynamicpalette-0.9-1.bmp', 6),
(317, 'ogrsc_msi_builder-1.0.0alpha1', 'OpenG MSI Installer Builder.  After installing this tool, you can run it by selecting Tools >> OpenG MSI Installer Builder from the LabVIEW menubar.', '', '0', 0, -1, 'ogrsc_msi_builder-1.0.0alpha1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_msi_builder-1.0.0alpha1-1.bmp', 6),
(318, 'ogrsc_msi_builder-1.0.0alpha2', 'OpenG MSI Installer Builder.  After installing this tool, you can run it by selecting Tools >> OpenG MSI Installer Builder from the LabVIEW menubar.', '', '0', 0, -1, 'ogrsc_msi_builder-1.0.0alpha2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_msi_builder-1.0.0alpha2-1.bmp', 6),
(319, 'ogrsc_package_builder-0.1.0alpha1', 'OpenG Package Builder', '', '0', 0, -1, 'ogrsc_package_builder-0.1.0alpha1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_package_builder-0.1.0alpha1-1.bmp', 6),
(320, 'ogrsc_package_builder-0.1.0alpha3', 'OpenG Package Builder', '', '0', 0, -1, 'ogrsc_package_builder-0.1.0alpha3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_package_builder-0.1.0alpha3-1.bmp', 6),
(321, 'ogrsc_package_builder-0.1.0alpha5', 'OpenG Package Builder', '', '0', 0, -1, 'ogrsc_package_builder-0.1.0alpha5', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_package_builder-0.1.0alpha5-1.bmp', 6),
(322, 'ogrsc_package_builder-0.1.0alpha6', 'OpenG Package Builder', '', '0', 0, -1, 'ogrsc_package_builder-0.1.0alpha6', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_package_builder-0.1.0alpha6-1.bmp', 6),
(323, 'ogrsc_rename_folder_of_vis-1.4', 'Adds a \'Rename Folder of VIs...\' option to the File menu', '', '0', 0, -1, 'ogrsc_rename_folder_of_vis-1.4', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_rename_folder_of_vis-1.4-1.bmp', 6),
(324, 'ogrsc_rename_folder_of_vis-1.5', 'Adds a \'Rename Folder of VIs...\' option to the File menu', '', '0', 0, -1, 'ogrsc_rename_folder_of_vis-1.5', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_rename_folder_of_vis-1.5-1.bmp', 6),
(325, 'ogrsc_rename_folder_of_vis-1.6', 'Adds a \'Rename Folder of VIs...\' option to the File menu', '', '0', 0, -1, 'ogrsc_rename_folder_of_vis-1.6', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_rename_folder_of_vis-1.6-1.bmp', 6),
(326, 'ogrsc_restart-1.0', 'Restart LabVIEW Resource', '', '0', 0, -1, 'ogrsc_restart-1.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_restart-1.0-1.bmp', 6),
(327, 'ogrsc_restart-1.1', 'Restart LabVIEW Resource', '', '0', 0, -1, 'ogrsc_restart-1.1', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_restart-1.1-1.bmp', 6),
(328, 'ogrsc_restart-1.2', 'Restart LabVIEW Resource', '', '0', 0, -1, 'ogrsc_restart-1.2', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_restart-1.2-1.bmp', 6),
(329, 'ogrsc_restart-1.3', 'Restart LabVIEW Resource', '', '0', 0, -1, 'ogrsc_restart-1.3', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/ogrsc_restart-1.3-1.bmp', 6),
(330, 'oglib_appcontrol', 'The OpenG Application Control Library package contains application control functions.', '', '0', 0, -1, 'OpenG Application Control Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_appcontrol/oglib_appcontrol-4.1.0.7.bmp', 6),
(331, 'oglib_array', 'The OpenG Array Library package contains several routines for operating on array data.', '', '0', 0, -1, 'OpenG Array Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_array/oglib_array-4.1.1.14.bmp', 6),
(332, 'oglib_boolean', 'The OpenG Boolean Library package contains several routines for operating on booleans.', '', '0', 0, -1, 'OpenG Boolean Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_boolean/oglib_boolean-4.0.0.7.bmp', 6),
(333, 'ogrsc_builder-3.0.1', 'OpenG\'s Software Builder.  After installing this package, you can run the OpenG Builder by selecting Tools > OpenG Builder from the LabVIEW menubar.', '', '0', 0, -1, 'OpenG Builder', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/ogrsc_builder/ogrsc_builder-3.0.1-2.bmp', 6),
(334, 'oglib_buttons', 'The OpenG Buttons Library package contains various button controls.', '', '0', 0, -1, 'OpenG Buttons Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_buttons/oglib_buttons-4.0.0.7.bmp', 6),
(335, 'ogrsc_compare_vi_to_disk', 'Adds a \'Compare to Disk...\' option to the OpenG Tools menu, which opens the active VI and the copy on disk in the LabVIEW comparison tool.  \n\nThanks to Ian Dees for his application \'lvdiff\', from which this utility derives inspiration and code.', '', '0', 0, -1, 'OpenG Compare VI To Disk Tool', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/ogrsc_compare_vi_to_disk/ogrsc_compare_vi_to_disk-4.0.0.9.bmp', 6),
(336, 'oglib_comparison', 'The OpenG Comparison Library package contains several routines for comparing data.', '', '0', 0, -1, 'OpenG Comparison Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_comparison/oglib_comparison-4.0.0.3.bmp', 6),
(337, 'oglib_dictionary', 'The OpenG Dictionary Library package contains a library for key-value sets.', '', '0', 0, -1, 'OpenG Dictionary Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_dictionary/oglib_dictionary-4.0.0.4.bmp', 6),
(338, 'oglib_error', 'The OpenG Error Library package contains several routines related to error handling.', '', '0', 0, -1, 'OpenG Error Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_error/oglib_error-4.2.0.23.bmp', 6),
(339, 'oglib_file', 'The OpenG File Library package contains several routines for operating on files.', '', '0', 0, -1, 'OpenG File Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_file/oglib_file-4.0.1.22.bmp', 6),
(340, 'oglib_labpython', 'The LabPython package contains several routines for interfacing to Python.\nTested with Python 2.5 (http://www.python.org/getit/releases/2.5/) & Windows-7 x86.', '', '0', 0, -1, 'OpenG LabPython Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_labpython/oglib_labpython-4.0.0.4.bmp', 6),
(341, 'oglib_lvdata', 'The OpenG LabVIEW Data Library contains several routines for operating on Variant Data, Type Descriptors and LVOOP Data.', '', '0', 0, -1, 'OpenG LabVIEW Data Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_lvdata/oglib_lvdata-4.2.0.21.bmp', 6),
(342, 'oglib_lvzip-4.0.0', 'The lvzip package contains several routines for operating on zip files.\r\n\r\nVersion 4.0.0: Palette compatiable with OpenG 4.0 release. \r\nVersion 2.5.1: Fixes issue with broken VIs in LabVIEW 2009 due to calling (now) private config utilities.\r\nVersion 2.5: Changes license of LabVIEW sources from LGPL to BSD, Adds Memory Stream VIs to the palettes, Optimizes ZLIB Extract All Files to Dir, Fixes potential problem where error such as out of disk on finishing to add a file into an archive might get lost meaning that a corrupted archive could result without the user being informed about it, Fixes issue preventing adding files specified by UNC network path to zip archive.\r\nVersion 2.4 adds support for direct memory stream handling.\r\nVersion 2.3 adds support for transparent Mac Resource file handling through MacBinary encoding.\r\nVersion 2.2 adds support for appending files to an existing archive, deleting files from an archive and password support for adding and extracting files.', '', '0', 0, -1, 'OpenG LabVIEW ZIP Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_lvzip/oglib_lvzip-4.0.0-2.bmp', 6),
(343, 'oglib_largefile', 'The OpenG Large File Library package contains several routines for operating on files over 2GB.', '', '0', 0, -1, 'OpenG Large File Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_largefile/oglib_largefile-4.0.0.3.bmp', 6),
(344, 'ogedit_file_locate_in_project', 'Adds a \'Locate in Project\' option to the File menu', '', '0', 0, -1, 'OpenG Locate File In Project Tool', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/ogedit_file_locate_in_project/ogedit_file_locate_in_project-4.0.0.7.bmp', 6),
(345, 'oglib_md5', 'The OpenG MD5 Digest Library is an MD5 Digest implementation.', '', '0', 0, -1, 'OpenG MD5 Digest Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_md5/oglib_md5-4.1.1.10.bmp', 6),
(346, 'oglib_msgqueue', 'The OpenG Message Queue Library generates a response notifier to reply to messages.', '', '0', 0, -1, 'OpenG Message Queue Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_msgqueue/oglib_msgqueue-4.0.0.15.bmp', 6),
(347, 'oglib_numeric', 'The OpenG Numeric Library package contains several routines for operating on numeric data.', '', '0', 0, -1, 'OpenG Numeric Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_numeric/oglib_numeric-4.1.0.8.bmp', 6),
(348, 'oglib_picture', 'The OpenG Picture Library package contains routines for operating on picture controls.', '', '0', 0, -1, 'OpenG Picture Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_picture/oglib_picture-4.0.0.13.bmp', 6),
(349, 'oglib_portio-4.0.0', 'The OpenG Port IO library supports direct access to hardware IO and physical memory.\r\nIt comes with its own kernel device driver for Windows NT (NT4, W2K, WXP, W2003) systems, which will be installed automatically if not found to be present on the system already.', '', '0', 0, -1, 'OpenG Port IO', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_portio/oglib_portio-4.0.0-2.bmp', 6),
(350, 'ogrsc_rename_folder_of_vis', 'Adds a \'Rename Folder of VIs...\' option to the File menu.', '', '0', 0, -1, 'OpenG Rename Folder of VIs Tool', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/ogrsc_rename_folder_of_vis/ogrsc_rename_folder_of_vis-4.0.0.15.bmp', 6),
(351, 'oglib_string', 'The OpenG String Library package contains several routines for operating on strings.', '', '0', 0, -1, 'OpenG String Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_string/oglib_string-4.1.0.12.bmp', 6),
(352, 'oglib_time', 'The OpenG Time Library package contains several routines related to software timing.', '', '0', 0, -1, 'OpenG Time Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_time/oglib_time-4.0.1.3.bmp', 6),
(353, 'openg.org_lib_openg_toolkit', 'The OpenG Toolkit package installs the OpenG Libraries 4.0: Application Control, Array, Boolean, Buttons Comparison, Dictionary, Error, File, LabVIEW Data, LabVIEW ZIP, Large File, MD5, Message Queue, Numeric, Picture, Port IO, String, Time and Variant Configuration File.\n\nNote - use this package when all dependant packages are uninstalled to upgrade to the OpenG 4.0 Libraries. This package will also uninstall packages not required or that are incompatible with the OpenG 4.0 release.', '', '0', 0, -1, 'OpenG Toolkit', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/openg.org_lib_openg_toolkit/openg.org_lib_openg_toolkit-4.0.1.9.bmp', 6),
(354, 'oglib_variantconfig', 'The OpenG Variant Configuration File Library package contains tools for writing and reading variant data to and from INI files.', '', '0', 0, -1, 'OpenG Variant Configuration File Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_variantconfig/oglib_variantconfig-4.0.0.5.bmp', 6),
(355, '@mgi/panel-actor-error-reporter', 'Provides a Panel Actor Based error reporter.', '', '0', 0, -1, 'panel-actor-error-reporter', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(356, '@mgi/panel-actors', 'An Actor Framework implementation of MGI\'s Panel Manager Framework', '', '0', 0, -1, 'panel-actors', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(357, '@mgi/panel-manager', 'A framework to manage VI front panels', '', '0', 0, -1, 'panel-manager', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(358, 'jki_lib_panerelief', 'This tool is launched from the Quick Drop (default shortcut ctl + a). It shows all the panes and splitters on the current front panel in a convenient view. You can the select a pane or splitter from the view and then view and edit its commonly used properties (such as name, position, scrollbar visibility, color, etc...).\n\nThis tool is developed in the following github repo:\nhttps://github.com/HopeHarrison/PaneRelief\n\nIt also uses code from this repo:\nhttps://github.com/flarn2006/VILab', '', '0', 0, -1, 'PaneRelief', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_panerelief/jki_lib_panerelief-2.0.3.1.bmp', 6),
(359, '@cs/persistence', 'Beta version of a persistence package.', '', '0', 0, -1, 'persistence', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(360, 'picture3d-1.0', '', '', '0', 0, -1, 'picture3d-1.0', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/picture3d-1.0-2.bmp', 6),
(361, '@cs/popup-viewmanager', 'MVA extension that allows Dialogs to act like ViewManagers', '', '0', 0, -1, 'popup-viewmanager', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(362, 'jdp_science_postgresql', 'Wrapping of libPQ for PostgreSQL access.  Higher-level than libPQ itself.  See Examples.', '', '0', 0, -1, 'PostgreSQL Library', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jdp_science_postgresql/jdp_science_postgresql-0.1.1.9.bmp', 6),
(363, 'test_company_lib_product_name', '', '', '0', 0, -1, 'Product Name', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/test_company_lib_product_name/test_company_lib_product_name-1.0.0.4.bmp', 6),
(364, '@mgi/progress-bar', 'A simple progress bar API', '', '0', 0, -1, 'progress-bar', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(365, 'thelvlab_lib_promview', 'PromVIEW is a client library written in LabVIEW to expose metrics to Prometheus (https://www.prometheus.io)\n\nPromVIEW provides the basic functions to instrument your LabVIEW code by creating metrics and collectors, and it can also be used to create an exporter through the <i>Tools > PromVIEW > Create Exposition Web Service...</i> menu.\nAn Prometheus exporter is a web service that exposes the metrics so Prometheus can scrape this web service and update its time-series database with the new values.', '', '0', 0, -1, 'PromVIEW', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/thelvlab_lib_promview/thelvlab_lib_promview-1.0.0.10.bmp', 6),
(366, 'qsi_format_toolbar', 'The Format Toolbar is a floating toolbar that can be running in the background during development.  It allows the developer to add:\r\n\"	Add Bold, Italic, and Underline to text in Controls, Indicators, and Text\r\n\"	Change the Justification between Left, Center, and Right\r\n\"	Set Text, Foreground, or Background Colors (if available for the object)\r\n\"	Change Font Size\r\n\"	Change Font (supports all installed fonts in the Windows OS)\r\n\r\nThe Format Toolbar is launchable in two ways:\r\n1.	Through the Tools Menu at: <b>Tools->QSI Tools->Format Toolbar…</b>\r\n2.	Through a Quick Drop Keyboard Shortcut (QDKS) of <b>Ctrl-1</b>\r\n', '', '0', 0, -1, 'QSI Format Toolbar', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/qsi_format_toolbar/qsi_format_toolbar-1.1.0.13.bmp', 6),
(367, '@mgi/query-builder', 'A toolkit to help easily build database queries from LabVIEW data types.', '', '0', 0, -1, 'query-builder', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(368, 'mnprojects_lib_quickdrop_addlabels', 'A LabVIEW Quick-Drop (QD) plug-in to easily add or remove labels to blockdiagram elements.\r\n\r\nThis quick-drop plug-in works only in the block diagram.\r\n\r\nThe plug-in provides the following functions:\r\n- Add/Remove a label to a SubVI.\r\n- Add/Remove a subdiagram label to a structure element.\r\n- Add/Remove a label to a wire\r\n- Show again an already set wire label\r\n\r\n\r\nAdd or remove a label to SubVIs\r\n--------------------------------------------------------------------------------\r\nSelect a SubVI within a blockdiagram.\r\nPress Ctrl+Space and Ctrl+Q to add a label to a SubVI. For removing the label press Ctrl+Spaceand Ctrl+Shift+Q.\r\n\r\nAdd or remove a subdiagram label to a structure element\r\n--------------------------------------------------------------------------------\r\nSelect a structure element within a blockdiagram. Press Ctrl+Space and Ctrl+Qto add a subdiagram label to the structure element. For removing the label press Ctrl+Space and Ctrl+Shift+Q.\r\n\nIf you insert a text into the QD combo box it will be inserted as subdiagram label of the visible frame.\n\r\nAdd or remove a label to a wire\r\n--------------------------------------------------------------------------------\r\nSelect a wire. Press Ctrl+Space to open the quick drop. Insert a label text to the input field. Press Ctrl+Q to add the inserted label to the wire. The plug-in will add >> before and after the label text. For removing the label press Ctrl+Space and Ctrl+Shift+Q. If you want to add the removed label again press Ctrl+Space and Ctrl+Q.\r\n\nAdd label to a constant\r\n--------------------------------------------------------------------------------\r\nSelect a constant. Press Ctrl+Space to open the quick drop. Insert a text to the input field. Press Ctrl+Q to add the inserted label to the constant.  For removing the label press Ctrl+Space and Ctrl+Shift+Q. If you want to add the removed label again press Ctrl+Space and Ctrl+Q.\r\n\n\r\nIt is also possible to select more than one element within a blockdiagram. Therefore the appropriate label will be added to the selected elements.\r\n\r\nAn animated GIF on the homepage shows the usage of the plug-in.\r\n', '', '0', 0, -1, 'QuickDrop AddLabels', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/mnprojects_lib_quickdrop_addlabels/mnprojects_lib_quickdrop_addlabels-1.3.0.8.bmp', 6),
(369, 'mnprojects_lib_quickdrop_alignelements', 'A LabVIEW Quick-Drop (QD) plug-in for aligning and distributing elements on afrontpanel or blockdiagram.\n\nThis plug-in is based on the existing Align & Compress BD/FP Objects plug-in. The plug-in is completely refactored and changes the handling and the keymap of the original plug-in.\n\nThe design idea behind the usage of the plug-in is to simply handle the alignment using the left hand on the keyboard and the WSAD keys. Therefore you will be very fast to organize your elements on the VI.\n\nUsage\n---------------------------------------------------\nAt first you have to select some elements either on the fronpanel or the blockdiagram of the VI.\nThe Quick Drop plug-in uses the default shortcut A.\n\nThere are three possible ways to act with the plug-in using the mouse or only the keyboard.\n\nUsing the mouse\nWith the mouse you can simply act with the plugin\n\nFirstly press CTRL+SPACE to open the quick drop dialog, then press CTRL+A to open the plug-in dialog containing the alignment and distribution buttons. The different buttons can be pressed to move the objects. At the end the dialog can be closed by clicking on the close button in the corner or by pressing the ESC key.\n\nUsing the keyboard\nA faster way to handle this Quick Drop plug-in is by using the keyboard.\n\nAfter selecting some elements press CTRL+SPACE and CTRL+A to open the dialog window. Afterwards you can use one of the following keys to execute the wanted alignment:\n\nW: Top\nS: Bottom\nA: Left\nD: Right\nC: Horizontal Center\nV: Vertical Center\nQ: Vertical Gap\nE: Horizontal Gap\nAfter pressing a key for alignment the panel will immediatelly be closed.\n\nIf you move the mouse pointer over one of the buttons you will see the shortcuts for each operation. (Only some of the distribution elements can be controlled by key.)\n\nUsing the Quick Drop combo box\nThe last option to handle the plugin is based on Darren\'s suggestions.\n\nAfter selecting some elements open the Quick Drop dialog by pressing CTRL+SPACE. Insert one or more of the above characters into the combo box. Then press CTRL+A. The plug-in will immediatelly execute the alignment or distribution of the elements.\n\nOn the homepage https://github.com/matrixx567/LabView_QuickDrop_AlignElements you will find animated screenshots that show the different possibilities to act with this QuickDrop plug-in.\n\nOn of my favorites is to open the Quick Drop with CTRL+SPACE. Then insert AQ into the combo box and press CTRL+A. This will align the elements to the left and distribute it with an equal vertical gap. I use this to arrange the VI input and output elements on the blockdiagram.\n\nNumeric controls on the frontpanel\n---------------------------------------------------\nLike the original plug-in the increment and decrement buttons of a numeric control will be hidden during alignment (based on [this idea exchange](https://forums.ni.com/t5/LabVIEW-Idea-Exchange/Align-objects-should-not-align-increment-decrement-buttons/idi-p/1050356?profile.language=en)).\n\nBy default this behavior is activated. It is possible to deactivate it in the LabVIEW.ini.\n\nQuick Drop Options\n---------------------------------------------------\n\nYou can control certain aspects of operation of this plug-in by setting the following LabVIEW.ini tokens:\n\nQDAlignElements.HideIncDec (Default: True):  Hide Inc/Dec buttons of Numeric Controls during alignment. \n', '', '0', 0, -1, 'QuickDrop AlignElements', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/mnprojects_lib_quickdrop_alignelements/mnprojects_lib_quickdrop_alignelements-1.1.0.3.bmp', 6),
(370, '@mgi/restful', 'An easy API used to consume REST endpoints.', '', '0', 0, -1, 'restful', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(371, 'lava_lib_robust_csv', 'This package contains VIs for reading and writing to CSV files that follow the CSV format outlined in RFC-4180 (see http://tools.ietf.org/html/rfc4180). Using this package, you can properly import CSV files that were exported from spreadsheet programs such as Microsoft Excel, Open Office or LibreOffice Calc as well as export CSV files that will be compatible with any program capable of interpreting CSV files.\n \nThis implementation of the CSV format is capable of handling escaped fields such as those containing commas (or other field delimiters), multiple lines, and double quotes.', '', '0', 0, -1, 'Robust CSV', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/lava_lib_robust_csv/lava_lib_robust_csv-1.1.0.4.bmp', 6),
(372, '@endigit/ruf', 'The Referenced UI Framework is a tool that allows the user to quickly assemble a user interface using a template UI class.', '', '0', 0, -1, 'ruf', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(373, '@cs/run-time-assertions', 'Variant based run  time assertion library, for asserting equal, not equal, greater, greater or equal, less, less or equal.', '', '0', 0, -1, 'run-time-assertions', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(374, 'hse_lib_s7netcom', 'An open-source communication driver for talking to Siemens S7 PLCs via TCP/IP implemented in plain LabVIEW TCP/IP primitives. The original source code was shared by Marc Christenson on NI\'s Example Program Code Exchange forum (link in the readme).\r\n\nThis is a reference implementation that has NOT been vetted for a production setting. It might or might not meet traditional requirements in terms of uptime, security, absence of bugs, etc. Use at your own risk!\n\r\nThe HSE Dokuwiki holds more information on the protocol and these VIs:\r\nhttps://dokuwiki.hampel-soft.com/code/open-source/s7netcom\r\nhttps://dokuwiki.hampel-soft.com/kb/production/s7-communication', '', '0', 0, -1, 'S7NetCom', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/hse_lib_s7netcom/hse_lib_s7netcom-0.5.5.29.bmp', 6),
(375, '@mgi/semver', 'An implementation of the Semver spec.', '', '0', 0, -1, 'semver', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(376, '@cs/session', 'A session framework for abstraction of business logic through a by reference API', '', '0', 0, -1, 'session', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(377, 'university_of_leeds_lib_sha256', 'This library implements a native LabVIEDW implementation of the SHA256 encryption and signing algorithm. It provdes routines to generate HMAC signatures.', '', '0', 0, -1, 'SHA256', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/university_of_leeds_lib_sha256/university_of_leeds_lib_sha256-1.1.2.7.bmp', 6),
(378, 'nicolas_bats_lib_simple_progress_bar', '', '', '0', 0, -1, 'Simple Progress Bar', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/nicolas_bats_lib_simple_progress_bar/nicolas_bats_lib_simple_progress_bar-1.0.0.3.bmp', 6),
(379, '@mgi/standard-windows-error-reporter', 'The MGI Standard Error Reporter configuration.', '', '0', 0, -1, 'standard-windows-error-reporter', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(380, '@mgi/tab-panels', 'Provides an extendable tab extension for the MGI Panel Manager Framework.', '', '0', 0, -1, 'tab-panels', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(381, 'caraya_tdd_project_template', 'The TDD Caraya Project Template is a template that enables a Test Driven Development process in LabVIEW by enabling developers to build tests that are integated with new VIs and can be programmatically run in unit test (developer) mode or using their default implementation.', '', '0', 0, -1, 'TDD Caraya Project Template', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/caraya_tdd_project_template/caraya_tdd_project_template-1.0.0.7.bmp', 6),
(382, '@cs/test-executive', 'A test executive library for adding sequencing with flow control to your application.  The API uses malleability to keep typing of attributes flexible, and has an abstract Test Step class so that test steps are extensible and specific to your context.', '', '0', 0, -1, 'test-executive', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(383, '@cs/test-executive-builder', 'A user interface with a customizable API for building and editing test sequences created with the Test Executive.', '', '0', 0, -1, 'test-executive-builder', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(384, 'testpackage', '', '', '0', 0, -1, 'testpackage', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(385, '@cs/transport', 'Q: How did the chicken cross the LabVIEW application? (A: Transport)', '', '0', 0, -1, 'transport', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(386, 'tsn_community_lib_tsn_community_vis', '', '', '0', 0, -1, 'TSN Community VIs', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/tsn_community_lib_tsn_community_vis/tsn_community_lib_tsn_community_vis-1.0.0.2.bmp', 6),
(387, 'lava_lib_ui_tools', 'This package contains tools for designing user interfaces.\nIt consists of a set of VIs to create special effects. Also included, a library to help align rectangles to properly calculate distribution of objects with their known boundaries. It comes with a dynamic core engine and a series of base classes for message box dialogs.\n\nThe customized controls have all been removed except a few. The buttons will be provided as add-ons to this package. This decision\'s been made because the buttons might be in greater number in the future and this package would quickly become enormous. Most users will likely use a set of icons, and separating the icons packages from the UI Tools will garantee that the user keeps his LabVIEW folders/packages under control.', '', '0', 0, -1, 'UI Tools', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/lava_lib_ui_tools/lava_lib_ui_tools-1.4.1.74.bmp', 6),
(388, 'labview_open_source_lib_unicity', 'Unicity is a unique name management library to keep track of modules or subsystems through unique IDs, Fully Qualified Names linked to a composition hierarchy.\r\nThe tools include configurable Registry for unique string generation, name incrementation formatting, etc.', '', '0', 0, -1, 'Unicity', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/labview_open_source_lib_unicity/labview_open_source_lib_unicity-1.0.2.5.bmp', 6),
(389, '@cs/user-configuration-manager', 'Simple User Manager with persistence and encryption.', '', '0', 0, -1, 'user-configuration-manager', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(390, 'user-configuration-manager', '!Alpha release!', '', '0', 0, -1, 'user-configuration-manager', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(391, '@cs/user-manager-application', '!Alpha Release!', '', '0', 0, -1, 'user-manager-application', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(392, '@cs/variant', 'Extensions to LabVIEW variant functionality for everyday use', '', '0', 0, -1, 'variant', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(393, '@mgi/veristand-system-explorer-classes', 'Classes for VeriStand custom device system explorer programming', '', '0', 0, -1, 'veristand-system-explorer-classes', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(394, 'jki_lib_vi_tester_junit_xml_results', 'Support for generating Ant JUnit XML report files.', '', '0', 0, -1, 'VI Tester JUnit XML Test Results', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_vi_tester_junit_xml_results/jki_lib_vi_tester_junit_xml_results-2.0.1.16.bmp', 6),
(395, 'jki_lib_vipm_api', 'The VIPM VI-based API is a collection of VIs that allow you to command and control VIPM (VI Package Manager). The VIs have been compiled in LabVIEW 2009 and can be used for automation code written in LabVIEW 2009 or newer.\n\nThe VIPM API VIs only work with <b>VIPM 2012 Pro Edition</b> (or newer). They will not work with VIPM Free Edition. Also, In order for the API to work, you must have the main VIPM Pro application running. It can be minimized, but it must be running at all time.\n\nFor help with the VIPM API, please visit: <u>http://jki.net/support</u>\n\nList of Functions:\n\n<b>Main (Root Palette)</b>\n- Install VI Packages by Name.vi\n- Uninstall VI Packages by Name.vi\n\n<b>Library Subpalette</b>\n- Add VI Packages to VIPM Package Library.vi\n- Remove VI Package from VIPM Package Library.vi\n- Download VI Packages.vi\n- Network Update and Sync VIPM Package Library.vi\n- List VIPM Package Library Contents.vi\n\n<b>Package Building Subpalette</b>\n- Build VI package.vi\n- Write VI Package Build Spec.vi\n- Read VI Package Build Spec.vi\n\n<b>VI Package Configuration (VIPC) Subpalette</b>\n- Apply VIPC File.vi\n- Test VIPC Apply Needed.vi\n- Scan Project.vi\n- Create New VIPC File.vi\n\n<b>Repository Subpalette</b>\n- Publish VI Packages to Repository.vi\n- Unpublish VI Packages from Repository.vi\n- List Repository Contents.vi\n- List VIPM Managed Repositories.vi\n\n<b>Utility Subpalette</b>\n- List VIPM LabVIEW Target Version.vi\n- Switch Target.vi\n- Minimize VIPM.vi\n- Exit VIPM.vi', '', '0', 0, -1, 'VIPM API', 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_vipm_api/jki_lib_vipm_api-2017.0.0.55.bmp', 6),
(396, '@qsi/viservertoolkit', 'Collection of tools to help navigate the Classes, Properties, Methods, and Events of the VI Server.', '', '0', 0, -1, 'viservertoolkit', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5),
(397, 'zmq-socket-library', 'Fork of the ZMQ socket library, originally found in http://zeromq.org/bindings:labview. The original Author of the LabVIEW binding is Martijn Jasperse, m.jasperse@gmail.com. This fork was created to simplify deployment of the library though GPM, update to v2017 of LabVIEW and simplify mainteneance.', '', '0', 0, -1, 'zmq-socket-library', 'https://demo.studiobods.com/GCentral_Indexer/GPM_logo.png', 5);

INSERT INTO `developer_group_package` (`developer_group_id`, `package_id`) VALUES
(136, 8),
(136, 24),
(136, 125),
(136, 126),
(136, 137),
(136, 139),
(136, 141),
(136, 385),
(136, 392),
(137, 9),
(137, 10),
(137, 11),
(138, 12),
(138, 14),
(138, 18),
(138, 22),
(138, 23),
(138, 25),
(138, 30),
(138, 31),
(138, 32),
(138, 34),
(139, 13),
(139, 26),
(139, 33),
(139, 51),
(139, 52),
(139, 53),
(139, 56),
(139, 57),
(139, 58),
(139, 59),
(139, 60),
(139, 67),
(139, 68),
(139, 69),
(139, 74),
(139, 115),
(139, 116),
(139, 121),
(139, 127),
(139, 128),
(139, 129),
(139, 131),
(139, 132),
(139, 133),
(139, 151),
(139, 356),
(139, 364),
(139, 367),
(139, 370),
(139, 375),
(139, 380),
(140, 15),
(140, 19),
(140, 20),
(140, 21),
(140, 396),
(141, 16),
(141, 54),
(141, 75),
(141, 76),
(141, 77),
(141, 78),
(141, 79),
(141, 80),
(141, 81),
(141, 82),
(141, 83),
(141, 84),
(141, 85),
(141, 86),
(141, 87),
(141, 88),
(141, 89),
(141, 90),
(141, 93),
(141, 94),
(141, 95),
(141, 99),
(141, 100),
(141, 106),
(141, 111),
(141, 112),
(141, 117),
(141, 358),
(141, 394),
(141, 395),
(142, 17),
(142, 29),
(142, 65),
(142, 123),
(142, 138),
(142, 142),
(142, 359),
(142, 361),
(142, 373),
(142, 376),
(142, 382),
(142, 383),
(142, 389),
(143, 27),
(144, 28),
(144, 388),
(145, 35),
(145, 36),
(145, 37),
(145, 38),
(145, 39),
(145, 40),
(145, 41),
(145, 42),
(145, 43),
(145, 44),
(145, 45),
(145, 46),
(145, 47),
(145, 48),
(145, 49),
(145, 50),
(146, 55),
(147, 61),
(147, 134),
(148, 62),
(148, 143),
(149, 63),
(149, 64),
(149, 372),
(150, 66),
(151, 70),
(151, 71),
(152, 72),
(152, 73),
(152, 374),
(153, 91),
(153, 92),
(153, 96),
(153, 97),
(153, 98),
(153, 101),
(153, 102),
(153, 103),
(153, 104),
(153, 105),
(153, 108),
(153, 109),
(153, 110),
(154, 107),
(155, 113),
(155, 393),
(156, 114),
(157, 118),
(157, 119),
(157, 120),
(157, 377),
(158, 122),
(159, 124),
(160, 130),
(161, 135),
(161, 355),
(161, 357),
(161, 379),
(162, 136),
(162, 341),
(162, 371),
(162, 387),
(163, 140),
(163, 390),
(163, 391),
(164, 144),
(165, 145),
(165, 146),
(165, 147),
(165, 148),
(165, 152),
(165, 153),
(165, 154),
(165, 155),
(165, 156),
(165, 157),
(165, 158),
(165, 159),
(165, 160),
(165, 161),
(165, 162),
(165, 163),
(165, 164),
(165, 165),
(165, 166),
(165, 167),
(165, 168),
(165, 169),
(165, 170),
(165, 171),
(165, 172),
(165, 173),
(165, 174),
(165, 175),
(165, 176),
(165, 177),
(165, 178),
(165, 179),
(165, 180),
(165, 181),
(165, 182),
(165, 183),
(165, 184),
(165, 185),
(165, 186),
(165, 187),
(165, 188),
(165, 189),
(165, 190),
(165, 191),
(165, 192),
(165, 193),
(165, 194),
(165, 195),
(165, 196),
(165, 197),
(165, 198),
(165, 199),
(165, 200),
(165, 201),
(165, 202),
(165, 203),
(165, 204),
(165, 205),
(165, 206),
(165, 207),
(165, 208),
(165, 209),
(165, 210),
(165, 211),
(165, 212),
(165, 213),
(165, 214),
(165, 215),
(165, 216),
(165, 217),
(165, 218),
(165, 219),
(165, 220),
(165, 221),
(165, 222),
(165, 223),
(165, 224),
(165, 225),
(165, 226),
(165, 227),
(165, 228),
(165, 229),
(165, 230),
(165, 231),
(165, 232),
(165, 233),
(165, 234),
(165, 235),
(165, 236),
(165, 237),
(165, 238),
(165, 239),
(165, 240),
(165, 241),
(165, 242),
(165, 243),
(165, 244),
(165, 245),
(165, 246),
(165, 247),
(165, 248),
(165, 249),
(165, 250),
(165, 251),
(165, 252),
(165, 253),
(165, 254),
(165, 255),
(165, 256),
(165, 257),
(165, 258),
(165, 259),
(165, 260),
(165, 261),
(165, 262),
(165, 263),
(165, 264),
(165, 265),
(165, 266),
(165, 267),
(165, 268),
(165, 269),
(165, 270),
(165, 271),
(165, 272),
(165, 273),
(165, 274),
(165, 275),
(165, 276),
(165, 277),
(165, 278),
(165, 279),
(165, 280),
(165, 281),
(165, 282),
(165, 283),
(165, 284),
(165, 285),
(165, 286),
(165, 287),
(165, 288),
(165, 289),
(165, 290),
(165, 291),
(165, 292),
(165, 293),
(165, 294),
(165, 295),
(165, 296),
(165, 297),
(165, 298),
(165, 299),
(165, 300),
(165, 301),
(165, 302),
(165, 303),
(165, 304),
(165, 305),
(165, 306),
(165, 307),
(165, 308),
(165, 309),
(165, 310),
(165, 311),
(165, 312),
(165, 313),
(165, 314),
(165, 315),
(165, 316),
(165, 317),
(165, 318),
(165, 319),
(165, 320),
(165, 321),
(165, 322),
(165, 323),
(165, 324),
(165, 325),
(165, 330),
(165, 331),
(165, 332),
(165, 333),
(165, 334),
(165, 335),
(165, 336),
(165, 337),
(165, 338),
(165, 339),
(165, 342),
(165, 343),
(165, 344),
(165, 345),
(165, 346),
(165, 347),
(165, 348),
(165, 349),
(165, 350),
(165, 351),
(165, 353),
(165, 354),
(166, 149),
(166, 150),
(166, 360),
(167, 326),
(167, 327),
(167, 328),
(167, 329),
(168, 340),
(169, 352),
(170, 362),
(171, 363),
(172, 365),
(173, 366),
(174, 368),
(174, 369),
(175, 378),
(176, 381),
(177, 384),
(178, 386),
(179, 397);

INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(1, 8, 'https://bitbucket.org/composedsystems/composed-af-messages/src/master/', 'GPM', '0.1.0', '2019-04-10 17:29:20', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.1.0] - 2019-04-10\r\n### Added\r\n- Everything (initial publication includes MessageCycle and RoundTripMessage)', NULL),
(2, 8, 'https://bitbucket.org/composedsystems/composed-af-messages/src/master/', 'GPM', '0.2.0', '2020-02-07 17:42:27', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.2.0] - 2020-02-07\r\n### Added\r\n- PriorityStopMessage allows stopping with L/M/H priority level via \'Send Priority Stop Msg\' or Critical priority using \'Send Immediate Stop Msg\'.\r\n\r\n## [0.1.0] - 2019-04-10\r\n### Added\r\n- Everything (initial publication includes MessageCycle and RoundTripMessage)', NULL),
(3, 8, 'https://bitbucket.org/composedsystems/composed-af-messages/src/master/', 'GPM', '0.2.1', '2020-06-20 18:45:55', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.2.1] - 2020-06-20\r\n### Deprecated\r\n- Marked \'Send Immediate Stop Msg\' for removal because it did not actually work. Use Send Priority Stop Msg instead with a priority of \'High\'.\r\n### Removed\r\n- GPM \'Dev\' dependency on @cs/ci\r\n\r\n## [0.2.0] - 2020-02-07\r\n### Added\r\n- PriorityStopMessage allows stopping with L/M/H priority level via \'Send Priority Stop Msg\' or Critical priority using \'Send Immediate Stop Msg\'.\r\n\r\n## [0.1.0] - 2019-04-10\r\n### Added\r\n- Everything (initial publication includes MessageCycle and RoundTripMessage)', NULL),
(4, 8, 'https://bitbucket.org/composedsystems/composed-af-messages/src/master/', 'GPM', '0.3.0', '2020-06-25 14:42:15', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.3.0] - 2020-06-25\r\n### Added\r\n- *ReturnMessageAdapter* allows for non-inheritance-based pre-addressed return messages (similar to AF Self-Addressed Msg, but without the liabilities).\r\n\r\n## [0.2.1] - 2020-06-20\r\n### Deprecated\r\n- Marked \'Send Immediate Stop Msg\' for removal because it did not actually work. Use Send Priority Stop Msg instead with a priority of \'High\'.\r\n### Removed\r\n- GPM \'Dev\' dependency on @cs/ci\r\n\r\n## [0.2.0] - 2020-02-07\r\n### Added\r\n- PriorityStopMessage allows stopping with L/M/H priority level via \'Send Priority Stop Msg\' or Critical priority using \'Send Immediate Stop Msg\'.\r\n\r\n## [0.1.0] - 2019-04-10\r\n### Added\r\n- Everything (initial publication includes MessageCycle and RoundTripMessage)', NULL),
(5, 9, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/wovalab_lib_antidoc/wovalab_lib_antidoc-1.0.0.14.vip', 'VIPM', '1.0.0.14', '2020-06-12 04:26:05', 'First public beta release.', 'wovalab_lib_asciidoc_for_labview>=1.1.0.18'),
(6, 9, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/wovalab_lib_antidoc/wovalab_lib_antidoc-1.0.0.22.vip', 'VIPM', '1.0.0.22', '2020-07-15 12:40:18', 'First release.', 'wovalab_lib_asciidoc_for_labview>=1.2.0.30'),
(7, 9, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/wovalab_lib_antidoc/wovalab_lib_antidoc-1.1.0.30.vip', 'VIPM', '1.1.0.30', '2020-09-15 15:02:36', 'This release brings GUI enhancement and CLI compatibility.\n\r\n== New features:\r\n. Add a progress bar in the tool GUI --> https://gitlab.com/wovalab/open-source/labview-doc-generator/-/issues/66\r\n. Add an option to scan libraries in the Dependencies --> https://gitlab.com/wovalab/open-source/labview-doc-generator/-/issues/65\r\n\r\n== Changes:\r\n. File name extension handling --> https://gitlab.com/wovalab/open-source/labview-doc-generator/-/issues/67\r\nNOTE: This change may generate bug for code relying on the public API\n\r. Check if lvproj path is correctly set --> https://gitlab.com/wovalab/open-source/labview-doc-generator/-/issues/69\n. Add default title if not set by the user --> https://gitlab.com/wovalab/open-source/labview-doc-generator/-/issues/68\n\r\n== Bug Fix :\r\n. Misspelling in the document generated --> https://gitlab.com/wovalab/open-source/labview-doc-generator/-/issues/61\r\n. UTF-8 encoding --> https://gitlab.com/wovalab/open-source/labview-doc-generator/-/issues/59', 'wovalab_lib_asciidoc_for_labview>=1.2.1.31'),
(8, 10, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/wovalab_lib_antidoc_cli/wovalab_lib_antidoc_cli-1.0.0.2.vip', 'VIPM', '1.0.0.2', '2020-09-15 15:05:36', 'First release.', 'wiresmith_technology_lib_g_cli>=2.3.0.7,wovalab_lib_antidoc>=1.1.0.30,wovalab_lib_asciidoc_for_labview>=1.2.1.31'),
(9, 11, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/wovalab_lib_asciidoc_for_labview/wovalab_lib_asciidoc_for_labview-1.0.0.11.vip', 'VIPM', '1.0.0.11', '2020-04-08 13:28:17', 'First release', NULL),
(10, 11, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/wovalab_lib_asciidoc_for_labview/wovalab_lib_asciidoc_for_labview-1.1.0.18.vip', 'VIPM', '1.1.0.18', '2020-04-10 00:22:33', '== New features:\n. Add polymorphic capability to append content (bloc and section) --> https://gitlab.com/wovalab/open-source/asciidoc-toolkit/-/issues/9\n. Add function to generate output for sections (skip the document header) --> https://gitlab.com/wovalab/open-source/asciidoc-toolkit/-/issues/19\n. Add function to import content from another file into the current document (include directive) --> https://gitlab.com/wovalab/open-source/asciidoc-toolkit/-/issues/20\n. Add toc levels attribute --> https://gitlab.com/wovalab/open-source/asciidoc-toolkit/-/issues/18\n. Add numbering section attribute --> https://gitlab.com/wovalab/open-source/asciidoc-toolkit/-/issues/11\n\n== Changes:\n. Natural section level handling -->  https://gitlab.com/wovalab/open-source/asciidoc-toolkit/issues/12\n. Section vi icon --> https://gitlab.com/wovalab/open-source/asciidoc-toolkit/issues/10\n. New Attributes palette functions\n\n== Bug Fix :\n. Remove useless folder in package --> https://gitlab.com/wovalab/open-source/asciidoc-toolkit/issues/13\n. Improve image path handling --> https://gitlab.com/wovalab/open-source/asciidoc-toolkit/issues/15', NULL),
(11, 11, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/wovalab_lib_asciidoc_for_labview/wovalab_lib_asciidoc_for_labview-1.2.0.30.vip', 'VIPM', '1.2.0.30', '2020-07-10 14:20:27', '== New features:\n. Add Diagram bloc --> https://gitlab.com/wovalab/open-source/asciidoc-toolkit/-/issues/22\n. Add function to add custom attributes not directly handle by the toolkit --> https://gitlab.com/wovalab/open-source/asciidoc-toolkit/-/issues/26\n. Handle Doctype property --> https://gitlab.com/wovalab/open-source/asciidoc-toolkit/-/issues/25\n\n== Changes:\n. Email information added to Author --> https://gitlab.com/wovalab/open-source/asciidoc-toolkit/-/issues/23\nNOTE: This change breaks public toolkit interface. You will have to modify existing code after update\n. Wovalab_lib_AsciiDoctor library is no more installed in Sources folder\n\n== Bug Fix :\n. Document header was ill formed when Autors array was empty --> https://gitlab.com/wovalab/open-source/asciidoc-toolkit/-/issues/24', NULL),
(12, 11, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/wovalab_lib_asciidoc_for_labview/wovalab_lib_asciidoc_for_labview-1.2.1.31.vip', 'VIPM', '1.2.1.31', '2020-09-09 14:03:51', 'This a maintenance release\n\n== Changes:\n. Ouptut string encoding set to UTF-8 --> https://gitlab.com/wovalab/open-source/asciidoc-toolkit/-/issues/27\n. If needed for recording the output in a file, folder arborescence is created --> https://gitlab.com/wovalab/open-source/asciidoc-toolkit/-/issues/28\n\n== Bug Fix :\n. Rendering issue when paragraph is empty --> https://gitlab.com/wovalab/open-source/asciidoc-toolkit/-/issues/14', NULL),
(13, 12, 'https://bitbucket.org/composedsystems/composed-assertionshttps://bitbucket.org/composedsystems/composed-assertions', 'GPM', '0.1.0', '2019-04-22 16:24:57', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [0.1.0] - 2019-04-22\r\n### Added\r\n- Everything (initial release)\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security', NULL),
(14, 13, 'https://gitlab.com/mgi/gpm-packages/base64', 'GPM', '0.1.0', '2018-09-05 00:36:53', '## 0.1.0\r\n\r\nInitial Release', NULL),
(15, 13, 'https://gitlab.com/mgi/gpm-packages/base64', 'GPM', '0.1.1', '2018-11-21 23:13:07', '## 0.1.1\r\n\r\nUpdated Readme.\r\n\r\n## 0.1.0\r\n\r\nInitial Release', NULL),
(16, 14, 'https://bitbucket.org/composedsystems/composed-beacon/src/master/', 'GPM', '0.9.3', '2019-02-09 20:42:52', 'initial release', '@cs/lookup-table (^0.0.1)'),
(17, 14, 'https://bitbucket.org/composedsystems/composed-beacon/src/master/', 'GPM', '0.9.2', '2019-02-09 21:07:26', 'initial release', '@cs/lookup-table (^0.0.1)'),
(18, 14, 'https://bitbucket.org/composedsystems/composed-beacon/src/master/', 'GPM', '0.9.7', '2019-02-27 22:18:48', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.1.1] - 2019-02-27\r\n### Added\r\n- Added test for beacon discovery in <3 seconds\r\n- Updated composed-ci.cfg for new CI package version\r\n- reduced pre launch init timeout when checking for duplicate names\r\n\r\n## [0.1.0] - 2019-02-21\r\n### Added\r\nEverything - initial release', '@cs/lookup-table (^0.0.1)'),
(19, 14, 'https://bitbucket.org/composedsystems/composed-beacon/src/master/', 'GPM', '0.9.8', '2019-04-16 18:27:24', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.9.8] - 2019-02-27\r\n### Changed\r\n- updated dependencies\r\n\r\n## [0.9.7] - 2019-02-27\r\n### Added\r\n- Added test for beacon discovery in <3 seconds\r\n- Updated composed-ci.cfg for new CI package version\r\n- reduced pre launch init timeout when checking for duplicate names\r\n\r\n## [0.9.0] - 2019-02-21\r\n### Added\r\nEverything - initial release', '@cs/lookup-table (^0.0.3)'),
(20, 15, 'https://gitlab.com/QSI_Shared_Code/SharedQControls/CalendarControl.git', 'GPM', '1.0.0', '2019-09-14 02:37:07', 'Initial release', NULL),
(21, 16, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_caraya/jki_lib_caraya-0.1.0.15.vip', 'VIPM', '0.1.0.15', '2015-11-14 00:02:20', 'Improved examples and documentation', 'jki_lib_state_machine>=2.0.0,oglib_array>=3.0.0,jki_rsc_toolkits_palette>=1.1'),
(22, 16, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_caraya/jki_lib_caraya-0.2.0.17.vip', 'VIPM', '0.2.0.17', '2015-11-16 16:43:05', '- New toolkit and palette icon\n- Clearer UI to help spot the failed test\n- Clearer examples to help new users\n- Changed Label input of assert VIs to be recommended instead of optional\n- Changed non-palette VIs to be of private scope\n- Fixed an issue where an assert in a subVI of a test case incorrectly treated as a test\n', 'jki_lib_state_machine>=2.0.0,oglib_array>=3.0.0,jki_rsc_toolkits_palette>=1.1'),
(23, 16, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_caraya/jki_lib_caraya-0.2.1.19.vip', 'VIPM', '0.2.1.19', '2015-11-25 17:01:59', '- Added Integer Dictionary example\n', 'jki_lib_state_machine>=2.0.0,oglib_array>=3.0.0,jki_rsc_toolkits_palette>=1.1'),
(24, 16, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_caraya/jki_lib_caraya-0.3.0.20.vip', 'VIPM', '0.3.0.20', '2015-12-04 14:39:30', '- Open block diagram when results are double clicked\n', 'jki_lib_state_machine>=2.0.0,oglib_array>=3.0.0,jki_rsc_toolkits_palette>=1.1'),
(25, 16, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_caraya/jki_lib_caraya-0.4.1.22.vip', 'VIPM', '0.4.1.22', '2016-07-12 21:50:56', 'No longer returns an error when using empty test suites.', 'jki_lib_state_machine>=2.0.0,oglib_array>=3.0.0,jki_rsc_toolkits_palette>=1.1'),
(26, 16, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_caraya/jki_lib_caraya-0.4.2.23.vip', 'VIPM', '0.4.2.23', '2017-04-27 16:46:48', 'Added keyboard shortcut Ctrl+W to close Caraya UI. ', 'jki_lib_state_machine>=2.0.0,oglib_array>=3.0.0,jki_rsc_toolkits_palette>=1.1'),
(27, 16, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_caraya/jki_lib_caraya-0.5.0.30.vip', 'VIPM', '0.5.0.30', '2017-05-04 18:23:29', 'Added a help file.', 'jki_lib_state_machine>=2.0.0,oglib_array>=3.0.0,jki_rsc_toolkits_palette>=1.1'),
(28, 16, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_caraya/jki_lib_caraya-0.5.1.31.vip', 'VIPM', '0.5.1.31', '2017-05-05 14:34:08', 'Updated the documentation.', 'jki_lib_state_machine>=2.0.0,oglib_array>=3.0.0,jki_rsc_toolkits_palette>=1.1'),
(29, 16, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_caraya/jki_lib_caraya-0.6.0.49.vip', 'VIPM', '0.6.0.49', '2018-12-07 15:41:41', '[Feature: 7] Adding support for JUnit-compatible XML file export\r\n[Feature: 11] Adding an \"Assert Equal_Float\" assertion to compare float representation within a certain precision\r\n[Feature: 14] Hook to inject an alternate \"Export\" format\r\n[Fix: 15] Running Caraya Assertions in EXE builds\n[Feature: 20] Double-click on test result in Test Manager GUI now points to the Assertion node if Text of label attached to assertion node matches the exact name of the test.\r\n[Fix: 24] Default report generation now fixes hierarchy of assertions\r\n[Feature: 25] Change of specification for Assert Equal to separate \"Value\" and \"Value and Type\" assertions\n[Feature: 26] Assertions are now grouped in a polymorphic VIfor palette menu.\n[Fix: 27] Double-clicking on empty space in the tree of the Test Manager UI no longer generates an error.\n[Fix: 28] Fixed the issue where opening a test VI after it had left memory would give an error.\n\r\n\r\nThanks to the community members for their issue reports, feature requests and/or code contributions for this release: \r\n\r\nChristopher Field (@volks73)\r\nStefan Droege (@StefanD986)\r\nKosist (@kosist)\r\nFrancois Normandin (@francois-normandin)\r\nOmar Mussa (@omarmussa)\r\nJim Kring (@jimkring)\r\nOlivierLabo (@OlivierLabo)\r\nJames Powell (@drjdpowell)\nNeil Pate (@neilpate)\r\n\r\n', 'jki_lib_state_machine>=2.0.0,jki_rsc_toolkits_palette>=1.1'),
(30, 16, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_caraya/jki_lib_caraya-0.6.1.51.vip', 'VIPM', '0.6.1.51', '2019-01-14 16:52:07', '[Feature: 7] Adding support for JUnit-compatible XML file export\r\n[Feature: 11] Adding an \"Assert Equal_Float\" assertion to compare float representation within a certain precision\r\n[Feature: 14] Hook to inject an alternate \"Export\" format\r\n[Fix: 15] Running Caraya Assertions in EXE builds\n[Feature: 20] Double-click on test result in Test Manager GUI now points to the Assertion node if Text of label attached to assertion node matches the exact name of the test.\r\n[Fix: 24] Default report generation now fixes hierarchy of assertions\r\n[Feature: 25] Change of specification for Assert Equal to separate \"Value\" and \"Value and Type\" assertions\n[Feature: 26] Assertions are now grouped in a polymorphic VIfor palette menu.\n[Fix: 27] Double-clicking on empty space in the tree of the Test Manager UI no longer generates an error.\n[Fix: 28] Fixed the issue where opening a test VI after it had left memory would give an error.\n[Fix: 31] Equal Value Comparison now asserts correctly when comparing equal typedef with non-typedef values\n[Fix: 32] Added recursive verification inside cluster to assert value equality for nested values with different type representations\n\r\n\r\nThanks to the community members for their issue reports, feature requests and/or code contributions for this release: \r\n\r\nChristopher Field (@volks73)\r\nStefan Droege (@StefanD986)\r\nKosist (@kosist)\r\nFrancois Normandin (@francois-normandin)\r\nOmar Mussa (@omarmussa)\r\nJim Kring (@jimkring)\r\nOlivierLabo (@OlivierLabo)\r\nJames Powell (@drjdpowell)\nNeil Pate (@neilpate)\r\n\r\n', 'jki_lib_state_machine>=2.0.0,jki_rsc_toolkits_palette>=1.1'),
(31, 16, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_caraya/jki_lib_caraya-0.6.3.54.vip', 'VIPM', '0.6.3.54', '2019-01-23 19:39:09', '[Feature: 7] Adding support for JUnit-compatible XML file export\r\n[Feature: 11] Adding an \"Assert Equal_Float\" assertion to compare float representation within a certain precision\r\n[Feature: 14] Hook to inject an alternate \"Export\" format\r\n[Fix: 15] Running Caraya Assertions in EXE builds\n[Feature: 20] Double-click on test result in Test Manager GUI now points to the Assertion node if Text of label attached to assertion node matches the exact name of the test.\r\n[Fix: 24] Default report generation now fixes hierarchy of assertions\r\n[Feature: 25] Change of specification for Assert Equal to separate \"Value\" and \"Value and Type\" assertions\n[Feature: 26] Assertions are now grouped in a polymorphic VIfor palette menu.\n[Fix: 27] Double-clicking on empty space in the tree of the Test Manager UI no longer generates an error.\n[Fix: 28] Fixed the issue where opening a test VI after it had left memory would give an error.\n[Fix: 31] Equal Value Comparison now asserts correctly when comparing equal typedef with non-typedef values\n[Fix: 32] Added recursive verification inside cluster to assert value equality for nested values with different type representations\n[Feature: 5] Added ability to show only failed tests on the main UI\n[Fix: 3] Clicking on expand/collapse (+/-) tree node quickly will no longer open the test VI (as a double-click on test does)\n\r\nThanks to the community members for their issue reports, feature requests and/or code contributions for this release: \r\n\r\nChristopher Field (@volks73)\r\nStefan Droege (@StefanD986)\r\nKosist (@kosist)\r\nFrancois Normandin (@francois-normandin)\r\nOmar Mussa (@omarmussa)\r\nJim Kring (@jimkring)\r\nOlivierLabo (@OlivierLabo)\r\nJames Powell (@drjdpowell)\nNeil Pate (@neilpate)\r\n\r\n', 'jki_lib_state_machine>=2.0.0,jki_rsc_toolkits_palette>=1.1'),
(32, 16, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_caraya/jki_lib_caraya-1.0.0.113.vip', 'VIPM', '1.0.0.113', '2020-05-19 22:59:21', 'Fixes: \n\n[Fix: 4] Fixed the intermittent error 1 when destroying Test Suites\n[Fix: 34] Added an optional \"Execution Time (us)\" terminal to assertion methods for reporting\n[Fix: 40] Assertions are now sorted in order they occur instead of ascending alphabetically\n[Fix: 44] Fixed the conditions that overewrote assertions when test names were identical\n[Fix: 47] Double-clicking on assertion result in Test Manager now works after VI has left memory for lvlibs inside lvlibs.\n[Fix: 50] Updated the Math Test Suite to use non-deprecated method for Test Report\n[Fix: 53] Fixed issues with comparison (greater/less) of variant representations when integers and floats were compared\n[Fix: 65] Restored RT compatibility for Process VI after CLI integration\n[Fix: 68] Fixed an issue where the number of skipped and failed tests in JUnit report were wrong.\n[Fix: 79] Added XML escaping to ensure JUnit parses correctly\n\nNew Features: \n\n[Feature: 34] Time is filtered from the JUnit report if execution time is not provided\n[Feature: 41] Upgraded sources to LV2013\n[Feature: 43] Added a verbose option the the Test Suite to export detailed explanation of failures\n[Feature: 45] Attribute a unique identifier to each assertions performed\n[Feature: 48] Added a Rerun All Tests menu in the Test Manager UI.\n[Feature: 52] Added support for Command Line Interface which allows discovery and execution of all tests found under a folder. Outputs to a J-Unit compatible report or a plain text report.\n[Feature: 55] Creation of a Test Runner class to search and execute tests programmatically. Includes a pre-build action for build integration.\n[Feature: 62] Defined error code range (7000-7999) for Caraya framework\n[Feature: 64] Support for QuickDrop plugin to run all unit tests in active project (Ctrl-U)\n[Feature: 78] Support for nested Test Suites through Test Runner class extensions\n[Feature: 87] No Tests Found message added to Test Manager UI when no assertions found\n\nThanks for all the contributions that led to this release, whether by reporting bugs, requesting features that made it to release or by lending a hand in fixing issues or releasing features:\n\narjen-hiemstra (@arjen-hiemstra)\nCarlo (@carlodri)\nCyril Gambini (@CygaLV)\nMatthew Jacobson (@jacobson3)\nSam Kaley (@skaley)\nkosist (@kosist)\nJim Kring (@jimkring)\nPiotr Kruczkowski (@Primary-Key)\nlaxmanraok (@laxmanraok)\nTomi Maila (@tmaila)\nOmar Mussa (@omarmussa)\nFrancois Normandin (@francois-normandin)\nOlivierLabo (@OlivierLabo)\nMatt Pollock (@pollockm)\nJames D. Powell (@drjdpowell)\nChris Stryker (@ChrisStrykesAgain)\nSam Taggart (@stagg54)\n', 'oglib_array>=4.1.1.14,oglib_error>=4.2.0.23,oglib_file>=4.0.1.22,oglib_lvdata>=4.2.0.21,oglib_string>=4.1.0.12,jki_lib_state_machine>=2018.0.7.45,jki_rsc_toolkits_palette>=1.1'),
(33, 16, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_caraya/jki_lib_caraya-1.0.1.114.vip', 'VIPM', '1.0.1.114', '2020-05-23 10:36:36', 'Fixes: \n\n[Fix: 4] Fixed the intermittent error 1 when destroying Test Suites\n[Fix: 34] Added an optional \"Execution Time (us)\" terminal to assertion methods for reporting\n[Fix: 40] Assertions are now sorted in order they occur instead of ascending alphabetically\n[Fix: 44] Fixed the conditions that overewrote assertions when test names were identical\n[Fix: 47] Double-clicking on assertion result in Test Manager now works after VI has left memory for lvlibs inside lvlibs.\n[Fix: 50] Updated the Math Test Suite to use non-deprecated method for Test Report\n[Fix: 53] Fixed issues with comparison (greater/less) of variant representations when integers and floats were compared\n[Fix: 65] Restored RT compatibility for Process VI after CLI integration\n[Fix: 68] Fixed an issue where the number of skipped and failed tests in JUnit report were wrong.\n[Fix: 79] Added XML escaping to ensure JUnit parses correctly\n\nNew Features: \n\n[Feature: 34] Time is filtered from the JUnit report if execution time is not provided\n[Feature: 41] Upgraded sources to LV2013\n[Feature: 43] Added a verbose option the the Test Suite to export detailed explanation of failures\n[Feature: 45] Attribute a unique identifier to each assertions performed\n[Feature: 48] Added a Rerun All Tests menu in the Test Manager UI.\n[Feature: 52] Added support for Command Line Interface which allows discovery and execution of all tests found under a folder. Outputs to a J-Unit compatible report or a plain text report.\n[Feature: 55] Creation of a Test Runner class to search and execute tests programmatically. Includes a pre-build action for build integration.\n[Feature: 62] Defined error code range (7000-7999) for Caraya framework\n[Feature: 64] Support for QuickDrop plugin to run all unit tests in active project (Ctrl-U)\n[Feature: 78] Support for nested Test Suites through Test Runner class extensions\n[Feature: 87] No Tests Found message added to Test Manager UI when no assertions found\n[Feature: 88] Added support for Library Refnum Test Runner\n\nThanks for all the contributions that led to this release, whether by reporting bugs, requesting features that made it to release or by lending a hand in fixing issues or releasing features:\n\narjen-hiemstra (@arjen-hiemstra)\nCarlo (@carlodri)\nCyril Gambini (@CygaLV)\nMatthew Jacobson (@jacobson3)\nSam Kaley (@skaley)\nJim Kring (@jimkring)\nPiotr Kruczkowski (@Primary-Key)\nlaxmanraok (@laxmanraok)\nTomi Maila (@tmaila)\nOmar Mussa (@omarmussa)\nFrancois Normandin (@francois-normandin)\nOlivierLabo (@OlivierLabo)\nMatt Pollock (@pollockm)\nJames D. Powell (@drjdpowell)\nChris Stryker (@ChrisStrykesAgain)\nSam Taggart (@stagg54)\nIvan Yakushchenko (@kosist)\n', 'oglib_array>=4.1.1.14,oglib_error>=4.2.0.23,oglib_file>=4.0.1.22,oglib_lvdata>=4.2.0.21,oglib_string>=4.1.0.12,jki_lib_state_machine>=2018.0.7.45,jki_rsc_toolkits_palette>=1.1'),
(34, 16, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_caraya/jki_lib_caraya-1.0.2.115.vip', 'VIPM', '1.0.2.115', '2020-05-23 16:23:31', 'Fixes: \n\n[Fix: 4] Fixed the intermittent error 1 when destroying Test Suites\n[Fix: 34] Added an optional \"Execution Time (us)\" terminal to assertion methods for reporting\n[Fix: 40] Assertions are now sorted in order they occur instead of ascending alphabetically\n[Fix: 44] Fixed the conditions that overewrote assertions when test names were identical\n[Fix: 47] Double-clicking on assertion result in Test Manager now works after VI has left memory for lvlibs inside lvlibs.\n[Fix: 50] Updated the Math Test Suite to use non-deprecated method for Test Report\n[Fix: 53] Fixed issues with comparison (greater/less) of variant representations when integers and floats were compared\n[Fix: 65] Restored RT compatibility for Process VI after CLI integration\n[Fix: 68] Fixed an issue where the number of skipped and failed tests in JUnit report were wrong.\n[Fix: 79] Added XML escaping to ensure JUnit parses correctly\n[Fix: 92] Upstream error will skip the following tests (Caraya 1.0.0 bug hotfix)\n\nNew Features: \n\n[Feature: 34] Time is filtered from the JUnit report if execution time is not provided\n[Feature: 41] Upgraded sources to LV2013\n[Feature: 43] Added a verbose option the the Test Suite to export detailed explanation of failures\n[Feature: 45] Attribute a unique identifier to each assertions performed\n[Feature: 48] Added a Rerun All Tests menu in the Test Manager UI.\n[Feature: 52] Added support for Command Line Interface which allows discovery and execution of all tests found under a folder. Outputs to a J-Unit compatible report or a plain text report.\n[Feature: 55] Creation of a Test Runner class to search and execute tests programmatically. Includes a pre-build action for build integration.\n[Feature: 62] Defined error code range (7000-7999) for Caraya framework\n[Feature: 64] Support for QuickDrop plugin to run all unit tests in active project (Ctrl-U)\n[Feature: 78] Support for nested Test Suites through Test Runner class extensions\n[Feature: 87] No Tests Found message added to Test Manager UI when no assertions found\n[Feature: 88] Added support for Library Refnum Test Runner\n\nThanks for all the contributions that led to this release, whether by reporting bugs, requesting features that made it to release or by lending a hand in fixing issues or releasing features:\n\narjen-hiemstra (@arjen-hiemstra)\nCarlo (@carlodri)\nCyril Gambini (@CygaLV)\nMatthew Jacobson (@jacobson3)\nSam Kaley (@skaley)\nJim Kring (@jimkring)\nPiotr Kruczkowski (@Primary-Key)\nlaxmanraok (@laxmanraok)\nTomi Maila (@tmaila)\nOmar Mussa (@omarmussa)\nFrancois Normandin (@francois-normandin)\nOlivierLabo (@OlivierLabo)\nMatt Pollock (@pollockm)\nJames D. Powell (@drjdpowell)\nChris Stryker (@ChrisStrykesAgain)\nSam Taggart (@stagg54)\nIvan Yakushchenko (@kosist)\n', 'oglib_array>=4.1.1.14,oglib_error>=4.2.0.23,oglib_file>=4.0.1.22,oglib_lvdata>=4.2.0.21,oglib_string>=4.1.0.12,jki_lib_state_machine>=2018.0.7.45,jki_rsc_toolkits_palette>=1.1'),
(35, 17, 'https://bitbucket.org/composedsystems/composed-car-wash/src/master/', 'GPM', '0.1.0', '2019-09-26 05:45:22', '## [0.1.0] - 2019-09-26\r\n- Initial Release', '@cs/ci (^1.2.0),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.3.0),@cs/test-executive-builder (^0.0.12-Beta)'),
(36, 17, 'https://bitbucket.org/composedsystems/composed-car-wash/src/master/', 'GPM', '0.1.1', '2019-09-26 19:55:35', '## [0.1.0] - 2019-09-26\r\n- Removed composed-ci as dependency\r\n\r\n## [0.1.0] - 2019-09-26\r\n- Initial Release', '@cs/mva-framework (^2.2.3),@cs/test-executive (^1.3.0),@cs/test-executive-builder (^0.0.12-Beta)'),
(37, 17, 'https://bitbucket.org/composedsystems/composed-car-wash/src/master/', 'GPM', '0.1.2', '2019-09-26 20:50:41', '## [0.1.2] - 2019-09-26\r\n- Updated White List\r\n\r\n## [0.1.1] - 2019-09-26\r\n- Removed composed-ci as dependency\r\n\r\n## [0.1.0] - 2019-09-26\r\n- Initial Release', '@cs/mva-framework (^2.2.3),@cs/test-executive (^1.3.0),@cs/test-executive-builder (^0.0.12-Beta)'),
(38, 17, 'https://bitbucket.org/composedsystems/composed-car-wash/src/master/', 'GPM', '0.1.3', '2019-09-27 14:16:02', '## [0.1.3] - 2019-09-26\r\n- Mass compiled code to see if it helps at all with linking on the install side\r\n\r\n## [0.1.2] - 2019-09-26\r\n- Updated White List\r\n\r\n## [0.1.1] - 2019-09-26\r\n- Removed composed-ci as dependency\r\n\r\n## [0.1.0] - 2019-09-26\r\n- Initial Release', '@cs/mva-framework (^2.2.3),@cs/test-executive (^1.3.0),@cs/test-executive-builder (^0.0.12-Beta)'),
(39, 17, 'https://bitbucket.org/composedsystems/composed-car-wash/src/master/', 'GPM', '0.1.4', '2019-10-07 18:09:34', '## [0.1.4] - 2019-10-07\r\n- Built Against Test Executive Builder v0.0.15-Beta\r\n\r\n## [0.1.3] - 2019-09-26\r\n- Mass compiled code to see if it helps at all with linking on the install side\r\n\r\n## [0.1.2] - 2019-09-26\r\n- Updated White List\r\n\r\n## [0.1.1] - 2019-09-26\r\n- Removed composed-ci as dependency\r\n\r\n## [0.1.0] - 2019-09-26\r\n- Initial Release', '@cs/mva-framework (^2.2.3),@cs/test-executive-builder (^0.0.15-Beta)'),
(40, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '0.9.0', '2019-02-09 12:29:11', 'initial release', '@cs/configuration (^1.0.1)'),
(41, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '0.9.1', '2019-02-09 13:32:51', 'initial release', '@cs/configuration (^1.0.1)'),
(42, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '0.9.2', '2019-02-09 13:48:17', 'initial release', '@cs/configuration (^1.0.1)'),
(43, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '0.9.3', '2019-02-09 14:06:43', 'initial release', '@cs/configuration (^1.0.1)'),
(44, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '0.9.4', '2019-02-09 14:43:13', 'initial release', '@cs/configuration (^1.0.1)'),
(45, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '0.9.5', '2019-02-09 16:32:28', 'initial release', '@cs/configuration (^1.0.1)'),
(46, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '0.9.6', '2019-02-09 16:47:43', 'initial release', '@cs/configuration (^1.0.1)'),
(47, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '0.9.7', '2019-02-12 16:36:49', 'initial release', '@cs/configuration (^1.0.1)'),
(48, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '0.9.8', '2019-02-13 14:36:30', 'initial release', '@cs/configuration (^1.0.1)'),
(49, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '0.9.10', '2019-02-19 17:24:58', 'initial release', NULL),
(50, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '0.9.11', '2019-02-19 19:45:51', 'initial release', NULL),
(51, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '0.9.12', '2019-02-25 18:44:54', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.9.12] - 2019-02-25\r\n### Changed\r\n- small refactor from VIA feedback\r\n- added mass compile and relink steps to the CLI API\r\nsignificant rework of the sweet user interface, including new buttons for mass compile and relinking\r\n\r\n## [0.9.11] - 2019-02-19\r\n### Changed\r\n- updated composed-ci.ini\r\n- removed configuration.lvlib\r\n- removed dependency on @cs/configuration\r\n- added open project step\r\n- refactor due to new VIA configuration\r\n\r\n## [0.1.0] - 2019-02-7\r\n### Added\r\nInitial release\r\n', NULL),
(52, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '0.9.13', '2019-02-26 13:57:09', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.9.13] - 2019-02-26\r\n### Changed\r\n- removed dependency on ci-common-steps\r\n- updated documentation and icon/avatar\r\n- Open Project from CLI will return an error if <1 good VIs found or >0 bad VIs\r\n\r\n## [0.9.12] - 2019-02-25\r\n### Changed\r\n- small refactor from VIA feedback\r\n- added mass compile and relink steps to the CLI API\r\nsignificant rework of the sweet user interface, including new buttons for mass compile and relinking\r\n\r\n## [0.9.11] - 2019-02-19\r\n### Changed\r\n- updated composed-ci.ini\r\n- removed configuration.lvlib\r\n- removed dependency on @cs/configuration\r\n- added open project step\r\n- refactor due to new VIA configuration\r\n\r\n## [0.1.0] - 2019-02-7\r\n### Added\r\nInitial release\r\n', NULL),
(53, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '0.9.15', '2019-02-27 22:15:58', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.9.15] - 2019-02-27\r\n### Changed\r\n- renamed composed-ci.ini to composed-ci.cfg\r\n- added \'select build spec\' button to UI\r\n- added \'select tests\' button to UI and reworked the VI tester operation to use a folder and whitelist/blacklist\r\n### Removed\r\n- removed pipeline build step\r\n\r\n## [0.9.14] - 2019-02-26\r\n### Changed\r\n- removed dependency on ci-common-steps\r\n- updated documentation and icon/avatar\r\n- Open Project from CLI will return an error if <1 good VIs found or >0 bad VIs\r\n\r\n## [0.9.12] - 2019-02-25\r\n### Changed\r\n- small refactor from VIA feedback\r\n- added mass compile and relink steps to the CLI API\r\nsignificant rework of the sweet user interface, including new buttons for mass compile and relinking\r\n\r\n## [0.9.11] - 2019-02-19\r\n### Changed\r\n- updated composed-ci.ini\r\n- removed configuration.lvlib\r\n- removed dependency on @cs/configuration\r\n- added open project step\r\n- refactor due to new VIA configuration\r\n\r\n## [0.1.0] - 2019-02-7\r\n### Added\r\nInitial release\r\n', NULL),
(54, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '0.9.17', '2019-02-28 19:50:36', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n\r\n## [0.9.17] - 2019-02-28\r\n### Changed\r\n- manual API methods now generate usefult errors if input paramaters are bad\r\n- improved test coverage for bad of missing configuration files\r\n- improved test coverage for bad or missing working directory\r\n- improved test coverage for VI tester steps, which must be run manually\r\n\r\n## [0.9.16] - 2019-02-28\r\n### Changed\r\n- renamed composed-ci.ini to composed-ci.cfg\r\n- added \'select build spec\' button to UI\r\n- added \'select tests\' button to UI and reworked the VI tester operation to use a folder and whitelist/blacklist\r\n### Removed\r\n- removed pipeline build step\r\n\r\n## [0.9.14] - 2019-02-26\r\n### Changed\r\n- removed dependency on ci-common-steps\r\n- updated documentation and icon/avatar\r\n- Open Project from CLI will return an error if <1 good VIs found or >0 bad VIs\r\n\r\n## [0.9.12] - 2019-02-25\r\n### Changed\r\n- small refactor from VIA feedback\r\n- added mass compile and relink steps to the CLI API\r\nsignificant rework of the sweet user interface, including new buttons for mass compile and relinking\r\n\r\n## [0.9.11] - 2019-02-19\r\n### Changed\r\n- updated composed-ci.ini\r\n- removed configuration.lvlib\r\n- removed dependency on @cs/configuration\r\n- added open project step\r\n- refactor due to new VIA configuration\r\n\r\n## [0.1.0] - 2019-02-7\r\n### Added\r\nInitial release\r\n', NULL),
(55, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '1.0.0', '2019-04-15 15:20:03', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [1.0.0] - 2019-04-15\r\n### Changed\r\n- removed a breakpoint from manual build step that prevented builds from working\r\n- updated default value of build target to be \'my computer\'\r\n- build step now creates zip files of build output\r\n- build output is left in place, in case it is needed by subsequent build specs\r\n- \'build specification names\' no longer builds all if left blank.  Builds must be selected using the \'select build specs\' button on the configure build UI\r\n\r\n## [0.9.17] - 2019-02-28\r\n### Changed\r\n- manual API methods now generate usefult errors if input paramaters are bad\r\n- improved test coverage for bad of missing configuration files\r\n- improved test coverage for bad or missing working directory\r\n- improved test coverage for VI tester steps, which must be run manually\r\n\r\n## [0.9.16] - 2019-02-28\r\n### Changed\r\n- renamed composed-ci.ini to composed-ci.cfg\r\n- added \'select build spec\' button to UI\r\n- added \'select tests\' button to UI and reworked the VI tester operation to use a folder and whitelist/blacklist\r\n### Removed\r\n- removed pipeline build step\r\n\r\n## [0.9.14] - 2019-02-26\r\n### Changed\r\n- removed dependency on ci-common-steps\r\n- updated documentation and icon/avatar\r\n- Open Project from CLI will return an error if <1 good VIs found or >0 bad VIs\r\n\r\n## [0.9.12] - 2019-02-25\r\n### Changed\r\n- small refactor from VIA feedback\r\n- added mass compile and relink steps to the CLI API\r\nsignificant rework of the sweet user interface, including new buttons for mass compile and relinking\r\n\r\n## [0.9.11] - 2019-02-19\r\n### Changed\r\n- updated composed-ci.ini\r\n- removed configuration.lvlib\r\n- removed dependency on @cs/configuration\r\n- added open project step\r\n- refactor due to new VIA configuration\r\n\r\n## [0.1.0] - 2019-02-7\r\n### Added\r\nInitial release\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security', NULL),
(56, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '1.0.1', '2019-04-17 12:41:38', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [1.0.1] - 2019-04-17\r\n### Changed\r\n- fixed an issue where dependency order sorting in the relink step did not work for some packages\r\n\r\n## [1.0.0] - 2019-04-15\r\n### Changed\r\n- removed a breakpoint from manual build step that prevented builds from working\r\n- updated default value of build target to be \'my computer\'\r\n- build step now creates zip files of build output\r\n- build output is left in place, in case it is needed by subsequent build specs\r\n- \'build specification names\' no longer builds all if left blank.  Builds must be selected using the \'select build specs\' button on the configure build UI\r\n\r\n## [0.9.17] - 2019-02-28\r\n### Changed\r\n- manual API methods now generate usefult errors if input paramaters are bad\r\n- improved test coverage for bad of missing configuration files\r\n- improved test coverage for bad or missing working directory\r\n- improved test coverage for VI tester steps, which must be run manually\r\n\r\n## [0.9.16] - 2019-02-28\r\n### Changed\r\n- renamed composed-ci.ini to composed-ci.cfg\r\n- added \'select build spec\' button to UI\r\n- added \'select tests\' button to UI and reworked the VI tester operation to use a folder and whitelist/blacklist\r\n### Removed\r\n- removed pipeline build step\r\n\r\n## [0.9.14] - 2019-02-26\r\n### Changed\r\n- removed dependency on ci-common-steps\r\n- updated documentation and icon/avatar\r\n- Open Project from CLI will return an error if <1 good VIs found or >0 bad VIs\r\n\r\n## [0.9.12] - 2019-02-25\r\n### Changed\r\n- small refactor from VIA feedback\r\n- added mass compile and relink steps to the CLI API\r\nsignificant rework of the sweet user interface, including new buttons for mass compile and relinking\r\n\r\n## [0.9.11] - 2019-02-19\r\n### Changed\r\n- updated composed-ci.ini\r\n- removed configuration.lvlib\r\n- removed dependency on @cs/configuration\r\n- added open project step\r\n- refactor due to new VIA configuration\r\n\r\n## [0.1.0] - 2019-02-7\r\n### Added\r\nInitial release\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security', NULL),
(57, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '1.1.0', '2019-04-25 15:17:13', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [1.1.0] - 2019-04-25\r\n### Added\r\n- Added a new method called \"Recompile Project\" that will force a bottom-up recompile on all VIs in a project, including GPM dependencies.  This will fix any conflicts that may otherwise occur when opening the project and appear in the dependencies section.\r\n\r\n## [1.0.1] - 2019-04-17\r\n### Changed\r\n- fixed an issue where dependency order sorting in the relink step did not work for some packages\r\n\r\n## [1.0.0] - 2019-04-15\r\n### Changed\r\n- removed a breakpoint from manual build step that prevented builds from working\r\n- updated default value of build target to be \'my computer\'\r\n- build step now creates zip files of build output\r\n- build output is left in place, in case it is needed by subsequent build specs\r\n- \'build specification names\' no longer builds all if left blank.  Builds must be selected using the \'select build specs\' button on the configure build UI\r\n\r\n## [0.9.17] - 2019-02-28\r\n### Changed\r\n- manual API methods now generate usefult errors if input paramaters are bad\r\n- improved test coverage for bad of missing configuration files\r\n- improved test coverage for bad or missing working directory\r\n- improved test coverage for VI tester steps, which must be run manually\r\n\r\n## [0.9.16] - 2019-02-28\r\n### Changed\r\n- renamed composed-ci.ini to composed-ci.cfg\r\n- added \'select build spec\' button to UI\r\n- added \'select tests\' button to UI and reworked the VI tester operation to use a folder and whitelist/blacklist\r\n### Removed\r\n- removed pipeline build step\r\n\r\n## [0.9.14] - 2019-02-26\r\n### Changed\r\n- removed dependency on ci-common-steps\r\n- updated documentation and icon/avatar\r\n- Open Project from CLI will return an error if <1 good VIs found or >0 bad VIs\r\n\r\n## [0.9.12] - 2019-02-25\r\n### Changed\r\n- small refactor from VIA feedback\r\n- added mass compile and relink steps to the CLI API\r\nsignificant rework of the sweet user interface, including new buttons for mass compile and relinking\r\n\r\n## [0.9.11] - 2019-02-19\r\n### Changed\r\n- updated composed-ci.ini\r\n- removed configuration.lvlib\r\n- removed dependency on @cs/configuration\r\n- added open project step\r\n- refactor due to new VIA configuration\r\n\r\n## [0.1.0] - 2019-02-7\r\n### Added\r\nInitial release\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security', NULL);
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(58, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '1.2.0', '2019-08-30 18:07:27', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [1.2.0] - 2019-08-30\r\n### Added\r\n- improved open project log message, now lists specific bad vis it found\r\n- implemented \'import externals\' as a method of adding private source code as a dependency via git, and resolving gpm dependencies and adding them to the parent project.  Specify a GIT URI to clone, or leave blank to read the externals.json file and import all.\r\n- fixed an issue with the project recompile sorting order\r\n- added cyclic dependency check to project recompile and open project steps\r\n- switched config file format to JSON using MGI json library.  Existing binary configurations can still be read, but not created.\r\n\r\n## [1.1.0] - 2019-04-25\r\n### Added\r\n- Added a new method called \"Recompile Project\" that will force a bottom-up recompile on all VIs in a project, including GPM dependencies.  This will fix any conflicts that may otherwise occur when opening the project and appear in the dependencies section.\r\n\r\n## [1.0.1] - 2019-04-17\r\n### Changed\r\n- fixed an issue where dependency order sorting in the relink step did not work for some packages\r\n\r\n## [1.0.0] - 2019-04-15\r\n### Changed\r\n- removed a breakpoint from manual build step that prevented builds from working\r\n- updated default value of build target to be \'my computer\'\r\n- build step now creates zip files of build output\r\n- build output is left in place, in case it is needed by subsequent build specs\r\n- \'build specification names\' no longer builds all if left blank.  Builds must be selected using the \'select build specs\' button on the configure build UI\r\n\r\n## [0.9.17] - 2019-02-28\r\n### Changed\r\n- manual API methods now generate usefult errors if input paramaters are bad\r\n- improved test coverage for bad of missing configuration files\r\n- improved test coverage for bad or missing working directory\r\n- improved test coverage for VI tester steps, which must be run manually\r\n\r\n## [0.9.16] - 2019-02-28\r\n### Changed\r\n- renamed composed-ci.ini to composed-ci.cfg\r\n- added \'select build spec\' button to UI\r\n- added \'select tests\' button to UI and reworked the VI tester operation to use a folder and whitelist/blacklist\r\n### Removed\r\n- removed pipeline build step\r\n\r\n## [0.9.14] - 2019-02-26\r\n### Changed\r\n- removed dependency on ci-common-steps\r\n- updated documentation and icon/avatar\r\n- Open Project from CLI will return an error if <1 good VIs found or >0 bad VIs\r\n\r\n## [0.9.12] - 2019-02-25\r\n### Changed\r\n- small refactor from VIA feedback\r\n- added mass compile and relink steps to the CLI API\r\nsignificant rework of the sweet user interface, including new buttons for mass compile and relinking\r\n\r\n## [0.9.11] - 2019-02-19\r\n### Changed\r\n- updated composed-ci.ini\r\n- removed configuration.lvlib\r\n- removed dependency on @cs/configuration\r\n- added open project step\r\n- refactor due to new VIA configuration\r\n\r\n## [0.1.0] - 2019-02-7\r\n### Added\r\nInitial release\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security', '@mgi/json (^0.1.7),@mgi/semver (^0.1.1)'),
(59, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '1.3.0', '2019-09-29 18:17:54', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [1.3.0] - 2019-09-28\r\n### Changed\r\n- added Report Errors.vi to CLI api vis so the exact error number and message are sent to the command line output\r\n- bunch of external dependency feature updates\r\n- changed VI Tester and VI Analyzer step calls in Configure Build.vi to be by reference\r\n- added dependencies vipc to the tools folder (in bitbucket source)\r\n\r\n## [1.2.0] - 2019-08-30\r\n### Added\r\n- improved open project log message, now lists specific bad vis it found\r\n- implemented \'import externals\' as a method of adding private source code as a dependency via git, and resolving gpm dependencies and adding them to the parent project.  Specify a GIT URI to clone, or leave blank to read the externals.json file and import all.\r\n- fixed an issue with the project recompile sorting order\r\n- added cyclic dependency check to project recompile and open project steps\r\n- switched config file format to JSON using MGI json library.  Existing binary configurations can still be read, but not created.\r\n\r\n## [1.1.0] - 2019-04-25\r\n### Added\r\n- Added a new method called \"Recompile Project\" that will force a bottom-up recompile on all VIs in a project, including GPM dependencies.  This will fix any conflicts that may otherwise occur when opening the project and appear in the dependencies section.\r\n\r\n## [1.0.1] - 2019-04-17\r\n### Changed\r\n- fixed an issue where dependency order sorting in the relink step did not work for some packages\r\n\r\n## [1.0.0] - 2019-04-15\r\n### Changed\r\n- removed a breakpoint from manual build step that prevented builds from working\r\n- updated default value of build target to be \'my computer\'\r\n- build step now creates zip files of build output\r\n- build output is left in place, in case it is needed by subsequent build specs\r\n- \'build specification names\' no longer builds all if left blank.  Builds must be selected using the \'select build specs\' button on the configure build UI\r\n\r\n## [0.9.17] - 2019-02-28\r\n### Changed\r\n- manual API methods now generate usefult errors if input paramaters are bad\r\n- improved test coverage for bad of missing configuration files\r\n- improved test coverage for bad or missing working directory\r\n- improved test coverage for VI tester steps, which must be run manually\r\n\r\n## [0.9.16] - 2019-02-28\r\n### Changed\r\n- renamed composed-ci.ini to composed-ci.cfg\r\n- added \'select build spec\' button to UI\r\n- added \'select tests\' button to UI and reworked the VI tester operation to use a folder and whitelist/blacklist\r\n### Removed\r\n- removed pipeline build step\r\n\r\n## [0.9.14] - 2019-02-26\r\n### Changed\r\n- removed dependency on ci-common-steps\r\n- updated documentation and icon/avatar\r\n- Open Project from CLI will return an error if <1 good VIs found or >0 bad VIs\r\n\r\n## [0.9.12] - 2019-02-25\r\n### Changed\r\n- small refactor from VIA feedback\r\n- added mass compile and relink steps to the CLI API\r\nsignificant rework of the sweet user interface, including new buttons for mass compile and relinking\r\n\r\n## [0.9.11] - 2019-02-19\r\n### Changed\r\n- updated composed-ci.ini\r\n- removed configuration.lvlib\r\n- removed dependency on @cs/configuration\r\n- added open project step\r\n- refactor due to new VIA configuration\r\n\r\n## [0.1.0] - 2019-02-7\r\n### Added\r\nInitial release\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security', '@mgi/json (^0.1.7),@mgi/semver (^0.1.1)'),
(60, 18, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '1.4.0', '2020-02-12 19:01:06', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [1.4.0] - 2020-02-11\r\n### Changed\r\n- Added GPM dependencies and license files as source to this package to remove any relinking on fresh download\r\n- Created source distribution and NI package as new preferred way of package installation.  Won\'t require downloads for every project, and the VIs can be used to compile multiple LabVIEW versions and bitnesses.  \r\n- Package installs to C:\\Users\\Public\\Documents\\LabVIEW Data\\Composed-CI\\ by default\r\n- Import Externals no longer attempts to relink or recompile, as it was giving inconsistent results.  It is left to the developer to relink everything.  We have had best luck with Tools->Clear Compiled Object Cache.\r\n\r\n## [1.3.1] - 2019-11-20\r\n### Changed\r\n- Moved gpm dependency location to remove requirement for recompile on package installation\r\n\r\n## [1.3.0] - 2019-09-28\r\n### Changed\r\n- added Report Errors.vi to CLI api vis so the exact error number and message are sent to the command line output\r\n- bunch of external dependency feature updates\r\n- changed VI Tester and VI Analyzer step calls in Configure Build.vi to be by reference\r\n- added dependencies vipc to the tools folder (in bitbucket source)\r\n\r\n## [1.2.0] - 2019-08-30\r\n### Added\r\n- improved open project log message, now lists specific bad vis it found\r\n- implemented \'import externals\' as a method of adding private source code as a dependency via git, and resolving gpm dependencies and adding them to the parent project.  Specify a GIT URI to clone, or leave blank to read the externals.json file and import all.\r\n- fixed an issue with the project recompile sorting order\r\n- added cyclic dependency check to project recompile and open project steps\r\n- switched config file format to JSON using MGI json library.  Existing binary configurations can still be read, but not created.\r\n\r\n## [1.1.0] - 2019-04-25\r\n### Added\r\n- Added a new method called \"Recompile Project\" that will force a bottom-up recompile on all VIs in a project, including GPM dependencies.  This will fix any conflicts that may otherwise occur when opening the project and appear in the dependencies section.\r\n\r\n## [1.0.1] - 2019-04-17\r\n### Changed\r\n- fixed an issue where dependency order sorting in the relink step did not work for some packages\r\n\r\n## [1.0.0] - 2019-04-15\r\n### Changed\r\n- removed a breakpoint from manual build step that prevented builds from working\r\n- updated default value of build target to be \'my computer\'\r\n- build step now creates zip files of build output\r\n- build output is left in place, in case it is needed by subsequent build specs\r\n- \'build specification names\' no longer builds all if left blank.  Builds must be selected using the \'select build specs\' button on the configure build UI\r\n\r\n## [0.9.17] - 2019-02-28\r\n### Changed\r\n- manual API methods now generate usefult errors if input paramaters are bad\r\n- improved test coverage for bad of missing configuration files\r\n- improved test coverage for bad or missing working directory\r\n- improved test coverage for VI tester steps, which must be run manually\r\n\r\n## [0.9.16] - 2019-02-28\r\n### Changed\r\n- renamed composed-ci.ini to composed-ci.cfg\r\n- added \'select build spec\' button to UI\r\n- added \'select tests\' button to UI and reworked the VI tester operation to use a folder and whitelist/blacklist\r\n### Removed\r\n- removed pipeline build step\r\n\r\n## [0.9.14] - 2019-02-26\r\n### Changed\r\n- removed dependency on ci-common-steps\r\n- updated documentation and icon/avatar\r\n- Open Project from CLI will return an error if <1 good VIs found or >0 bad VIs\r\n\r\n## [0.9.12] - 2019-02-25\r\n### Changed\r\n- small refactor from VIA feedback\r\n- added mass compile and relink steps to the CLI API\r\nsignificant rework of the sweet user interface, including new buttons for mass compile and relinking\r\n\r\n## [0.9.11] - 2019-02-19\r\n### Changed\r\n- updated composed-ci.ini\r\n- removed configuration.lvlib\r\n- removed dependency on @cs/configuration\r\n- added open project step\r\n- refactor due to new VIA configuration\r\n\r\n## [0.1.0] - 2019-02-7\r\n### Added\r\nInitial release\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security', NULL),
(61, 19, 'https://gitlab.com/QSI_Shared_Code/SharedQControls/colorselector.git', 'GPM', '1.0.0', '2019-09-14 02:52:45', 'Initial release to GPM', NULL),
(62, 20, 'https://gitlab.com/QSI_Shared_Code/SharedQControls/ColumnSortMulticolumnListbox.git', 'GPM', '0.1.0', '2019-09-14 02:15:57', 'Initial Release', '@mgi/library-core (^0.4.2)'),
(63, 20, 'https://gitlab.com/QSI_Shared_Code/SharedQControls/ColumnSortMulticolumnListbox.git', 'GPM', '0.2.0', '2019-09-14 02:19:44', 'Initial Release', '@mgi/library-core (^0.4.2)'),
(64, 20, 'https://gitlab.com/QSI_Shared_Code/SharedQControls/ColumnSortMulticolumnListbox.git', 'GPM', '1.0.0', '2019-09-14 02:54:42', 'Initial Release', '@mgi/library-core (^0.4.2)'),
(65, 21, 'https://gitlab.com/QSI_Shared_Code/SharedQControls/ColumnSortMulticolumnListbox.git', 'GPM', '0.1.0', '2019-09-14 02:12:41', 'Initial Release', '@mgi/library-core (^0.4.2)'),
(66, 22, 'https://bitbucket.org/composedsystems/composed-beacon/src/master/', 'GPM', '0.9.0', '2019-02-08 17:15:48', 'initial release', '@cs/lookup-table (^0.0.1)'),
(67, 22, 'https://bitbucket.org/composedsystems/composed-beacon/src/master/', 'GPM', '0.9.2', '2019-02-09 20:42:32', 'initial release', '@cs/lookup-table (^0.0.1)'),
(68, 22, 'https://bitbucket.org/composedsystems/composed-beacon/src/master/', 'GPM', '0.9.1', '2019-02-09 21:01:54', 'initial release', '@cs/lookup-table (^0.0.1)'),
(69, 23, 'https://bitbucket.org/composedsystems/composed-ci/src/master', 'GPM', '0.1.0', '2019-02-08 17:17:07', 'initial release', '@cs/configuration (^1.0.1)'),
(70, 24, 'https://bitbucket.org/composedsystems/composed-configuration/src/master/', 'GPM', '1.0.0', '2019-01-23 16:40:36', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [1.0.0] - 2019-01-23\r\n### Release Note\r\nThis version is shippable. The public API is settled and the test suite provides reasonable coverage.\r\n### Added\r\n- Write configuration API\r\n- Full **IniFileSection** implementation (read and write)\r\n- **Initialize/Close Configuration Resource** interface methods invoked at reference open/close\r\n- Support for binary data type and defaulting to binary when class provides no type-specific implementation\r\n### Changed\r\n- Numeric types allowing implementation condendensed to Float/Int/Uint\r\n- Read/Write interface methods wrapped and protected to prevent accidental misuse\r\n\r\n## [0.0.1] - 2019-01-13\r\n### Added\r\n- Type assertion to mostly enforce correct API use (a stand-in for unsupported Community-scoped malleable VI)\r\n### Changed\r\n- A little project organization and documentation to clarify intended use\r\n\r\n## [0.0.0] - 2019-01-11\r\n### Added\r\n- Everything (Initial publication to test GPM)', NULL),
(71, 24, 'https://bitbucket.org/composedsystems/composed-configuration/src/master/', 'GPM', '1.0.1', '2019-01-24 00:08:25', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [1.0.1] - 2019-01-23\r\n### Changed\r\n- LabVIEW Version number (is *actually* 2017 **SP1**, but only major is currently supported)\r\n\r\n## [1.0.0] - 2019-01-23\r\n### Release Note\r\nThis version is shippable. The public API is settled and the test suite provides reasonable coverage.\r\n### Added\r\n- Write configuration API\r\n- Full **IniFileSection** implementation (read and write)\r\n- **Initialize/Close Configuration Resource** interface methods invoked at reference open/close\r\n- Support for binary data type and defaulting to binary when class provides no type-specific implementation\r\n### Changed\r\n- Numeric types allowing implementation condendensed to Float/Int/Uint\r\n- Read/Write interface methods wrapped and protected to prevent accidental misuse\r\n\r\n## [0.0.1] - 2019-01-13\r\n### Added\r\n- Type assertion to mostly enforce correct API use (a stand-in for unsupported Community-scoped malleable VI)\r\n### Changed\r\n- A little project organization and documentation to clarify intended use\r\n\r\n## [0.0.0] - 2019-01-11\r\n### Added\r\n- Everything (Initial publication to test GPM)', NULL),
(72, 24, 'https://bitbucket.org/composedsystems/composed-configuration/src/master/', 'GPM', '1.0.2', '2019-03-02 00:11:44', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [1.0.2] - 2019-03-01\r\n### Added\r\n- IniFileSection class now writes and retrieves timestamp config as time-formatted string\r\n### Fixed\r\n- Minor cleanups and fixes from static analysis results and adding source code to CI\r\n\r\n## [1.0.1] - 2019-01-23\r\n### Changed\r\n- LabVIEW Version number (is *actually* 2017 **SP1**, but only major is currently supported)\r\n\r\n## [1.0.0] - 2019-01-23\r\n### Release Note\r\nThis version is shippable. The public API is settled and the test suite provides reasonable coverage.\r\n### Added\r\n- Write configuration API\r\n- Full **IniFileSection** implementation (read and write)\r\n- **Initialize/Close Configuration Resource** interface methods invoked at reference open/close\r\n- Support for binary data type and defaulting to binary when class provides no type-specific implementation\r\n### Changed\r\n- Numeric types allowing implementation condendensed to Float/Int/Uint\r\n- Read/Write interface methods wrapped and protected to prevent accidental misuse\r\n\r\n## [0.0.1] - 2019-01-13\r\n### Added\r\n- Type assertion to mostly enforce correct API use (a stand-in for unsupported Community-scoped malleable VI)\r\n### Changed\r\n- A little project organization and documentation to clarify intended use\r\n\r\n## [0.0.0] - 2019-01-11\r\n### Added\r\n- Everything (Initial publication to test GPM)', NULL),
(73, 24, 'https://bitbucket.org/composedsystems/composed-configuration/src/master/', 'GPM', '1.1.0', '2019-04-09 22:12:10', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [1.1.0] - 2019-04-09\r\n### Added\r\n- TransientConfiguration concrete type (i.e. not persisting to disk) for use as a test double in any unit tests that depend on configuration\r\n\r\n## [1.0.2] - 2019-03-01\r\n### Added\r\n- IniFileSection class now writes and retrieves timestamp config as time-formatted string\r\n### Fixed\r\n- Minor cleanups and fixes from static analysis results and adding source code to CI\r\n\r\n## [1.0.1] - 2019-01-23\r\n### Changed\r\n- LabVIEW Version number (is *actually* 2017 **SP1**, but only major is currently supported)\r\n\r\n## [1.0.0] - 2019-01-23\r\n### Release Note\r\nThis version is shippable. The public API is settled and the test suite provides reasonable coverage.\r\n### Added\r\n- Write configuration API\r\n- Full **IniFileSection** implementation (read and write)\r\n- **Initialize/Close Configuration Resource** interface methods invoked at reference open/close\r\n- Support for binary data type and defaulting to binary when class provides no type-specific implementation\r\n### Changed\r\n- Numeric types allowing implementation condendensed to Float/Int/Uint\r\n- Read/Write interface methods wrapped and protected to prevent accidental misuse\r\n\r\n## [0.0.1] - 2019-01-13\r\n### Added\r\n- Type assertion to mostly enforce correct API use (a stand-in for unsupported Community-scoped malleable VI)\r\n### Changed\r\n- A little project organization and documentation to clarify intended use\r\n\r\n## [0.0.0] - 2019-01-11\r\n### Added\r\n- Everything (Initial publication to test GPM)', NULL),
(74, 24, 'https://bitbucket.org/composedsystems/composed-configuration/src/master/', 'GPM', '1.2.0', '2019-04-11 19:06:35', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [1.2.0]\r\n### Added\r\n- New method to Preload Transient Configuration (required for unit tests--the main use case for TransientConfiguration--that depend on a configuration object (rather than on an open configuration reference)\r\n\r\n## [1.1.0] - 2019-04-09\r\n### Added\r\n- TransientConfiguration concrete type (i.e. not persisting to disk) for use as a test double in any unit tests that depend on configuration\r\n\r\n## [1.0.2] - 2019-03-01\r\n### Added\r\n- IniFileSection class now writes and retrieves timestamp config as time-formatted string\r\n### Fixed\r\n- Minor cleanups and fixes from static analysis results and adding source code to CI\r\n\r\n## [1.0.1] - 2019-01-23\r\n### Changed\r\n- LabVIEW Version number (is *actually* 2017 **SP1**, but only major is currently supported)\r\n\r\n## [1.0.0] - 2019-01-23\r\n### Release Note\r\nThis version is shippable. The public API is settled and the test suite provides reasonable coverage.\r\n### Added\r\n- Write configuration API\r\n- Full **IniFileSection** implementation (read and write)\r\n- **Initialize/Close Configuration Resource** interface methods invoked at reference open/close\r\n- Support for binary data type and defaulting to binary when class provides no type-specific implementation\r\n### Changed\r\n- Numeric types allowing implementation condendensed to Float/Int/Uint\r\n- Read/Write interface methods wrapped and protected to prevent accidental misuse\r\n\r\n## [0.0.1] - 2019-01-13\r\n### Added\r\n- Type assertion to mostly enforce correct API use (a stand-in for unsupported Community-scoped malleable VI)\r\n### Changed\r\n- A little project organization and documentation to clarify intended use\r\n\r\n## [0.0.0] - 2019-01-11\r\n### Added\r\n- Everything (Initial publication to test GPM)', NULL),
(75, 24, 'https://bitbucket.org/composedsystems/composed-configuration/src/master/', 'GPM', '1.2.1', '2019-07-08 20:36:20', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [1.2.1] - 2019-07-08\r\n### Changed\r\n- Preload Transient Configuration now uses control/constant label when Name input is unwired\r\n\r\n## [1.2.0] 2019-04-11\r\n### Added\r\n- New method to Preload Transient Configuration (required for unit tests--the main use case for TransientConfiguration--that depend on a configuration object (rather than on an open configuration reference)\r\n\r\n## [1.1.0] - 2019-04-09\r\n### Added\r\n- TransientConfiguration concrete type (i.e. not persisting to disk) for use as a test double in any unit tests that depend on configuration\r\n\r\n## [1.0.2] - 2019-03-01\r\n### Added\r\n- IniFileSection class now writes and retrieves timestamp config as time-formatted string\r\n### Fixed\r\n- Minor cleanups and fixes from static analysis results and adding source code to CI\r\n\r\n## [1.0.1] - 2019-01-23\r\n### Changed\r\n- LabVIEW Version number (is *actually* 2017 **SP1**, but only major is currently supported)\r\n\r\n## [1.0.0] - 2019-01-23\r\n### Release Note\r\nThis version is shippable. The public API is settled and the test suite provides reasonable coverage.\r\n### Added\r\n- Write configuration API\r\n- Full **IniFileSection** implementation (read and write)\r\n- **Initialize/Close Configuration Resource** interface methods invoked at reference open/close\r\n- Support for binary data type and defaulting to binary when class provides no type-specific implementation\r\n### Changed\r\n- Numeric types allowing implementation condendensed to Float/Int/Uint\r\n- Read/Write interface methods wrapped and protected to prevent accidental misuse\r\n\r\n## [0.0.1] - 2019-01-13\r\n### Added\r\n- Type assertion to mostly enforce correct API use (a stand-in for unsupported Community-scoped malleable VI)\r\n### Changed\r\n- A little project organization and documentation to clarify intended use\r\n\r\n## [0.0.0] - 2019-01-11\r\n### Added\r\n- Everything (Initial publication to test GPM)', NULL),
(76, 25, 'https://bitbucket.org/composedsystems/composed-database-configuration', 'GPM', '0.1.2', '2020-03-19 16:42:48', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [0.1.2] - 2019-04-25\r\n### Changed\r\n- updated dependencies and recompiled project\r\n\r\n## [0.1.1] - 2019-04-23\r\n### Changed\r\n- fixed an issue with dependency paths causing edit time project conflicts\r\n\r\n## [0.1.0] - 2019-04-22\r\n### Added\r\n- initial release \r\n\r\n\r\n\r\n// ## [Unreleased]\r\n// ### Added\r\n// ### Changed\r\n// ### Deprecated\r\n// ### Removed\r\n// ### Fixed\r\n// ### Security', '@cs/configuration (^1.2.0),@cs/database (^0.2.4),@cs/database-mysql (^0.9.11)'),
(77, 26, 'https://gitlab.com/mgi/gpm-packages/console', 'GPM', '0.1.0', '2018-09-18 22:03:14', '# 0.1.0\r\n\r\nInitial Release\r\n', NULL),
(78, 26, 'https://gitlab.com/mgi/gpm-packages/console', 'GPM', '0.2.0', '2018-10-12 21:19:17', '# 0.2.0\r\n\r\nAdded password prompt\r\nChanged prompts to no longer use newline.\r\n\r\n# 0.1.0\r\n\r\nInitial Release\r\n', NULL),
(79, 26, 'https://gitlab.com/mgi/gpm-packages/console', 'GPM', '0.2.1', '2018-11-21 23:22:43', '## 0.2.1\r\n\r\nUpdated Readme.\r\n\r\n# 0.2.0\r\n\r\nAdded password prompt\r\nChanged prompts to no longer use newline.\r\n\r\n# 0.1.0\r\n\r\nInitial Release\r\n', NULL),
(80, 26, 'https://gitlab.com/mgi/gpm-packages/console', 'GPM', '0.3.0', '2019-06-19 15:20:10', '## 0.3.0\r\n\r\nAdded `Current Working Directory`\r\n\r\n## 0.2.1\r\n\r\nUpdated Readme.\r\n\r\n# 0.2.0\r\n\r\nAdded password prompt\r\nChanged prompts to no longer use newline.\r\n\r\n# 0.1.0\r\n\r\nInitial Release\r\n', NULL),
(81, 26, 'https://gitlab.com/mgi/gpm-packages/console', 'GPM', '0.4.0', '2019-08-07 17:07:22', '## 0.3.0\r\n\r\nAdded `Arugment Parser`\r\n\r\n## 0.3.0\r\n\r\nAdded `Current Working Directory`\r\n\r\n## 0.2.1\r\n\r\nUpdated Readme.\r\n\r\n# 0.2.0\r\n\r\nAdded password prompt\r\nChanged prompts to no longer use newline.\r\n\r\n# 0.1.0\r\n\r\nInitial Release\r\n', NULL),
(82, 27, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/cyth_logger_sqlite/cyth_logger_sqlite-1.5.5.42.vip', 'VIPM', '1.5.5.42', '2020-05-14 10:53:19', '-- Autoshutdown of Async-launched viewer when caller goes idle\n-- Prefix option for Error logs\n-- Fix issue with VI Display Names being changed\n-- Proper VI identification of Messenger Library and NI Actor Framework \"actors\"\n-- Allow Restart of Logger without needing Root Loop\n-- Allow UTC Time as possible display option\n-- Allow Viewer to open files directly (command-line argument)', 'drjdpowell_lib_sqlite_labview>=1.7.1.63,jdp_science_lib_common_utilities>=1.1.1.7,jki_lib_state_machine>=2.0.0'),
(83, 27, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/cyth_logger_sqlite/cyth_logger_sqlite-1.6.2.45.vip', 'VIPM', '1.6.2.45', '2020-07-13 13:48:40', 'Better id of Messenger Library ActorNR.vi\nAsync-launched Viewer now floating window by default\n\"Change Log File\" function to change log file while running', 'drjdpowell_lib_sqlite_labview>=1.7.1.63,jdp_science_lib_common_utilities>=1.1.1.7,jki_lib_state_machine>=2.0.0'),
(84, 28, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/labview_open_source_lib_data_manipulation/labview_open_source_lib_data_manipulation-1.2.3.10.vip', 'VIPM', '1.2.3.10', '2020-04-15 04:12:11', 'changed license to BSD 0-clause', NULL),
(85, 29, 'https://bitbucket.org/composedsystems/composed-data-types', 'GPM', '0.0.1', '2020-05-02 19:21:24', '## [0.0.1] - 2020-03-26-Beta\r\n- Initial release\r\n- No readme in place yet\r\n- No testing in place', NULL),
(86, 29, 'https://bitbucket.org/composedsystems/composed-data-types', 'GPM', '0.0.2', '2020-05-04 03:28:05', '## [0.0.2] - 2020-05-03\r\n- Updated \"To Variant\" implementation\r\n\r\n## [0.0.1] - 2020-05-02\r\n- Initial release\r\n- No readme in place yet\r\n- No testing in place', NULL),
(87, 29, 'https://bitbucket.org/composedsystems/composed-data-types', 'GPM', '0.0.3-Beta', '2020-05-05 21:17:56', '## [0.0.3] - 2020-05-05\r\n- Updated to depend on the Run-Time Assertion package so that we could include an Assert type.\r\n\r\n## [0.0.2] - 2020-05-03\r\n- Updated \"To Variant\" implementation\r\n\r\n## [0.0.1] - 2020-05-02\r\n- Initial release\r\n- No readme in place yet\r\n- No testing in place', '@cs/run-time-assertions (^1.0.1)'),
(88, 29, 'https://bitbucket.org/composedsystems/composed-data-types', 'GPM', '0.0.4-Beta', '2020-05-08 15:44:58', '## [0.0.4] - 2020-05-08\r\n- Cleaned up the parent implementation and refactored the XYZ to Variant method.\r\n\r\n## [0.0.3] - 2020-05-05\r\n- Updated to depend on the Run-Time Assertion package so that we could include an Assert type.\r\n\r\n## [0.0.2] - 2020-05-03\r\n- Updated \"To Variant\" implementation\r\n\r\n## [0.0.1] - 2020-05-02\r\n- Initial release\r\n- No readme in place yet\r\n- No testing in place', '@cs/run-time-assertions (^1.0.1)'),
(89, 29, 'https://bitbucket.org/composedsystems/composed-data-types', 'GPM', '0.0.5-Beta', '2020-05-08 15:52:08', '## [0.0.5] - 2020-05-08\r\n- Mass compiled.\r\n\r\n## [0.0.4] - 2020-05-08\r\n- Cleaned up the parent implementation and refactored the XYZ to Variant method.\r\n\r\n## [0.0.3] - 2020-05-05\r\n- Updated to depend on the Run-Time Assertion package so that we could include an Assert type.\r\n\r\n## [0.0.2] - 2020-05-03\r\n- Updated \"To Variant\" implementation\r\n\r\n## [0.0.1] - 2020-05-02\r\n- Initial release\r\n- No readme in place yet\r\n- No testing in place', '@cs/run-time-assertions (^1.0.1)'),
(90, 29, 'https://bitbucket.org/composedsystems/composed-data-types', 'GPM', '0.0.6-Beta', '2020-05-10 01:24:04', '## [0.0.6] - 2020-05-08\r\n- Re-linking fun.\r\n\r\n## [0.0.5] - 2020-05-08\r\n- Mass compiled.\r\n\r\n## [0.0.4] - 2020-05-08\r\n- Cleaned up the parent implementation and refactored the XYZ to Variant method.\r\n\r\n## [0.0.3] - 2020-05-05\r\n- Updated to depend on the Run-Time Assertion package so that we could include an Assert type.\r\n\r\n## [0.0.2] - 2020-05-03\r\n- Updated \"To Variant\" implementation\r\n\r\n## [0.0.1] - 2020-05-02\r\n- Initial release\r\n- No readme in place yet\r\n- No testing in place', '@cs/run-time-assertions (^1.0.1)'),
(91, 29, 'https://bitbucket.org/composedsystems/composed-data-types', 'GPM', '0.0.7-Beta', '2020-05-10 17:34:54', '## [0.0.7] - 2020-05-10\r\n- Added data types for 1D Assert and 1D Path.\r\n\r\n## [0.0.6] - 2020-05-08\r\n- Re-linking fun.\r\n\r\n## [0.0.5] - 2020-05-08\r\n- Mass compiled.\r\n\r\n## [0.0.4] - 2020-05-08\r\n- Cleaned up the parent implementation and refactored the XYZ to Variant method.\r\n\r\n## [0.0.3] - 2020-05-05\r\n- Updated to depend on the Run-Time Assertion package so that we could include an Assert type.\r\n\r\n## [0.0.2] - 2020-05-03\r\n- Updated \"To Variant\" implementation\r\n\r\n## [0.0.1] - 2020-05-02\r\n- Initial release\r\n- No readme in place yet\r\n- No testing in place', '@cs/run-time-assertions (^1.0.1)'),
(92, 29, 'https://bitbucket.org/composedsystems/composed-data-types', 'GPM', '0.0.8-Beta', '2020-05-22 16:09:39', '## [0.0.8] - 2020-05-22\r\n- Fixed bugs unflattening 1D Types.\r\n\r\n## [0.0.7] - 2020-05-10\r\n- Added data types for 1D Assert and 1D Path.\r\n\r\n## [0.0.6] - 2020-05-08\r\n- Re-linking fun.\r\n\r\n## [0.0.5] - 2020-05-08\r\n- Mass compiled.\r\n\r\n## [0.0.4] - 2020-05-08\r\n- Cleaned up the parent implementation and refactored the XYZ to Variant method.\r\n\r\n## [0.0.3] - 2020-05-05\r\n- Updated to depend on the Run-Time Assertion package so that we could include an Assert type.\r\n\r\n## [0.0.2] - 2020-05-03\r\n- Updated \"To Variant\" implementation\r\n\r\n## [0.0.1] - 2020-05-02\r\n- Initial release\r\n- No readme in place yet\r\n- No testing in place', '@cs/run-time-assertions (^1.0.1)'),
(93, 30, 'https://bitbucket.org/composedsystems/composed-database-interface/src/master/', 'GPM', '0.1.0', '2019-02-26 16:06:33', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [0.1.0] - 2019-02-25\r\n### Added\r\n- initial release \r\n\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security', NULL),
(94, 30, 'https://bitbucket.org/composedsystems/composed-database-interface/src/master/', 'GPM', '0.1.1', '2019-02-26 18:00:05', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n\r\n## [0.1.1] - 2019-02-26\r\n### Changed\r\n- updated sqlite binaries to version 3.27.2\r\n\r\n## [0.1.0] - 2019-02-25\r\n### Added\r\n- initial release \r\n\r\n\r\n\r\n// ## [Unreleased]\r\n// ### Added\r\n// ### Changed\r\n// ### Deprecated\r\n// ### Removed\r\n// ### Fixed\r\n// ### Security', NULL),
(95, 30, 'https://bitbucket.org/composedsystems/composed-database-interface/src/master/', 'GPM', '0.1.2', '2019-03-05 19:24:18', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [0.1.2] - 2019-02-26\r\n### Changed\r\n- upgraded query.vi to query.vim featuring a malleable interface for return type\r\n- implemented said interface for sqlite\r\n- while at it, implemented LV2018-style assertion library for data type checking\r\n\r\n## [0.1.1] - 2019-02-26\r\n### Changed\r\n- updated sqlite binaries to version 3.27.2\r\n\r\n## [0.1.0] - 2019-02-25\r\n### Added\r\n- initial release \r\n\r\n\r\n\r\n// ## [Unreleased]\r\n// ### Added\r\n// ### Changed\r\n// ### Deprecated\r\n// ### Removed\r\n// ### Fixed\r\n// ### Security', NULL),
(96, 30, 'https://bitbucket.org/composedsystems/composed-database-interface/src/master/', 'GPM', '0.1.3', '2019-03-06 20:39:00', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [0.1.3] - 2019-03-06\r\n### Changed\r\n- removed VI tree from sqlite \r\n\r\n## [0.1.2] - 2019-03-04\r\n### Changed\r\n- upgraded query.vi to query.vim featuring a malleable interface for return type\r\n- implemented said interface for sqlite\r\n- while at it, implemented LV2018-style assertion library for data type checking\r\n\r\n## [0.1.1] - 2019-02-26\r\n### Changed\r\n- updated sqlite binaries to version 3.27.2\r\n\r\n## [0.1.0] - 2019-02-25\r\n### Added\r\n- initial release \r\n\r\n\r\n\r\n// ## [Unreleased]\r\n// ### Added\r\n// ### Changed\r\n// ### Deprecated\r\n// ### Removed\r\n// ### Fixed\r\n// ### Security', NULL),
(97, 30, 'https://bitbucket.org/composedsystems/composed-database-interface/src/master/', 'GPM', '0.1.4', '2019-04-15 19:02:29', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [0.1.4] - 2019-03-06\r\n### Changed\r\n- changed access scope of sanitize sql inputs in sqlite3 class to public\r\n\r\n## [0.1.3] - 2019-03-06\r\n### Changed\r\n- removed VI tree from sqlite \r\n\r\n## [0.1.2] - 2019-03-04\r\n### Changed\r\n- upgraded query.vi to query.vim featuring a malleable interface for return type\r\n- implemented said interface for sqlite\r\n- while at it, implemented LV2018-style assertion library for data type checking\r\n\r\n## [0.1.1] - 2019-02-26\r\n### Changed\r\n- updated sqlite binaries to version 3.27.2\r\n\r\n## [0.1.0] - 2019-02-25\r\n### Added\r\n- initial release \r\n\r\n\r\n\r\n// ## [Unreleased]\r\n// ### Added\r\n// ### Changed\r\n// ### Deprecated\r\n// ### Removed\r\n// ### Fixed\r\n// ### Security', NULL),
(98, 30, 'https://bitbucket.org/composedsystems/composed-database-interface/src/master/', 'GPM', '0.2.0', '2019-04-18 14:05:21', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [0.2.0] - 2019-04-18\r\n### Changed\r\n- Updated sqlite binaries to version 3.28\r\n- Error 5021 / 21 API misuse is now a warning\r\n- Improved library\'s ability to create databases \r\n\r\n## [0.1.4] - 2019-03-06\r\n### Changed\r\n- changed access scope of sanitize sql inputs in sqlite3 class to public\r\n\r\n## [0.1.3] - 2019-03-06\r\n### Changed\r\n- removed VI tree from sqlite \r\n\r\n## [0.1.2] - 2019-03-04\r\n### Changed\r\n- upgraded query.vi to query.vim featuring a malleable interface for return type\r\n- implemented said interface for sqlite\r\n- while at it, implemented LV2018-style assertion library for data type checking\r\n\r\n## [0.1.1] - 2019-02-26\r\n### Changed\r\n- updated sqlite binaries to version 3.27.2\r\n\r\n## [0.1.0] - 2019-02-25\r\n### Added\r\n- initial release \r\n\r\n\r\n\r\n// ## [Unreleased]\r\n// ### Added\r\n// ### Changed\r\n// ### Deprecated\r\n// ### Removed\r\n// ### Fixed\r\n// ### Security', NULL),
(99, 30, 'https://bitbucket.org/composedsystems/composed-database-interface/src/master/', 'GPM', '0.2.1', '2019-04-18 15:45:30', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [0.2.1] - 2019-04-18\r\n### Changed\r\n- for variant data, instead of returning nothing, the query.vim will return a binary string as variant \r\n\r\n## [0.2.0] - 2019-04-18\r\n### Changed\r\n- Updated sqlite binaries to version 3.28\r\n- Error 5021 / 21 API misuse is now a warning\r\n- Improved library\'s ability to create databases \r\n\r\n## [0.1.4] - 2019-03-06\r\n### Changed\r\n- changed access scope of sanitize sql inputs in sqlite3 class to public\r\n\r\n## [0.1.3] - 2019-03-06\r\n### Changed\r\n- removed VI tree from sqlite \r\n\r\n## [0.1.2] - 2019-03-04\r\n### Changed\r\n- upgraded query.vi to query.vim featuring a malleable interface for return type\r\n- implemented said interface for sqlite\r\n- while at it, implemented LV2018-style assertion library for data type checking\r\n\r\n## [0.1.1] - 2019-02-26\r\n### Changed\r\n- updated sqlite binaries to version 3.27.2\r\n\r\n## [0.1.0] - 2019-02-25\r\n### Added\r\n- initial release \r\n\r\n\r\n\r\n// ## [Unreleased]\r\n// ### Added\r\n// ### Changed\r\n// ### Deprecated\r\n// ### Removed\r\n// ### Fixed\r\n// ### Security', NULL),
(100, 30, 'https://bitbucket.org/composedsystems/composed-database-interface/src/master/', 'GPM', '0.2.2', '2019-04-22 18:28:59', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [0.2.2] - 2019-04-22\r\n### Changed\r\n- Added dependency on @cs/assertions\r\n- VIM default implementations now handle type as variant rather than break the VIM\r\n\r\n## [0.2.1] - 2019-04-18\r\n### Changed\r\n- for variant data, instead of returning nothing, the query.vim will return a binary string as variant \r\n\r\n## [0.2.0] - 2019-04-18\r\n### Changed\r\n- Updated sqlite binaries to version 3.28\r\n- Error 5021 / 21 API misuse is now a warning\r\n- Improved library\'s ability to create databases \r\n\r\n## [0.1.4] - 2019-03-06\r\n### Changed\r\n- changed access scope of sanitize sql inputs in sqlite3 class to public\r\n\r\n## [0.1.3] - 2019-03-06\r\n### Changed\r\n- removed VI tree from sqlite \r\n\r\n## [0.1.2] - 2019-03-04\r\n### Changed\r\n- upgraded query.vi to query.vim featuring a malleable interface for return type\r\n- implemented said interface for sqlite\r\n- while at it, implemented LV2018-style assertion library for data type checking\r\n\r\n## [0.1.1] - 2019-02-26\r\n### Changed\r\n- updated sqlite binaries to version 3.27.2\r\n\r\n## [0.1.0] - 2019-02-25\r\n### Added\r\n- initial release \r\n\r\n\r\n\r\n// ## [Unreleased]\r\n// ### Added\r\n// ### Changed\r\n// ### Deprecated\r\n// ### Removed\r\n// ### Fixed\r\n// ### Security', '@cs/assertions (^0.1.0)'),
(101, 30, 'https://bitbucket.org/composedsystems/composed-database-interface/src/master/', 'GPM', '0.2.3', '2019-04-23 19:10:44', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [0.2.3] - 2019-04-23\r\n### Changed\r\n- Fixed an issue with dependencies loaded from a different path\r\n\r\n## [0.2.2] - 2019-04-22\r\n### Changed\r\n- Added dependency on @cs/assertions\r\n- VIM default implementations now handle type as variant rather than break the VIM\r\n\r\n## [0.2.1] - 2019-04-18\r\n### Changed\r\n- for variant data, instead of returning nothing, the query.vim will return a binary string as variant \r\n\r\n## [0.2.0] - 2019-04-18\r\n### Changed\r\n- Updated sqlite binaries to version 3.28\r\n- Error 5021 / 21 API misuse is now a warning\r\n- Improved library\'s ability to create databases \r\n\r\n## [0.1.4] - 2019-03-06\r\n### Changed\r\n- changed access scope of sanitize sql inputs in sqlite3 class to public\r\n\r\n## [0.1.3] - 2019-03-06\r\n### Changed\r\n- removed VI tree from sqlite \r\n\r\n## [0.1.2] - 2019-03-04\r\n### Changed\r\n- upgraded query.vi to query.vim featuring a malleable interface for return type\r\n- implemented said interface for sqlite\r\n- while at it, implemented LV2018-style assertion library for data type checking\r\n\r\n## [0.1.1] - 2019-02-26\r\n### Changed\r\n- updated sqlite binaries to version 3.27.2\r\n\r\n## [0.1.0] - 2019-02-25\r\n### Added\r\n- initial release \r\n\r\n\r\n\r\n// ## [Unreleased]\r\n// ### Added\r\n// ### Changed\r\n// ### Deprecated\r\n// ### Removed\r\n// ### Fixed\r\n// ### Security', '@cs/assertions (^0.1.0)'),
(102, 30, 'https://bitbucket.org/composedsystems/composed-database-interface/src/master/', 'GPM', '0.2.4', '2019-04-25 17:09:56', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [0.2.4] - 2019-04-25\r\n- updated @cs/ci dev dependency\r\n- project recompile to fix malleable VI dependency issues\r\n\r\n## [0.2.3] - 2019-04-23\r\n### Changed\r\n- Fixed an issue with dependencies loaded from a different path\r\n\r\n## [0.2.2] - 2019-04-22\r\n### Changed\r\n- Added dependency on @cs/assertions\r\n- VIM default implementations now handle type as variant rather than break the VIM\r\n\r\n## [0.2.1] - 2019-04-18\r\n### Changed\r\n- for variant data, instead of returning nothing, the query.vim will return a binary string as variant \r\n\r\n## [0.2.0] - 2019-04-18\r\n### Changed\r\n- Updated sqlite binaries to version 3.28\r\n- Error 5021 / 21 API misuse is now a warning\r\n- Improved library\'s ability to create databases \r\n\r\n## [0.1.4] - 2019-03-06\r\n### Changed\r\n- changed access scope of sanitize sql inputs in sqlite3 class to public\r\n\r\n## [0.1.3] - 2019-03-06\r\n### Changed\r\n- removed VI tree from sqlite \r\n\r\n## [0.1.2] - 2019-03-04\r\n### Changed\r\n- upgraded query.vi to query.vim featuring a malleable interface for return type\r\n- implemented said interface for sqlite\r\n- while at it, implemented LV2018-style assertion library for data type checking\r\n\r\n## [0.1.1] - 2019-02-26\r\n### Changed\r\n- updated sqlite binaries to version 3.27.2\r\n\r\n## [0.1.0] - 2019-02-25\r\n### Added\r\n- initial release \r\n\r\n\r\n\r\n// ## [Unreleased]\r\n// ### Added\r\n// ### Changed\r\n// ### Deprecated\r\n// ### Removed\r\n// ### Fixed\r\n// ### Security', '@cs/assertions (^0.1.0)'),
(103, 31, 'https://bitbucket.org/composedsystems/composed-database-configuration', 'GPM', '0.1.2', '2020-03-19 16:41:04', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [0.1.2] - 2019-04-25\r\n### Changed\r\n- updated dependencies and recompiled project\r\n\r\n## [0.1.1] - 2019-04-23\r\n### Changed\r\n- fixed an issue with dependency paths causing edit time project conflicts\r\n\r\n## [0.1.0] - 2019-04-22\r\n### Added\r\n- initial release \r\n\r\n\r\n\r\n// ## [Unreleased]\r\n// ### Added\r\n// ### Changed\r\n// ### Deprecated\r\n// ### Removed\r\n// ### Fixed\r\n// ### Security', '@cs/configuration (^1.2.0),@cs/database (^0.2.4),@cs/database-mysql (^0.9.11)'),
(104, 32, '', 'GPM', '0.1.1', '2019-05-22 16:56:49', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## ## [0.1.0] - 2019-05-17\r\n### Added\r\n- test cases and examples for mysql and sqlite\r\n\r\n## [0.1.0] - 2019-05-17\r\n### Added\r\n- initial release \r\n\r\n\r\n\r\n// ## [Unreleased]\r\n// ### Added\r\n// ### Changed\r\n// ### Deprecated\r\n// ### Removed\r\n// ### Fixed\r\n// ### Security', '@cs/database (^0.2.4),@cs/database-mysql (^0.9.11),@cs/event-logger (^0.5.18)'),
(105, 33, 'https://gitlab.com/mgi/gpm-packages/database-interface', 'GPM', '0.1.0', '2018-09-05 00:37:00', '## 0.1.0\r\n\r\nInitial Release', NULL),
(106, 33, 'https://gitlab.com/mgi/gpm-packages/database-interface', 'GPM', '0.1.1', '2018-11-21 23:26:18', '## 0.1.1\r\n\r\nUpdated Readme.\r\n\r\n## 0.1.0\r\n\r\nInitial Release', NULL),
(107, 34, 'https://bitbucket.org/composedsystems/composed-database-mysql/src/master/', 'GPM', '0.9.8', '2019-03-05 19:47:05', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.9.8] - 2019-03-05\r\n### Changed\r\n- Updated @cs/database dependency\r\n- Implemented new malleable database API \r\n\r\n## [0.9.7] - 2019-02-26\r\n### Changed\r\n- Updated @cs/database dependency to version 1.1\r\n- Updated mysql to 8.0.15\r\n\r\n## [0.9.6] - 2019-02-26\r\n### Added\r\n- Everything (Initial publication)', '@cs/database (^0.1.0)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(108, 34, 'https://bitbucket.org/composedsystems/composed-database-mysql/src/master/', 'GPM', '0.9.9', '2019-04-18 19:08:51', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.9.9] - 2019-03-05\r\n### Changed\r\n- Updated @cs/database dependency\r\n- added support for binary data as string\r\n\r\n## [0.9.8] - 2019-03-05\r\n### Changed\r\n- Updated @cs/database dependency\r\n- Implemented new malleable database API \r\n\r\n## [0.9.7] - 2019-02-26\r\n### Changed\r\n- Updated @cs/database dependency to version 1.1\r\n- Updated mysql to 8.0.15\r\n\r\n## [0.9.6] - 2019-02-26\r\n### Added\r\n- Everything (Initial publication)', '@cs/database (^0.2.1)'),
(109, 34, 'https://bitbucket.org/composedsystems/composed-database-mysql/src/master/', 'GPM', '0.9.10', '2019-04-23 18:07:03', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.9.10] - 2019-04-23\r\n### Changed\r\n- Updated @cs/database and @cs/assertion dependencies\r\n\r\n## [0.9.9] - 2019-03-05\r\n### Changed\r\n- Updated @cs/database dependency\r\n- added support for binary data as string\r\n\r\n## [0.9.8] - 2019-03-05\r\n### Changed\r\n- Updated @cs/database dependency\r\n- Implemented new malleable database API \r\n\r\n## [0.9.7] - 2019-02-26\r\n### Changed\r\n- Updated @cs/database dependency to version 1.1\r\n- Updated mysql to 8.0.15\r\n\r\n## [0.9.6] - 2019-02-26\r\n### Added\r\n- Everything (Initial publication)', '@cs/database (^0.2.2)'),
(110, 34, 'https://bitbucket.org/composedsystems/composed-database-mysql/src/master/', 'GPM', '0.9.11', '2019-04-25 17:32:58', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.9.11] - 2019-04-25\r\n### Changed\r\n- Updated @cs/database and @cs/assertion dependencies\r\n- Recompiled project to fix linking issues\r\n\r\n## [0.9.10] - 2019-04-23\r\n### Changed\r\n- Updated @cs/database and @cs/assertion dependencies\r\n\r\n## [0.9.9] - 2019-03-05\r\n### Changed\r\n- Updated @cs/database dependency\r\n- added support for binary data as string\r\n\r\n## [0.9.8] - 2019-03-05\r\n### Changed\r\n- Updated @cs/database dependency\r\n- Implemented new malleable database API \r\n\r\n## [0.9.7] - 2019-02-26\r\n### Changed\r\n- Updated @cs/database dependency to version 1.1\r\n- Updated mysql to 8.0.15\r\n\r\n## [0.9.6] - 2019-02-26\r\n### Added\r\n- Everything (Initial publication)', '@cs/database (^0.2.4)'),
(111, 34, 'https://bitbucket.org/composedsystems/composed-database-mysql/src/master/', 'GPM', '0.9.12', '2019-05-17 15:13:42', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.9.12] - 2019-04-25\r\n### Changed\r\n- Upgraded mysql to 8.0.16 and relinked .NET property nodes, methods and constructors\r\n\r\n## [0.9.11] - 2019-04-25\r\n### Changed\r\n- Updated @cs/database and @cs/assertion dependencies\r\n- Recompiled project to fix linking issues\r\n\r\n## [0.9.10] - 2019-04-23\r\n### Changed\r\n- Updated @cs/database and @cs/assertion dependencies\r\n\r\n## [0.9.9] - 2019-03-05\r\n### Changed\r\n- Updated @cs/database dependency\r\n- added support for binary data as string\r\n\r\n## [0.9.8] - 2019-03-05\r\n### Changed\r\n- Updated @cs/database dependency\r\n- Implemented new malleable database API \r\n\r\n## [0.9.7] - 2019-02-26\r\n### Changed\r\n- Updated @cs/database dependency to version 1.1\r\n- Updated mysql to 8.0.15\r\n\r\n## [0.9.6] - 2019-02-26\r\n### Added\r\n- Everything (Initial publication)', '@cs/database (^0.2.4)'),
(112, 35, '', 'GPM', '1.0.2', '2020-09-23 21:39:00', '# 1.0.2\r\n\r\nFixed issues with decoding and encoding floats as well as improved communication rate and connecting.\r\n\r\n# 1.0.1\r\n\r\nInitial, untested, implementation', '@mgi/dci-module (^1.0.3),@mgi/dci-tag-engine (^0.1.7)'),
(113, 35, '', 'GPM', '1.0.3', '2020-09-23 21:46:26', '# 1.0.3\r\n\r\nFixed an issue where the parent constructor was not getting called.\r\n\r\n# 1.0.2\r\n\r\nFixed issues with decoding and encoding floats as well as improved communication rate and connecting.\r\n\r\n# 1.0.1\r\n\r\nInitial, untested, implementation', '@mgi/dci-module (^1.0.3),@mgi/dci-tag-engine (^0.1.7)'),
(114, 36, '', 'GPM', '0.1.0', '2020-06-04 05:42:20', '# 0.1.0\r\n\r\nInitial Implementation\r\n', '@mgi/dci-daq (^0.1.0),@mgi/dci-tag-engine (^0.1.5)'),
(115, 37, '', 'GPM', '0.1.0', '2020-06-04 05:09:05', '# 0.1.0\r\n\r\nInitial implementation', '@mgi/dci-module (^0.1.0)'),
(116, 38, '', 'GPM', '0.1.0', '2020-06-04 05:19:56', '# 0.1.0\r\n\r\nInitial Implementation', '@mgi/dci-daq (^0.1.0),@mgi/dci-tag-engine (^0.1.5)'),
(117, 39, '', 'GPM', '0.1.0', '2020-06-04 04:52:27', '# 0.1.0\r\n\r\nInitial implementation', '@mgi/dci-module (^0.1.0),@mgi/dci-tag-engine (^0.1.5)'),
(118, 39, '', 'GPM', '0.1.1', '2020-06-17 22:02:18', '# 0.1.1\r\n\r\nFixed an issue where digital tags were included\r\n\r\n# 0.1.0\r\n\r\nInitial implementation', '@mgi/dci-module (^0.1.0),@mgi/dci-tag-engine (^0.1.5)'),
(119, 39, '', 'GPM', '1.0.1', '2020-06-26 19:16:51', '# 1.0.1\r\n\r\nUpdated to be compatible with the 1.0 version of DCI Module.\r\n# 0.1.1\r\n\r\nFixed an issue where digital tags were included\r\n\r\n# 0.1.0\r\n\r\nInitial implementation', '@mgi/dci-module (^1.0.1),@mgi/dci-tag-engine (^0.1.7)'),
(120, 40, '', 'GPM', '1.0.0', '2020-06-26 18:21:06', '# 1.0.0\r\n\r\nInitial implementation', '@mgi/dci-module (^1.0.1),@mgi/dci-tag-engine (^0.1.6)'),
(121, 40, '', 'GPM', '1.0.1', '2020-06-26 19:57:34', '# 1.0.1\r\n\r\nFixed an issue with the exported files in the gpackage.json file\r\n\r\n# 1.0.0\r\n\r\nInitial implementation', '@mgi/dci-module (^1.0.1),@mgi/dci-tag-engine (^0.1.6)'),
(122, 41, '', 'GPM', '1.0.2', '2020-06-24 16:44:26', '# 1.0.2\r\n\r\nFixed scope error.\r\n# 1.0.1\r\n\r\nInitial implementation, compatible with the 1.x version of DCI module.', '@mgi/dci-module (^1.0.1),@mgi/dci-tag-engine (^0.1.6),@mgi/json (^1.0.0)'),
(123, 41, '', 'GPM', '1.0.3', '2020-06-26 20:01:26', '# 1.0.3\r\n\r\nFixed an issue with the exported files in the gpackage.json file\r\n\r\n# 1.0.2\r\n\r\nFixed scope error.\r\n\r\n# 1.0.1\r\n\r\nInitial implementation, compatible with the 1.x version of DCI module.', '@mgi/dci-module (^1.0.3),@mgi/dci-tag-engine (^0.1.7)'),
(124, 42, '', 'GPM', '1.0.1', '2020-06-24 16:28:31', '# 1.0.1\r\n\r\nInitial implementation, compatible with the 1.x version of DCI module.', '@mgi/dci-module (^1.0.1),@mgi/dci-tag-engine (^0.1.6),@mgi/json (^1.0.0)'),
(125, 43, '', 'GPM', '0.1.0', '2020-06-04 05:33:44', '# 0.1.0\r\n\r\nInitial implementation\r\n', '@mgi/dci-daq (^0.1.0),@mgi/dci-tag-engine (^0.1.5)'),
(126, 44, '', 'GPM', '1.0.0', '2020-06-22 23:26:08', '# 1.0.0\r\n\r\nMajor refactor with simplified inheritance and more capable module parent.\r\n\r\n# 0.1.0\r\n\r\nInitial implementation\r\n', '@mgi/dci-module (^1.0.1),@mgi/dci-tag-engine (^0.1.5)'),
(127, 44, '', 'GPM', '1.0.1', '2020-06-24 16:13:55', '# 1.0.1\r\n\r\nAdded a test launcher and debugged a few minor issues.\r\n\r\n# 1.0.0\r\n\r\nMajor refactor with simplified inheritance and more capable module parent.\r\n\r\n# 0.1.0\r\n\r\nInitial implementation\r\n', '@mgi/dci-module (^1.0.1),@mgi/dci-tag-engine (^0.1.5)'),
(128, 45, '', 'GPM', '0.1.0', '2020-06-03 22:54:47', '# 0.1.0\r\n\r\nInitial implementation', '@mgi/dci-module (^0.1.0),@mgi/dci-tag-engine (^0.1.5)'),
(129, 45, '', 'GPM', '1.0.1', '2020-06-26 18:53:07', '# 1.0.1\r\n\r\nUpdate for compatibility with the 1.0 DCI Module.\r\n# 0.1.0\r\n\r\nInitial implementation', '@mgi/dci-module (^1.0.1),@mgi/dci-tag-engine (^0.1.5)'),
(130, 46, '', 'GPM', '0.1.0', '2020-06-06 22:12:25', '# 0.1.0\r\n\r\nInitial implementation', '@mgi/dci-module (^0.1.0),@mgi/dci-tag-engine (^0.1.5)'),
(131, 46, '', 'GPM', '0.1.1', '2020-06-06 22:26:34', '# 0.1.1\r\n\r\nAdded missing module status\r\n\r\n# 0.1.0\r\n\r\nInitial implementation', '@mgi/dci-module (^0.1.0),@mgi/dci-tag-engine (^0.1.5)'),
(132, 46, '', 'GPM', '0.1.2', '2020-06-10 14:00:27', '# 0.1.2\r\n\r\nFixed the module to actually update the tag data\r\n\r\n# 0.1.1\r\n\r\nAdded missing module status\r\n\r\n# 0.1.0\r\n\r\nInitial implementation', '@mgi/dci-module (^0.1.0),@mgi/dci-tag-engine (^0.1.5)'),
(133, 46, '', 'GPM', '0.1.3', '2020-06-10 16:07:23', '# 0.1.3\r\n\r\nMade the read data sample reentrant\r\n\r\n# 0.1.2\r\n\r\nFixed the module to actually update the tag data\r\n\r\n# 0.1.1\r\n\r\nAdded missing module status\r\n\r\n# 0.1.0\r\n\r\nInitial implementation', '@mgi/dci-module (^0.1.0),@mgi/dci-tag-engine (^0.1.5)'),
(134, 46, '', 'GPM', '0.1.4', '2020-06-10 16:10:40', '# 0.1.4\r\n\r\nRemoved the test VIs from the package\r\n\r\n# 0.1.3\r\n\r\nMade the read data sample reentrant\r\n\r\n# 0.1.2\r\n\r\nFixed the module to actually update the tag data\r\n\r\n# 0.1.1\r\n\r\nAdded missing module status\r\n\r\n# 0.1.0\r\n\r\nInitial implementation', '@mgi/dci-module (^0.1.0),@mgi/dci-tag-engine (^0.1.5)'),
(135, 47, '', 'GPM', '0.1.0', '2020-06-03 22:33:04', '# 0.1.0\r\n\r\nInitial implementation', NULL),
(136, 47, '', 'GPM', '1.0.0', '2020-06-22 17:37:56', '# 1.0.0\r\n\r\nBreaking changes to implement timing at the module level.\r\n\r\n# 0.1.0\r\n\r\nInitial implementation', NULL),
(137, 47, '', 'GPM', '1.0.1', '2020-06-22 18:15:45', '# 1.0.1\r\n\r\nFixed reentrancy issue (required overrides are now reentrant)\r\n\r\n# 1.0.0\r\n\r\nBreaking changes to implement timing at the module level.\r\n\r\n# 0.1.0\r\n\r\nInitial implementation', NULL),
(138, 47, '', 'GPM', '1.0.2', '2020-06-26 19:07:25', '# 1.0.2\r\n\r\nAdded a protected method so child classes can modify the update interval.\r\n\r\n# 1.0.1\r\n\r\nFixed reentrancy issue (required overrides are now reentrant)\r\n\r\n# 1.0.0\r\n\r\nBreaking changes to implement timing at the module level.\r\n\r\n# 0.1.0\r\n\r\nInitial implementation', NULL),
(139, 47, '', 'GPM', '1.0.3', '2020-06-26 19:49:23', '# 1.0.3\r\n\r\nImproved the default values on the constructor.\r\n\r\n# 1.0.2\r\n\r\nAdded a protected method so child classes can modify the update interval.\r\n\r\n# 1.0.1\r\n\r\nFixed reentrancy issue (required overrides are now reentrant)\r\n\r\n# 1.0.0\r\n\r\nBreaking changes to implement timing at the module level.\r\n\r\n# 0.1.0\r\n\r\nInitial implementation', NULL),
(140, 48, '', 'GPM', '0.1.1', '2020-06-03 21:27:29', '## Version 0.1.1\r\n\r\nFixed the scope and description\r\n\r\n## Version 0.1.0\r\n\r\nInitial implementation', '@mgi/dci-tag-engine (^0.1.4)'),
(141, 48, '', 'GPM', '0.1.2', '2020-06-10 17:02:25', '# 0.1.2\r\n\r\nFixed an issue where the raw range was not getting updated.\r\n\r\n# 0.1.1\r\n\r\nFixed the scope and description\r\n\r\n# 0.1.0\r\n\r\nInitial implementation', '@mgi/dci-tag-engine (^0.1.4)'),
(142, 48, '', 'GPM', '0.1.3', '2020-06-10 17:11:55', '# 0.1.3\r\n\r\nBugfix for the raw range\r\n\r\n# 0.1.2\r\n\r\nFixed an issue where the raw range was not getting updated\r\n\r\n# 0.1.1\r\n\r\nFixed the scope and description\r\n\r\n# 0.1.0\r\n\r\nInitial implementation', '@mgi/dci-tag-engine (^0.1.4)'),
(143, 48, '', 'GPM', '0.1.4', '2020-06-26 18:46:31', '# 0.1.4\r\n\r\nFixed some linking issues with the tag engine\r\n\r\n# 0.1.3\r\n\r\nBugfix for the raw range\r\n\r\n# 0.1.2\r\n\r\nFixed an issue where the raw range was not getting updated\r\n\r\n# 0.1.1\r\n\r\nFixed the scope and description\r\n\r\n# 0.1.0\r\n\r\nInitial implementation', '@mgi/dci-tag-engine (^0.1.4)'),
(144, 49, '', 'GPM', '0.1.0', '2020-05-29 23:12:31', '## 0.1.0\r\n\r\nInitial implementation', NULL),
(145, 49, '', 'GPM', '0.1.1', '2020-05-30 04:36:14', '## 0.1.1\r\n\r\nFixed incorrect linking\r\n\r\n## 0.1.0\r\n\r\nInitial implementation', NULL),
(146, 49, '', 'GPM', '0.1.2', '2020-06-03 15:05:08', '## 0.1.2\r\n\r\nFixed incorrect JSON dependency\r\n\r\n## 0.1.1\r\n\r\nFixed incorrect linking\r\n\r\n## 0.1.0\r\n\r\nInitial implementation', '@mgi/json (^1.0.0)'),
(147, 49, '', 'GPM', '0.1.3', '2020-06-03 15:44:38', '## 0.1.3\r\n\r\nFixed broken classes\r\n\r\n## 0.1.2\r\n\r\nFixed incorrect JSON dependency\r\n\r\n## 0.1.1\r\n\r\nFixed incorrect linking\r\n\r\n## 0.1.0\r\n\r\nInitial implementation', '@mgi/json (^1.0.0)'),
(148, 49, '', 'GPM', '0.1.4', '2020-06-03 16:45:17', '## 0.1.4\r\n\r\nFixed the tests and a couple errors highlighted by them\r\n\r\n## 0.1.3\r\n\r\nFixed broken classes\r\n\r\n## 0.1.2\r\n\r\nFixed incorrect JSON dependency\r\n\r\n## 0.1.1\r\n\r\nFixed incorrect linking\r\n\r\n## 0.1.0\r\n\r\nInitial implementation', '@mgi/json (^1.0.0)'),
(149, 49, '', 'GPM', '0.1.5', '2020-06-03 21:15:17', '## 0.1.5\r\n\r\nFixed the included file list\r\n\r\n## 0.1.4\r\n\r\nFixed the tests and a couple errors highlighted by them\r\n\r\n## 0.1.3\r\n\r\nFixed broken classes\r\n\r\n## 0.1.2\r\n\r\nFixed incorrect JSON dependency\r\n\r\n## 0.1.1\r\n\r\nFixed incorrect linking\r\n\r\n## 0.1.0\r\n\r\nInitial implementation', '@mgi/json (^1.0.0)'),
(150, 49, '', 'GPM', '0.1.6', '2020-06-19 16:18:11', '## 0.1.6\r\n\r\nFixed an issue writing single analog channels\r\n\r\n## 0.1.5\r\n\r\nFixed the included file list\r\n\r\n## 0.1.4\r\n\r\nFixed the tests and a couple errors highlighted by them\r\n\r\n## 0.1.3\r\n\r\nFixed broken classes\r\n\r\n## 0.1.2\r\n\r\nFixed incorrect JSON dependency\r\n\r\n## 0.1.1\r\n\r\nFixed incorrect linking\r\n\r\n## 0.1.0\r\n\r\nInitial implementation', '@mgi/json (^1.0.0)'),
(151, 49, '', 'GPM', '0.1.7', '2020-06-26 17:59:44', '# 0.1.7\r\n\r\nRemoved some unused and incorrect files from the distribution\r\n\r\n# 0.1.6\r\n\r\nFixed an issue writing single analog channels\r\n\r\n# 0.1.5\r\n\r\nFixed the included file list\r\n\r\n# 0.1.4\r\n\r\nFixed the tests and a couple errors highlighted by them\r\n\r\n# 0.1.3\r\n\r\nFixed broken classes\r\n\r\n# 0.1.2\r\n\r\nFixed incorrect JSON dependency\r\n\r\n# 0.1.1\r\n\r\nFixed incorrect linking\r\n\r\n# 0.1.0\r\n\r\nInitial implementation', '@mgi/json (^1.0.0)'),
(152, 50, '', 'GPM', '1.0.0', '2020-06-24 18:36:49', '# 1.0.1\r\n\r\nInitial implementation compatible with the 1.x DCI module', '@mgi/dci-module (^1.0.1),@mgi/dci-tag-engine (^0.1.6)'),
(153, 50, '', 'GPM', '1.0.1', '2020-06-26 20:03:55', '# 1.0.2\r\n\r\nFixed an issue with the exported files in the gpackage.json file\r\n\r\n# 1.0.1\r\n\r\nInitial implementation compatible with the 1.x DCI module', '@mgi/dci-module (^1.0.1),@mgi/dci-tag-engine (^0.1.6)'),
(154, 50, '', 'GPM', '1.0.3', '2020-06-26 20:05:46', '# 1.0.3\r\n\r\nFixed another issue with the exported files in the gpackage.json file\r\n\r\n# 1.0.2\r\n\r\nFixed an issue with the exported files in the gpackage.json file\r\n\r\n# 1.0.1\r\n\r\nInitial implementation compatible with the 1.x DCI module', '@mgi/dci-module (^1.0.1),@mgi/dci-tag-engine (^0.1.6)'),
(155, 51, 'https://gitlab.com/mgi/gpm-packages/detailed-error', 'GPM', '0.1.1', '2018-11-27 22:16:52', '## 0.1.1\r\n\r\nUpdated Readme\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', NULL),
(156, 52, '', 'GPM', '0.1.0', '2019-08-13 16:38:56', '## 0.1.0\r\n\r\nInitial Release.\r\n', NULL),
(157, 53, 'https://gitlab.com/mgi/gpm-packages/dotnet-database', 'GPM', '0.1.0', '2018-09-05 00:37:08', '## 0.1.0\r\n\r\nInitial Release', '@mgi/database-interface (^0.1.0)'),
(158, 53, 'https://gitlab.com/mgi/gpm-packages/dotnet-database', 'GPM', '0.1.1', '2018-11-21 23:42:59', '## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release', '@mgi/database-interface (^0.1.0)'),
(159, 54, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_easyxml/jki_lib_easyxml-3.0.0.170.vip', 'VIPM', '3.0.0.170', '2016-08-09 15:55:00', 'Open sourced and freely availble under the BSD License\nSupports LabVIEW 2011 and greater\nSeveral performance improvements', 'oglib_array>=2.7,oglib_error>=2.3,oglib_file>=2.8,oglib_lvdata>=2.8,oglib_string>=2.6'),
(160, 55, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/bienkowski_michal_lib_enclose_with_error_case_structure_quick_drop/bienkowski_michal_lib_enclose_with_error_case_structure_quick_drop-1.0.0.1.vip', 'VIPM', '1.0.0.1', '2020-06-14 20:27:32', 'Initial release as a VI Package.', NULL),
(161, 56, 'https://gitlab.com/mgi/gpm-packages/error-file-logger-panel', 'GPM', '0.1.2', '2018-11-27 19:41:58', '## 0.1.2\r\n\r\nAdded Log folder output to constructor.\r\n\r\n## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/error-logger-panel (^0.1.0)'),
(162, 56, 'https://gitlab.com/mgi/gpm-packages/error-file-logger-panel', 'GPM', '0.1.3', '2018-12-17 20:48:00', '## 0.1.3\r\n\r\nUpdated Dependencies.\r\n\r\n## 0.1.2\r\n\r\nAdded Log folder output to constructor.\r\n\r\n## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/error-logger-panel (^0.1.2)'),
(163, 57, 'https://gitlab.com/mgi/gpm-packages/error-history-panel', 'GPM', '0.1.1', '2018-11-27 19:38:52', '## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/panel-actor-error-reporter (^0.1.0)'),
(164, 58, 'https://gitlab.com/mgi/gpm-packages/error-log', 'GPM', '0.1.1', '2018-11-27 19:32:37', '## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/detailed-error (^0.1.0),@mgi/library-core (^0.1.0)'),
(165, 58, 'https://gitlab.com/mgi/gpm-packages/error-log', 'GPM', '0.1.2', '2018-12-17 20:37:34', '## 0.1.2\r\n\r\nUpdated package dependencies.\r\n\r\n## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/detailed-error (^0.1.0),@mgi/library-core (^0.2.0)'),
(166, 59, 'https://gitlab.com/mgi/gpm-packages/error-logger-panel', 'GPM', '0.1.1', '2018-11-27 19:39:54', '## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/error-log (^0.1.0),@mgi/panel-actor-error-reporter (^0.1.0)'),
(167, 59, 'https://gitlab.com/mgi/gpm-packages/error-logger-panel', 'GPM', '0.1.2', '2018-12-17 20:42:19', '## 0.1.2\r\n\r\nUpdated Dependencies.\r\n\r\n## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/error-log (^0.1.2),@mgi/panel-actor-error-reporter (^0.1.0)'),
(168, 60, 'https://gitlab.com/mgi/gpm-packages/error-reporter-core', 'GPM', '0.1.2', '2018-11-27 19:27:29', '## 0.1.2\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.1\r\n\r\nUpdated Readme and Relinked\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', NULL),
(169, 61, 'https://github.com/S5Solutions/ErrorLog.git', 'GPM', '1.0.0', '2018-12-17 22:07:50', '', NULL),
(170, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.1.0', '2019-02-26 13:51:05', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n-added delayed stop', NULL),
(171, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.2.0', '2019-03-06 22:22:58', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation', NULL),
(172, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.3.0', '2019-03-15 16:29:13', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to maleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n', NULL),
(173, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.4.0', '2019-03-17 21:12:13', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).', NULL),
(174, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.0', '2019-04-18 19:27:52', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. ', NULL),
(175, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.1', '2019-04-18 20:52:18', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs', NULL),
(176, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.2', '2019-04-21 20:23:56', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n', NULL),
(177, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.3', '2019-04-21 20:39:17', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code', '@cs/event-logger (^0.5.2)'),
(178, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.4', '2019-04-21 20:48:28', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n', '@cs/event-logger (^0.5.3)'),
(179, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.5', '2019-04-21 21:10:29', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n', '@cs/event-logger (^0.5.4)'),
(180, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.6', '2019-04-21 22:06:07', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n', '@cs/event-logger (^0.5.4)'),
(181, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.7', '2019-04-21 22:40:21', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n', '@cs/event-logger (^0.5.4)'),
(182, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.8', '2019-04-21 22:44:58', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n', '@cs/event-logger (^0.5.4)'),
(183, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.9', '2019-04-25 21:42:48', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n\r\nVersion 0.5.9\r\n--\r\n- Move Main API methods into logger reference class\r\n', '@cs/event-logger (^0.5.4)'),
(184, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.10', '2019-04-25 22:52:09', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n\r\nVersion 0.5.9\r\n--\r\n- Move Main API methods into logger reference class\r\n', '@cs/event-logger (^0.5.4)'),
(185, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.11', '2019-04-26 01:21:55', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n\r\nVersion 0.5.9\r\n--\r\n- Move Main API methods into logger reference class\r\n', '@cs/event-logger (^0.5.4)'),
(186, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.12', '2019-04-26 01:24:48', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n\r\nVersion 0.5.9\r\n--\r\n- Move Main API methods into logger reference class\r\n', '@cs/event-logger (^0.5.4)'),
(187, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.13', '2019-04-26 01:26:34', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n\r\nVersion 0.5.9\r\n--\r\n- Move Main API methods into logger reference class\r\n', '@cs/event-logger (^0.5.4)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(188, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.14', '2019-04-26 01:28:42', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n\r\nVersion 0.5.9\r\n--\r\n- Move Main API methods into logger reference class\r\n', '@cs/event-logger (^0.5.4)'),
(189, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.15', '2019-04-26 01:33:12', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n\r\nVersion 0.5.9\r\n--\r\n- Move Main API methods into logger reference class\r\n', '@cs/event-logger (^0.5.4)'),
(190, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.18', '2019-04-26 02:14:26', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n\r\nVersion 0.5.9\r\n--\r\n- Move Main API methods into logger reference class\r\n\r\nVersion 0.5.18\r\n--\r\n- Removed currently network sink related functionality\r\n', NULL),
(191, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.19', '2019-05-15 17:44:26', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n\r\nVersion 0.5.9\r\n--\r\n- Move Main API methods into logger reference class\r\n\r\nVersion 0.5.18\r\n--\r\n- Removed currently unused network sink related functionality\r\n\r\nVersion 0.5.19\r\n--\r\n- Added injectable log filters - this feature is largely untested as of yet\r\n- Updated sink error handling behaviors - sinks can report errors and shutdown, ignore errors and continue, or shutdown without reporting errors\r\n- Added console view sink - some features are still in process, and the design of this sink may change\r\n- Added new string format that allows a user specified string to define log entry format\r\n- Updated Logger behavior - if a valid instance of the logger is NOT created (by running initialize local log without valid inputs) further calls to the logger will NOT return errors\r\n- Added \'Get Logger Status\' method to check if a logger is running and if it is a valid instance\r\n', NULL),
(192, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.5.20', '2019-05-23 11:07:41', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n\r\nVersion 0.5.9\r\n--\r\n- Move Main API methods into logger reference class\r\n\r\nVersion 0.5.18\r\n--\r\n- Removed currently unused network sink related functionality\r\n\r\nVersion 0.5.19\r\n--\r\n- Added injectable log filters - this feature is largely untested as of yet\r\n- Updated sink error handling behaviors - sinks can report errors and shutdown, ignore errors and continue, or shutdown without reporting errors\r\n- Added console view sink - some features are still in process, and the design of this sink may change\r\n- Added new string format that allows a user specified string to define log entry format\r\n- Updated Logger behavior - if a valid instance of the logger is NOT created (by running initialize local log without valid inputs) further calls to the logger will NOT return errors\r\n- Added \'Get Logger Status\' method to check if a logger is running and if it is a valid instance\r\n\r\nVersion 0.5.20\r\n--\r\n- Fixed Broken examples\r\n', NULL),
(193, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.6.0', '2019-06-24 15:11:52', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n\r\nVersion 0.5.9\r\n--\r\n- Move Main API methods into logger reference class\r\n\r\nVersion 0.5.18\r\n--\r\n- Removed currently unused network sink related functionality\r\n\r\nVersion 0.5.19\r\n--\r\n- Added injectable log filters - this feature is largely untested as of yet\r\n- Updated sink error handling behaviors - sinks can report errors and shutdown, ignore errors and continue, or shutdown without reporting errors\r\n- Added console view sink - some features are still in process, and the design of this sink may change\r\n- Added new string format that allows a user specified string to define log entry format\r\n- Updated Logger behavior - if a valid instance of the logger is NOT created (by running initialize local log without valid inputs) further calls to the logger will NOT return errors\r\n- Added \'Get Logger Status\' method to check if a logger is running and if it is a valid instance\r\n\r\nVersion 0.5.20\r\n--\r\n- Fixed Broken examples\r\n\r\nVersion 0.6.0\r\n--\r\n- Reworked console view and added high level show/hide/close API\r\n- Added new API method \'Log Value Event\'', NULL),
(194, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.7.0', '2019-08-26 17:36:16', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n\r\nVersion 0.5.9\r\n--\r\n- Move Main API methods into logger reference class\r\n\r\nVersion 0.5.18\r\n--\r\n- Removed currently unused network sink related functionality\r\n\r\nVersion 0.5.19\r\n--\r\n- Added injectable log filters - this feature is largely untested as of yet\r\n- Updated sink error handling behaviors - sinks can report errors and shutdown, ignore errors and continue, or shutdown without reporting errors\r\n- Added console view sink - some features are still in process, and the design of this sink may change\r\n- Added new string format that allows a user specified string to define log entry format\r\n- Updated Logger behavior - if a valid instance of the logger is NOT created (by running initialize local log without valid inputs) further calls to the logger will NOT return errors\r\n- Added \'Get Logger Status\' method to check if a logger is running and if it is a valid instance\r\n\r\nVersion 0.5.20\r\n--\r\n- Fixed Broken examples\r\n\r\nVersion 0.6.0\r\n--\r\n- Reworked console view and added high level show/hide/close API\r\n- Added new API method \'Log Value Event\'\r\n\r\nVersion 0.7.0\r\n--\r\n- Added buffered log sink\r\n- Updated Log if Error method to include timestamp input, and modified to log warnings as warnings\r\n- Added method to Queue Sink to return event as string', NULL),
(195, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.7.1', '2019-08-26 19:07:20', '- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n\r\nVersion 0.5.9\r\n--\r\n- Move Main API methods into logger reference class\r\n\r\nVersion 0.5.18\r\n--\r\n- Removed currently unused network sink related functionality\r\n\r\nVersion 0.5.19\r\n--\r\n- Added injectable log filters - this feature is largely untested as of yet\r\n- Updated sink error handling behaviors - sinks can report errors and shutdown, ignore errors and continue, or shutdown without reporting errors\r\n- Added console view sink - some features are still in process, and the design of this sink may change\r\n- Added new string format that allows a user specified string to define log entry format\r\n- Updated Logger behavior - if a valid instance of the logger is NOT created (by running initialize local log without valid inputs) further calls to the logger will NOT return errors\r\n- Added \'Get Logger Status\' method to check if a logger is running and if it is a valid instance\r\n\r\nVersion 0.5.20\r\n--\r\n- Fixed Broken examples\r\n\r\nVersion 0.6.0\r\n--\r\n- Reworked console view and added high level show/hide/close API\r\n- Added new API method \'Log Value Event\'\r\n\r\nVersion 0.7.0\r\n--\r\n- Added buffered log sink\r\n- Updated Log if Error method to include timestamp input, and modified to log warnings as warnings\r\n- Added method to Queue Sink to return event as string\r\n\r\nVersion 0.7.1\r\n--\r\n- Fixed bug in application logger launcher - broken VI could cause launcher to hang', NULL),
(196, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.8.0', '2020-06-11 15:13:34', 'Version 0.8.0\r\n--\r\n- Added default string format to console view\r\n- Added persist after logger close option to console view\r\n- Added ability to get global log instance from singleton log\r\n\r\nVersion 0.7.1\r\n--\r\n- Fixed bug in application logger launcher - broken VI could cause launcher to hang\r\n\r\n- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\n\r\nVersion 0.7.0\r\n--\r\n- Added buffered log sink\r\n- Updated Log if Error method to include timestamp input, and modified to log warnings as warnings\r\n- Added method to Queue Sink to return event as string\r\n\r\n\r\nVersion 0.6.0\r\n--\r\n- Reworked console view and added high level show/hide/close API\r\n- Added new API method \'Log Value Event\'\r\n\r\nVersion 0.5.20\r\n--\r\n- Fixed Broken examples\r\n\r\nVersion 0.5.19\r\n--\r\n- Added injectable log filters - this feature is largely untested as of yet\r\n- Updated sink error handling behaviors - sinks can report errors and shutdown, ignore errors and continue, or shutdown without reporting errors\r\n- Added console view sink - some features are still in process, and the design of this sink may change\r\n- Added new string format that allows a user specified string to define log entry format\r\n- Updated Logger behavior - if a valid instance of the logger is NOT created (by running initialize local log without valid inputs) further calls to the logger will NOT return errors\r\n- Added \'Get Logger Status\' method to check if a logger is running and if it is a valid instance\r\n\r\nVersion 0.5.18\r\n--\r\n- Removed currently unused network sink related functionality\r\n\r\nVersion 0.5.9\r\n--\r\n- Move Main API methods into logger reference class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n', NULL),
(197, 62, 'https://bitbucket.org/composedsystems/composed-event-logger.git', 'GPM', '0.8.1', '2020-07-22 21:10:54', 'Version 0.8.1\r\n--\r\n- Added conditional disable structure to text file sink constructors to allow RT compatibility\r\n\r\n\r\nVersion 0.8.0\r\n--\r\n- Added default string format to console view\r\n- Added persist after logger close option to console view\r\n- Added ability to get global log instance from singleton log\r\n\r\nVersion 0.7.1\r\n--\r\n- Fixed bug in application logger launcher - broken VI could cause launcher to hang\r\n\r\n- Updated folder structure to match CS conventions, diagram disabled all broken code\r\n- added delayed stop\r\n- Added support for local log instance, updated Public API documentation\r\n\r\n\r\nVersion 0.7.0\r\n--\r\n- Added buffered log sink\r\n- Updated Log if Error method to include timestamp input, and modified to log warnings as warnings\r\n- Added method to Queue Sink to return event as string\r\n\r\n\r\nVersion 0.6.0\r\n--\r\n- Reworked console view and added high level show/hide/close API\r\n- Added new API method \'Log Value Event\'\r\n\r\nVersion 0.5.20\r\n--\r\n- Fixed Broken examples\r\n\r\nVersion 0.5.19\r\n--\r\n- Added injectable log filters - this feature is largely untested as of yet\r\n- Updated sink error handling behaviors - sinks can report errors and shutdown, ignore errors and continue, or shutdown without reporting errors\r\n- Added console view sink - some features are still in process, and the design of this sink may change\r\n- Added new string format that allows a user specified string to define log entry format\r\n- Updated Logger behavior - if a valid instance of the logger is NOT created (by running initialize local log without valid inputs) further calls to the logger will NOT return errors\r\n- Added \'Get Logger Status\' method to check if a logger is running and if it is a valid instance\r\n\r\nVersion 0.5.18\r\n--\r\n- Removed currently unused network sink related functionality\r\n\r\nVersion 0.5.9\r\n--\r\n- Move Main API methods into logger reference class\r\n\r\nVersion 0.5.5\r\n--\r\n- Moved additional typedefs to shared folder\r\n- Changed access scoping of internal methods\r\n\r\n\r\nVersion 0.5.4\r\n--\r\n- Moved shared typedefs to shared library location outside class\r\n\r\n\r\nVersion 0.5.3\r\n--\r\n- Removed unused code\r\n\r\nVersion 0.5.2\r\n--\r\n- Republish in 2017 SP1\r\n- Added malleable interface test\r\n\r\n\r\nVersion 0.5.1\r\n--\r\n- Fixed bug to ensure logger is NOT launched on invalid inputs\r\n\r\nVersion 0.5.0\r\n--\r\n- Seperated out the singleton and local log behaviors into seperate APIs. Any calls to log events, log if error, or add sink will now be broken if not wired with a log instance reference.\r\n- Added ability to launch a log with a parent log\r\n- Removed the ability to add an existing sink to a log - with the ability to add aggregate logs it is likely no longer useful. \r\n\r\nVersion 0.4.0\r\n--\r\n- Initialize Global Log.vim and Initialize Local Log.vim were updated to allow adding an single active sink, or an array of active sinks.\r\n- Add Sink.vi was updated to a malleable VI to allow input of a single active sink, or an array of sinks, in addition to a single/array of uninitialized sink(s).\r\n\r\nVersion 0.3.0\r\n--\r\n- This version requires LabVIEW 2017 SP1 or later.\r\n- Initialize Global Log.vi and Initialize Local Log.vi were both updated to malleable VIs to allow input of an array of sinks, or a single sink.\r\n- The connector pane layout on Initialize Global Log.vim, Initialize Local Log.vim, Log if Error.vi, Log Event.vi and Add Sink.vi has changed from Version 0.2.0 and will need to be relinked in any applications.\r\n', NULL),
(198, 63, 'https://bitbucket.org/endigit/exitimer/src/master/', 'GPM', '0.1.0', '2018-12-06 22:16:45', '## 0.1.0\r\nInitial release.', NULL),
(199, 63, 'https://bitbucket.org/endigit/exitimer/src/master/', 'GPM', '1.0.0', '2019-02-27 21:16:16', '## 0.1.0\r\nInitial release.\r\n\r\n## 1.0.0\r\nLocking the API.\r\n\r\nAddressing bug when Create if Null.vi is called after Exit.vi is called. Previously this would recreate the Exitimer, the fix prevents re-creation.\r\n\r\nMoving examples to a separate project.', NULL),
(200, 64, '', 'GPM', '0.1.0', '2019-02-27 21:48:43', '## 0.1.0\r\nInitial release.', '@endigit/exitimer (^1.0.0)'),
(201, 65, 'https://bitbucket.org/composedsystems/file-explorer-extension/src/master/', 'GPM', '0.0.2-Beta', '2019-08-01 04:23:16', '##[0.0.2] - 2019-08-01\r\n- Built up a test application for exercising the view\r\n- Starting to implement UX features\r\n\r\n##[0.0.1] - 2019-07-31\r\nInitial commit', '@cs/mva-framework (^2.1.2)'),
(202, 65, 'https://bitbucket.org/composedsystems/file-explorer-extension/src/master/', 'GPM', '1.0.0-Beta', '2019-08-02 02:49:59', '##[1.0.0] - 2019-08-01\r\n- First official release\r\n\r\n##[0.0.2] - 2019-08-01\r\n- Built up a test application for exercising the view\r\n- Starting to implement UX features\r\n\r\n##[0.0.1] - 2019-07-31\r\n- Initial commit', '@cs/mva-framework (^2.1.2)'),
(203, 65, 'https://bitbucket.org/composedsystems/file-explorer-extension/src/master/', 'GPM', '1.0.1', '2019-08-02 15:27:10', '##[1.0.1] - 2019-08-02\r\n- Fixes [Issue #3](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/3/we-need-an-accessor-for-folder-exclusion)\r\n- Removed Beta Tag\r\n- Updated Readme\r\n\r\n##[1.0.0] - 2019-08-01\r\n- First official release\r\n\r\n##[0.0.2] - 2019-08-01\r\n- Built up a test application for exercising the view\r\n- Starting to implement UX features\r\n\r\n##[0.0.1] - 2019-07-31\r\n- Initial commit', '@cs/mva-framework (^2.1.2)'),
(204, 65, 'https://bitbucket.org/composedsystems/file-explorer-extension/src/master/', 'GPM', '1.0.2', '2019-08-02 16:09:58', '##[1.0.2] - 2019-08-02\r\n- Fixes [Issue #4](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/4/testappassemblervi-should-not-be-in-the)\r\n- Changed scoping of static methods from private to public\r\n\r\n##[1.0.1] - 2019-08-02\r\n- Fixes [Issue #3](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/3/we-need-an-accessor-for-folder-exclusion)\r\n- Removed Beta Tag\r\n- Updated Readme\r\n\r\n##[1.0.0] - 2019-08-01\r\n- First official release\r\n\r\n##[0.0.2] - 2019-08-01\r\n- Built up a test application for exercising the view\r\n- Starting to implement UX features\r\n\r\n##[0.0.1] - 2019-07-31\r\n- Initial commit', '@cs/mva-framework (^2.1.2)'),
(205, 65, 'https://bitbucket.org/composedsystems/file-explorer-extension/src/master/', 'GPM', '1.0.3', '2019-08-05 15:39:56', '##[1.0.3] - 2019-08-05\r\n- Building before a pull request\r\n\r\n##[1.0.2] - 2019-08-02\r\n- Fixes [Issue #4](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/4/testappassemblervi-should-not-be-in-the)\r\n- Changed scoping of static methods from private to public\r\n\r\n##[1.0.1] - 2019-08-02\r\n- Fixes [Issue #3](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/3/we-need-an-accessor-for-folder-exclusion)\r\n- Removed Beta Tag\r\n- Updated Readme\r\n\r\n##[1.0.0] - 2019-08-01\r\n- First official release\r\n\r\n##[0.0.2] - 2019-08-01\r\n- Built up a test application for exercising the view\r\n- Starting to implement UX features\r\n\r\n##[0.0.1] - 2019-07-31\r\n- Initial commit', '@cs/mva-framework (^2.1.2)'),
(206, 65, 'https://bitbucket.org/composedsystems/file-explorer-extension/src/master/', 'GPM', '1.0.5', '2019-08-07 17:33:27', '##[1.0.5] - 2019-08-07\r\n- Adding ability to customize tree right click menus and responses to right click menu options.\r\n- Added unit tests and some manual ui tests.\r\n\r\n##[1.0.4] - 2019-08-05\r\n- Adding test suite and initial test cases\r\n\r\n##[1.0.3] - 2019-08-05\r\n- Building before a pull request\r\n\r\n##[1.0.2] - 2019-08-02\r\n- Fixes [Issue #4](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/4/testappassemblervi-should-not-be-in-the)\r\n- Changed scoping of static methods from private to public\r\n\r\n##[1.0.1] - 2019-08-02\r\n- Fixes [Issue #3](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/3/we-need-an-accessor-for-folder-exclusion)\r\n- Removed Beta Tag\r\n- Updated Readme\r\n\r\n##[1.0.0] - 2019-08-01\r\n- First official release\r\n\r\n##[0.0.2] - 2019-08-01\r\n- Built up a test application for exercising the view\r\n- Starting to implement UX features\r\n\r\n##[0.0.1] - 2019-07-31\r\n- Initial commit', '@cs/mva-framework (^2.1.2)'),
(207, 65, 'https://bitbucket.org/composedsystems/file-explorer-extension/src/master/', 'GPM', '1.0.6', '2019-08-08 13:32:29', '##[1.0.6] - 2019-08-07\r\n- Added icon to Test File Explorer class\r\n- Replaced property node accessor for Tree ref with a sub.vi accessor\r\n- Added Chris Cilino as author\r\n\r\n##[1.0.5] - 2019-08-07\r\n- Adding ability to customize tree right click menus and responses to right click menu options.\r\n- Added unit tests and some manual ui tests.\r\n\r\n##[1.0.4] - 2019-08-05\r\n- Adding test suite and initial test cases\r\n\r\n##[1.0.3] - 2019-08-05\r\n- Building before a pull request\r\n\r\n##[1.0.2] - 2019-08-02\r\n- Fixes [Issue #4](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/4/testappassemblervi-should-not-be-in-the)\r\n- Changed scoping of static methods from private to public\r\n\r\n##[1.0.1] - 2019-08-02\r\n- Fixes [Issue #3](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/3/we-need-an-accessor-for-folder-exclusion)\r\n- Removed Beta Tag\r\n- Updated Readme\r\n\r\n##[1.0.0] - 2019-08-01\r\n- First official release\r\n\r\n##[0.0.2] - 2019-08-01\r\n- Built up a test application for exercising the view\r\n- Starting to implement UX features\r\n\r\n##[0.0.1] - 2019-07-31\r\n- Initial commit', '@cs/mva-framework (^2.1.2)'),
(208, 65, 'https://bitbucket.org/composedsystems/file-explorer-extension/src/master/', 'GPM', '1.0.7', '2019-08-08 13:43:40', '##[1.0.7] - 2019-08-08\r\n- Updated to MVA v2.1.3\r\n\r\n##[1.0.6] - 2019-08-07\r\n- Added icon to Test File Explorer class\r\n- Replaced property node accessor for Tree ref with a sub.vi accessor\r\n- Added Chris Cilino as author\r\n\r\n##[1.0.5] - 2019-08-07\r\n- Adding ability to customize tree right click menus and responses to right click menu options.\r\n- Added unit tests and some manual ui tests.\r\n\r\n##[1.0.4] - 2019-08-05\r\n- Adding test suite and initial test cases\r\n\r\n##[1.0.3] - 2019-08-05\r\n- Building before a pull request\r\n\r\n##[1.0.2] - 2019-08-02\r\n- Fixes [Issue #4](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/4/testappassemblervi-should-not-be-in-the)\r\n- Changed scoping of static methods from private to public\r\n\r\n##[1.0.1] - 2019-08-02\r\n- Fixes [Issue #3](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/3/we-need-an-accessor-for-folder-exclusion)\r\n- Removed Beta Tag\r\n- Updated Readme\r\n\r\n##[1.0.0] - 2019-08-01\r\n- First official release\r\n\r\n##[0.0.2] - 2019-08-01\r\n- Built up a test application for exercising the view\r\n- Starting to implement UX features\r\n\r\n##[0.0.1] - 2019-07-31\r\n- Initial commit', '@cs/mva-framework (^2.1.2)'),
(209, 65, 'https://bitbucket.org/composedsystems/file-explorer-extension/src/master/', 'GPM', '1.0.8', '2019-08-08 15:40:31', '##[1.0.8] - 2019-08-08\r\n- Updated the Receive Shortcut Menu Selection Event.vi to take the Coordinates as an input\r\n- Cosmetic updates to other project items\r\n- Re-linked to MVA v2.1.3, there was an issue with the Variant Extension dependency for some reason\r\n\r\n##[1.0.7] - 2019-08-08\r\n- Updated to MVA v2.1.3\r\n\r\n##[1.0.6] - 2019-08-07\r\n- Added icon to Test File Explorer class\r\n- Replaced property node accessor for Tree ref with a sub.vi accessor\r\n- Added Chris Cilino as author\r\n\r\n##[1.0.5] - 2019-08-07\r\n- Adding ability to customize tree right click menus and responses to right click menu options.\r\n- Added unit tests and some manual ui tests.\r\n\r\n##[1.0.4] - 2019-08-05\r\n- Adding test suite and initial test cases\r\n\r\n##[1.0.3] - 2019-08-05\r\n- Building before a pull request\r\n\r\n##[1.0.2] - 2019-08-02\r\n- Fixes [Issue #4](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/4/testappassemblervi-should-not-be-in-the)\r\n- Changed scoping of static methods from private to public\r\n\r\n##[1.0.1] - 2019-08-02\r\n- Fixes [Issue #3](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/3/we-need-an-accessor-for-folder-exclusion)\r\n- Removed Beta Tag\r\n- Updated Readme\r\n\r\n##[1.0.0] - 2019-08-01\r\n- First official release\r\n\r\n##[0.0.2] - 2019-08-01\r\n- Built up a test application for exercising the view\r\n- Starting to implement UX features\r\n\r\n##[0.0.1] - 2019-07-31\r\n- Initial commit', '@cs/mva-framework (^2.1.3)'),
(210, 65, 'https://bitbucket.org/composedsystems/file-explorer-extension/src/master/', 'GPM', '1.0.9', '2019-08-08 17:13:24', '##[1.0.9] - 2019-08-08\r\n- Added ability to Register for a redraw of the tree control as a notification message\r\n- This update includes a new Must Override Method \"Register for Draw Tree.vi\"\r\n\r\n##[1.0.8] - 2019-08-08\r\n- Updated the Receive Shortcut Menu Selection Event.vi to take the Coordinates as an input\r\n- Cosmetic updates to other project items\r\n- Re-linked to MVA v2.1.3, there was an issue with the Variant Extension dependency for some reason\r\n\r\n##[1.0.7] - 2019-08-08\r\n- Updated to MVA v2.1.3\r\n\r\n##[1.0.6] - 2019-08-07\r\n- Added icon to Test File Explorer class\r\n- Replaced property node accessor for Tree ref with a sub.vi accessor\r\n- Added Chris Cilino as author\r\n\r\n##[1.0.5] - 2019-08-07\r\n- Adding ability to customize tree right click menus and responses to right click menu options.\r\n- Added unit tests and some manual ui tests.\r\n\r\n##[1.0.4] - 2019-08-05\r\n- Adding test suite and initial test cases\r\n\r\n##[1.0.3] - 2019-08-05\r\n- Building before a pull request\r\n\r\n##[1.0.2] - 2019-08-02\r\n- Fixes [Issue #4](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/4/testappassemblervi-should-not-be-in-the)\r\n- Changed scoping of static methods from private to public\r\n\r\n##[1.0.1] - 2019-08-02\r\n- Fixes [Issue #3](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/3/we-need-an-accessor-for-folder-exclusion)\r\n- Removed Beta Tag\r\n- Updated Readme\r\n\r\n##[1.0.0] - 2019-08-01\r\n- First official release\r\n\r\n##[0.0.2] - 2019-08-01\r\n- Built up a test application for exercising the view\r\n- Starting to implement UX features\r\n\r\n##[0.0.1] - 2019-07-31\r\n- Initial commit', '@cs/mva-framework (^2.1.3)'),
(211, 65, 'https://bitbucket.org/composedsystems/file-explorer-extension/src/master/', 'GPM', '1.0.10', '2019-08-10 19:36:31', '##[1.0.10] - 2019-08-10\r\n- Updated how the filtering class interacts with the Tree Explorer\r\n\r\n##[1.0.9] - 2019-08-08\r\n- Added ability to Register for a redraw of the tree control as a notification message\r\n- This update includes a new Must Override Method \"Register for Draw Tree.vi\"\r\n\r\n##[1.0.8] - 2019-08-08\r\n- Updated the Receive Shortcut Menu Selection Event.vi to take the Coordinates as an input\r\n- Cosmetic updates to other project items\r\n- Re-linked to MVA v2.1.3, there was an issue with the Variant Extension dependency for some reason\r\n\r\n##[1.0.7] - 2019-08-08\r\n- Updated to MVA v2.1.3\r\n\r\n##[1.0.6] - 2019-08-07\r\n- Added icon to Test File Explorer class\r\n- Replaced property node accessor for Tree ref with a sub.vi accessor\r\n- Added Chris Cilino as author\r\n\r\n##[1.0.5] - 2019-08-07\r\n- Adding ability to customize tree right click menus and responses to right click menu options.\r\n- Added unit tests and some manual ui tests.\r\n\r\n##[1.0.4] - 2019-08-05\r\n- Adding test suite and initial test cases\r\n\r\n##[1.0.3] - 2019-08-05\r\n- Building before a pull request\r\n\r\n##[1.0.2] - 2019-08-02\r\n- Fixes [Issue #4](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/4/testappassemblervi-should-not-be-in-the)\r\n- Changed scoping of static methods from private to public\r\n\r\n##[1.0.1] - 2019-08-02\r\n- Fixes [Issue #3](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/3/we-need-an-accessor-for-folder-exclusion)\r\n- Removed Beta Tag\r\n- Updated Readme\r\n\r\n##[1.0.0] - 2019-08-01\r\n- First official release\r\n\r\n##[0.0.2] - 2019-08-01\r\n- Built up a test application for exercising the view\r\n- Starting to implement UX features\r\n\r\n##[0.0.1] - 2019-07-31\r\n- Initial commit', '@cs/mva-framework (^2.1.3)'),
(212, 65, 'https://bitbucket.org/composedsystems/file-explorer-extension/src/master/', 'GPM', '1.1.0', '2019-09-16 15:14:39', '##[1.1.0] - 2019-09-16\r\n- Updated to MVA v2.2.3\r\n\r\n##[1.0.10] - 2019-08-10\r\n- Updated how the filtering class interacts with the Tree Explorer\r\n\r\n##[1.0.9] - 2019-08-08\r\n- Added ability to Register for a redraw of the tree control as a notification message\r\n- This update includes a new Must Override Method \"Register for Draw Tree.vi\"\r\n\r\n##[1.0.8] - 2019-08-08\r\n- Updated the Receive Shortcut Menu Selection Event.vi to take the Coordinates as an input\r\n- Cosmetic updates to other project items\r\n- Re-linked to MVA v2.1.3, there was an issue with the Variant Extension dependency for some reason\r\n\r\n##[1.0.7] - 2019-08-08\r\n- Updated to MVA v2.1.3\r\n\r\n##[1.0.6] - 2019-08-07\r\n- Added icon to Test File Explorer class\r\n- Replaced property node accessor for Tree ref with a sub.vi accessor\r\n- Added Chris Cilino as author\r\n\r\n##[1.0.5] - 2019-08-07\r\n- Adding ability to customize tree right click menus and responses to right click menu options.\r\n- Added unit tests and some manual ui tests.\r\n\r\n##[1.0.4] - 2019-08-05\r\n- Adding test suite and initial test cases\r\n\r\n##[1.0.3] - 2019-08-05\r\n- Building before a pull request\r\n\r\n##[1.0.2] - 2019-08-02\r\n- Fixes [Issue #4](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/4/testappassemblervi-should-not-be-in-the)\r\n- Changed scoping of static methods from private to public\r\n\r\n##[1.0.1] - 2019-08-02\r\n- Fixes [Issue #3](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/3/we-need-an-accessor-for-folder-exclusion)\r\n- Removed Beta Tag\r\n- Updated Readme\r\n\r\n##[1.0.0] - 2019-08-01\r\n- First official release\r\n\r\n##[0.0.2] - 2019-08-01\r\n- Built up a test application for exercising the view\r\n- Starting to implement UX features\r\n\r\n##[0.0.1] - 2019-07-31\r\n- Initial commit', '@cs/mva-framework (^2.2.3)'),
(213, 65, 'https://bitbucket.org/composedsystems/file-explorer-extension/src/master/', 'GPM', '1.1.1', '2019-10-08 16:58:50', '##[1.1.1] - 2019-09-16\r\n- Added ability for open/closed tree items to maintain open state on tree redraw\r\n\r\n##[1.1.0] - 2019-09-16\r\n- Updated to MVA v2.2.3\r\n\r\n##[1.0.10] - 2019-08-10\r\n- Updated how the filtering class interacts with the Tree Explorer\r\n\r\n##[1.0.9] - 2019-08-08\r\n- Added ability to Register for a redraw of the tree control as a notification message\r\n- This update includes a new Must Override Method \"Register for Draw Tree.vi\"\r\n\r\n##[1.0.8] - 2019-08-08\r\n- Updated the Receive Shortcut Menu Selection Event.vi to take the Coordinates as an input\r\n- Cosmetic updates to other project items\r\n- Re-linked to MVA v2.1.3, there was an issue with the Variant Extension dependency for some reason\r\n\r\n##[1.0.7] - 2019-08-08\r\n- Updated to MVA v2.1.3\r\n\r\n##[1.0.6] - 2019-08-07\r\n- Added icon to Test File Explorer class\r\n- Replaced property node accessor for Tree ref with a sub.vi accessor\r\n- Added Chris Cilino as author\r\n\r\n##[1.0.5] - 2019-08-07\r\n- Adding ability to customize tree right click menus and responses to right click menu options.\r\n- Added unit tests and some manual ui tests.\r\n\r\n##[1.0.4] - 2019-08-05\r\n- Adding test suite and initial test cases\r\n\r\n##[1.0.3] - 2019-08-05\r\n- Building before a pull request\r\n\r\n##[1.0.2] - 2019-08-02\r\n- Fixes [Issue #4](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/4/testappassemblervi-should-not-be-in-the)\r\n- Changed scoping of static methods from private to public\r\n\r\n##[1.0.1] - 2019-08-02\r\n- Fixes [Issue #3](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/3/we-need-an-accessor-for-folder-exclusion)\r\n- Removed Beta Tag\r\n- Updated Readme\r\n\r\n##[1.0.0] - 2019-08-01\r\n- First official release\r\n\r\n##[0.0.2] - 2019-08-01\r\n- Built up a test application for exercising the view\r\n- Starting to implement UX features\r\n\r\n##[0.0.1] - 2019-07-31\r\n- Initial commit', '@cs/mva-framework (^2.2.3)'),
(214, 65, 'https://bitbucket.org/composedsystems/file-explorer-extension/src/master/', 'GPM', '1.1.2', '2019-10-08 18:32:34', '##[1.1.2] - 2019-10-08\r\n- Refactoring to speed up tree redraw\r\n\r\n##[1.1.1] - 2019-09-16\r\n- Added ability for open/closed tree items to maintain open state on tree redraw\r\n\r\n##[1.1.0] - 2019-09-16\r\n- Updated to MVA v2.2.3\r\n\r\n##[1.0.10] - 2019-08-10\r\n- Updated how the filtering class interacts with the Tree Explorer\r\n\r\n##[1.0.9] - 2019-08-08\r\n- Added ability to Register for a redraw of the tree control as a notification message\r\n- This update includes a new Must Override Method \"Register for Draw Tree.vi\"\r\n\r\n##[1.0.8] - 2019-08-08\r\n- Updated the Receive Shortcut Menu Selection Event.vi to take the Coordinates as an input\r\n- Cosmetic updates to other project items\r\n- Re-linked to MVA v2.1.3, there was an issue with the Variant Extension dependency for some reason\r\n\r\n##[1.0.7] - 2019-08-08\r\n- Updated to MVA v2.1.3\r\n\r\n##[1.0.6] - 2019-08-07\r\n- Added icon to Test File Explorer class\r\n- Replaced property node accessor for Tree ref with a sub.vi accessor\r\n- Added Chris Cilino as author\r\n\r\n##[1.0.5] - 2019-08-07\r\n- Adding ability to customize tree right click menus and responses to right click menu options.\r\n- Added unit tests and some manual ui tests.\r\n\r\n##[1.0.4] - 2019-08-05\r\n- Adding test suite and initial test cases\r\n\r\n##[1.0.3] - 2019-08-05\r\n- Building before a pull request\r\n\r\n##[1.0.2] - 2019-08-02\r\n- Fixes [Issue #4](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/4/testappassemblervi-should-not-be-in-the)\r\n- Changed scoping of static methods from private to public\r\n\r\n##[1.0.1] - 2019-08-02\r\n- Fixes [Issue #3](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/3/we-need-an-accessor-for-folder-exclusion)\r\n- Removed Beta Tag\r\n- Updated Readme\r\n\r\n##[1.0.0] - 2019-08-01\r\n- First official release\r\n\r\n##[0.0.2] - 2019-08-01\r\n- Built up a test application for exercising the view\r\n- Starting to implement UX features\r\n\r\n##[0.0.1] - 2019-07-31\r\n- Initial commit', '@cs/mva-framework (^2.2.3)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(215, 65, 'https://bitbucket.org/composedsystems/file-explorer-extension/src/master/', 'GPM', '1.1.3', '2019-10-30 01:28:17', '##[1.1.3] - 2019-10-29\r\n- Added accessor for setting selection color\r\n- Updated Handle Click on Tree Item to pass in Plat Mods for differentiating between right and left clicks\r\n\r\n##[1.1.2] - 2019-10-08\r\n- Refactoring to speed up tree redraw\r\n\r\n##[1.1.1] - 2019-09-16\r\n- Added ability for open/closed tree items to maintain open state on tree redraw\r\n\r\n##[1.1.0] - 2019-09-16\r\n- Updated to MVA v2.2.3\r\n\r\n##[1.0.10] - 2019-08-10\r\n- Updated how the filtering class interacts with the Tree Explorer\r\n\r\n##[1.0.9] - 2019-08-08\r\n- Added ability to Register for a redraw of the tree control as a notification message\r\n- This update includes a new Must Override Method \"Register for Draw Tree.vi\"\r\n\r\n##[1.0.8] - 2019-08-08\r\n- Updated the Receive Shortcut Menu Selection Event.vi to take the Coordinates as an input\r\n- Cosmetic updates to other project items\r\n- Re-linked to MVA v2.1.3, there was an issue with the Variant Extension dependency for some reason\r\n\r\n##[1.0.7] - 2019-08-08\r\n- Updated to MVA v2.1.3\r\n\r\n##[1.0.6] - 2019-08-07\r\n- Added icon to Test File Explorer class\r\n- Replaced property node accessor for Tree ref with a sub.vi accessor\r\n- Added Chris Cilino as author\r\n\r\n##[1.0.5] - 2019-08-07\r\n- Adding ability to customize tree right click menus and responses to right click menu options.\r\n- Added unit tests and some manual ui tests.\r\n\r\n##[1.0.4] - 2019-08-05\r\n- Adding test suite and initial test cases\r\n\r\n##[1.0.3] - 2019-08-05\r\n- Building before a pull request\r\n\r\n##[1.0.2] - 2019-08-02\r\n- Fixes [Issue #4](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/4/testappassemblervi-should-not-be-in-the)\r\n- Changed scoping of static methods from private to public\r\n\r\n##[1.0.1] - 2019-08-02\r\n- Fixes [Issue #3](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/3/we-need-an-accessor-for-folder-exclusion)\r\n- Removed Beta Tag\r\n- Updated Readme\r\n\r\n##[1.0.0] - 2019-08-01\r\n- First official release\r\n\r\n##[0.0.2] - 2019-08-01\r\n- Built up a test application for exercising the view\r\n- Starting to implement UX features\r\n\r\n##[0.0.1] - 2019-07-31\r\n- Initial commit', '@cs/mva-framework (^2.2.3)'),
(216, 65, 'https://bitbucket.org/composedsystems/file-explorer-extension/src/master/', 'GPM', '1.1.4', '2019-10-30 02:11:40', '##[1.1.4] - 2019-10-29\r\n- Updated Handle Click on Tree Item to pass in Button for differentiating between right and left clicks\r\n\r\n##[1.1.3] - 2019-10-29\r\n- Added accessor for setting selection color\r\n- Updated Handle Click on Tree Item to pass in Plat Mods for differentiating between right and left clicks\r\n\r\n##[1.1.2] - 2019-10-08\r\n- Refactoring to speed up tree redraw\r\n\r\n##[1.1.1] - 2019-09-16\r\n- Added ability for open/closed tree items to maintain open state on tree redraw\r\n\r\n##[1.1.0] - 2019-09-16\r\n- Updated to MVA v2.2.3\r\n\r\n##[1.0.10] - 2019-08-10\r\n- Updated how the filtering class interacts with the Tree Explorer\r\n\r\n##[1.0.9] - 2019-08-08\r\n- Added ability to Register for a redraw of the tree control as a notification message\r\n- This update includes a new Must Override Method \"Register for Draw Tree.vi\"\r\n\r\n##[1.0.8] - 2019-08-08\r\n- Updated the Receive Shortcut Menu Selection Event.vi to take the Coordinates as an input\r\n- Cosmetic updates to other project items\r\n- Re-linked to MVA v2.1.3, there was an issue with the Variant Extension dependency for some reason\r\n\r\n##[1.0.7] - 2019-08-08\r\n- Updated to MVA v2.1.3\r\n\r\n##[1.0.6] - 2019-08-07\r\n- Added icon to Test File Explorer class\r\n- Replaced property node accessor for Tree ref with a sub.vi accessor\r\n- Added Chris Cilino as author\r\n\r\n##[1.0.5] - 2019-08-07\r\n- Adding ability to customize tree right click menus and responses to right click menu options.\r\n- Added unit tests and some manual ui tests.\r\n\r\n##[1.0.4] - 2019-08-05\r\n- Adding test suite and initial test cases\r\n\r\n##[1.0.3] - 2019-08-05\r\n- Building before a pull request\r\n\r\n##[1.0.2] - 2019-08-02\r\n- Fixes [Issue #4](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/4/testappassemblervi-should-not-be-in-the)\r\n- Changed scoping of static methods from private to public\r\n\r\n##[1.0.1] - 2019-08-02\r\n- Fixes [Issue #3](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/3/we-need-an-accessor-for-folder-exclusion)\r\n- Removed Beta Tag\r\n- Updated Readme\r\n\r\n##[1.0.0] - 2019-08-01\r\n- First official release\r\n\r\n##[0.0.2] - 2019-08-01\r\n- Built up a test application for exercising the view\r\n- Starting to implement UX features\r\n\r\n##[0.0.1] - 2019-07-31\r\n- Initial commit', '@cs/mva-framework (^2.2.3)'),
(217, 65, 'https://bitbucket.org/composedsystems/file-explorer-extension/src/master/', 'GPM', '2.0.0', '2020-03-26 16:42:15', '##[2.0.0] - 2020-03-26\r\n- Built against MVA-Viewable G Package\r\n\r\n##[1.1.4] - 2019-10-29\r\n- Updated Handle Click on Tree Item to pass in Button for differentiating between right and left clicks\r\n\r\n##[1.1.3] - 2019-10-29\r\n- Added accessor for setting selection color\r\n- Updated Handle Click on Tree Item to pass in Plat Mods for differentiating between right and left clicks\r\n\r\n##[1.1.2] - 2019-10-08\r\n- Refactoring to speed up tree redraw\r\n\r\n##[1.1.1] - 2019-09-16\r\n- Added ability for open/closed tree items to maintain open state on tree redraw\r\n\r\n##[1.1.0] - 2019-09-16\r\n- Updated to MVA v2.2.3\r\n\r\n##[1.0.10] - 2019-08-10\r\n- Updated how the filtering class interacts with the Tree Explorer\r\n\r\n##[1.0.9] - 2019-08-08\r\n- Added ability to Register for a redraw of the tree control as a notification message\r\n- This update includes a new Must Override Method \"Register for Draw Tree.vi\"\r\n\r\n##[1.0.8] - 2019-08-08\r\n- Updated the Receive Shortcut Menu Selection Event.vi to take the Coordinates as an input\r\n- Cosmetic updates to other project items\r\n- Re-linked to MVA v2.1.3, there was an issue with the Variant Extension dependency for some reason\r\n\r\n##[1.0.7] - 2019-08-08\r\n- Updated to MVA v2.1.3\r\n\r\n##[1.0.6] - 2019-08-07\r\n- Added icon to Test File Explorer class\r\n- Replaced property node accessor for Tree ref with a sub.vi accessor\r\n- Added Chris Cilino as author\r\n\r\n##[1.0.5] - 2019-08-07\r\n- Adding ability to customize tree right click menus and responses to right click menu options.\r\n- Added unit tests and some manual ui tests.\r\n\r\n##[1.0.4] - 2019-08-05\r\n- Adding test suite and initial test cases\r\n\r\n##[1.0.3] - 2019-08-05\r\n- Building before a pull request\r\n\r\n##[1.0.2] - 2019-08-02\r\n- Fixes [Issue #4](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/4/testappassemblervi-should-not-be-in-the)\r\n- Changed scoping of static methods from private to public\r\n\r\n##[1.0.1] - 2019-08-02\r\n- Fixes [Issue #3](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/3/we-need-an-accessor-for-folder-exclusion)\r\n- Removed Beta Tag\r\n- Updated Readme\r\n\r\n##[1.0.0] - 2019-08-01\r\n- First official release\r\n\r\n##[0.0.2] - 2019-08-01\r\n- Built up a test application for exercising the view\r\n- Starting to implement UX features\r\n\r\n##[0.0.1] - 2019-07-31\r\n- Initial commit', '@cs/mva-viewable (^0.1.0)'),
(218, 65, 'https://bitbucket.org/composedsystems/file-explorer-extension/src/master/', 'GPM', '2.0.1', '2020-04-07 03:05:57', '##[2.0.1] - 2020-04-06\r\n- Built against MVA-Viewable G Package v0.1.1\r\n\r\n##[2.0.0] - 2020-03-26\r\n- Built against MVA-Viewable G Package\r\n\r\n##[1.1.4] - 2019-10-29\r\n- Updated Handle Click on Tree Item to pass in Button for differentiating between right and left clicks\r\n\r\n##[1.1.3] - 2019-10-29\r\n- Added accessor for setting selection color\r\n- Updated Handle Click on Tree Item to pass in Plat Mods for differentiating between right and left clicks\r\n\r\n##[1.1.2] - 2019-10-08\r\n- Refactoring to speed up tree redraw\r\n\r\n##[1.1.1] - 2019-09-16\r\n- Added ability for open/closed tree items to maintain open state on tree redraw\r\n\r\n##[1.1.0] - 2019-09-16\r\n- Updated to MVA v2.2.3\r\n\r\n##[1.0.10] - 2019-08-10\r\n- Updated how the filtering class interacts with the Tree Explorer\r\n\r\n##[1.0.9] - 2019-08-08\r\n- Added ability to Register for a redraw of the tree control as a notification message\r\n- This update includes a new Must Override Method \"Register for Draw Tree.vi\"\r\n\r\n##[1.0.8] - 2019-08-08\r\n- Updated the Receive Shortcut Menu Selection Event.vi to take the Coordinates as an input\r\n- Cosmetic updates to other project items\r\n- Re-linked to MVA v2.1.3, there was an issue with the Variant Extension dependency for some reason\r\n\r\n##[1.0.7] - 2019-08-08\r\n- Updated to MVA v2.1.3\r\n\r\n##[1.0.6] - 2019-08-07\r\n- Added icon to Test File Explorer class\r\n- Replaced property node accessor for Tree ref with a sub.vi accessor\r\n- Added Chris Cilino as author\r\n\r\n##[1.0.5] - 2019-08-07\r\n- Adding ability to customize tree right click menus and responses to right click menu options.\r\n- Added unit tests and some manual ui tests.\r\n\r\n##[1.0.4] - 2019-08-05\r\n- Adding test suite and initial test cases\r\n\r\n##[1.0.3] - 2019-08-05\r\n- Building before a pull request\r\n\r\n##[1.0.2] - 2019-08-02\r\n- Fixes [Issue #4](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/4/testappassemblervi-should-not-be-in-the)\r\n- Changed scoping of static methods from private to public\r\n\r\n##[1.0.1] - 2019-08-02\r\n- Fixes [Issue #3](https://bitbucket.org/composedsystems/composed-file-explorer-extension/issues/3/we-need-an-accessor-for-folder-exclusion)\r\n- Removed Beta Tag\r\n- Updated Readme\r\n\r\n##[1.0.0] - 2019-08-01\r\n- First official release\r\n\r\n##[0.0.2] - 2019-08-01\r\n- Built up a test application for exercising the view\r\n- Starting to implement UX features\r\n\r\n##[0.0.1] - 2019-07-31\r\n- Initial commit', '@cs/mva-viewable (^0.1.1)'),
(219, 66, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/addq_lib_gsharp/addq_lib_gsharp-2.0.0.2.vip', 'VIPM', '2.0.0.2', '2020-06-21 11:32:56', 'New features:\n\n* Recompiled to LV2020.\n* Added support for native interfaces to G# called IG#.\n* Removed Debug Server.\n* Removed old obsolete G#Interface templates.\n\nBug fixes:\n* If a library has separated compiled code in the library settings, this will override the environment settings.\n* Clone method to new class inside lvlib not always working.\n', NULL),
(220, 67, 'https://gitlab.com/mgi/gpm/Package-Parser', 'GPM', '0.1.0', '2018-09-06 15:13:02', '### 0.1.0\r\n\r\nInitial Release', '@mgi/json (^0.1.0),@mgi/semver (^0.1.0)'),
(221, 67, 'https://gitlab.com/mgi/gpm/Package-Parser', 'GPM', '0.1.1', '2018-11-15 21:21:43', '### 0.1.1\r\n\r\nAdded Dev Dependencies\r\n\r\n### 0.1.0\r\n\r\nInitial Release', '@mgi/json (^0.1.5),@mgi/semver (^0.1.0)'),
(222, 68, 'https://gitlab.com/mgi/gpm-packages/hash', 'GPM', '0.1.0', '2018-09-05 00:37:16', '## 0.1.0\r\n\r\nInitial Release', NULL),
(223, 68, 'https://gitlab.com/mgi/gpm-packages/hash', 'GPM', '0.1.1', '2018-11-21 23:39:36', '## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release', NULL),
(224, 69, '', 'GPM', '0.1.0', '2018-09-12 19:35:03', '# 0.1.0\r\n\r\nInitial Release', NULL),
(225, 70, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/hooovahh_array_vims/hooovahh_array_vims-1.1.0.8.vip', 'VIPM', '1.1.0.8', '2020-06-24 16:39:43', '1.1.0.8\n- Added Build Horizontally, Convert 1D to 2D and 2D to 1D, Find Subarray, Force Array Min Max size, and Foreign Key Sort VIMs.\n- Moved OpenG VIMs to their own subpalette, not sure if this is the right design but one palette is getting too cluttered.\n\n1.0.0.6\n- Initial release with 14 VIMs.  Some minor improements over the standard OpenG functions for things like Delete Elements From Array has an optional input to use the indicies if they are already sorted, and Filter 1D array to only filter the first found element.', 'oglib_string>=4.1.0.12'),
(226, 70, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/hooovahh_array_vims/hooovahh_array_vims-1.2.0.9.vip', 'VIPM', '1.2.0.9', '2020-06-24 16:41:19', '1.2.0.9\n- Updated Conditional Auto-Indexing to use LabVIEW\'s native conditional tunnels\n- Added Conditional Trues and Falses which returns an array of fales and trues similar to Conditional Auto-Indexing\n\n1.1.0.8\n- Added Build Horizontally, Convert 1D to 2D and 2D to 1D, Find Subarray, Force Array Min Max size, and Foreign Key Sort VIMs.\n- Moved OpenG VIMs to their own subpalette, not sure if this is the right design but one palette is getting too cluttered.\n\n1.0.0.6\n- Initial release with 14 VIMs.  Some minor improements over the standard OpenG functions for things like Delete Elements From Array has an optional input to use the indicies if they are already sorted, and Filter 1D array to only filter the first found element.', 'oglib_string>=4.1.0.12'),
(227, 70, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/hooovahh_array_vims/hooovahh_array_vims-1.2.0.12.vip', 'VIPM', '1.2.0.12', '2020-06-25 16:49:26', '1.2.0.12\n- Updated Conditional Auto-Indexing to use LabVIEW\'s native conditional tunnels\n- Added Conditional Trues and Falses which returns an array of fales and trues similar to Conditional Auto-Indexing\n\n1.1.0.8\n- Added Build Horizontally, Convert 1D to 2D and 2D to 1D, Find Subarray, Force Array Min Max size, and Foreign Key Sort VIMs.\n- Moved OpenG VIMs to their own subpalette, not sure if this is the right design but one palette is getting too cluttered.\n\n1.0.0.6\n- Initial release with 14 VIMs.  Some minor improements over the standard OpenG functions for things like Delete Elements From Array has an optional input to use the indicies if they are already sorted, and Filter 1D array to only filter the first found element.', 'oglib_string>=4.1.0.12'),
(228, 71, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/hooovahh_tremendous_tdms/hooovahh_tremendous_tdms-1.0.0.4.vip', 'VIPM', '1.0.0.4', '2020-06-25 16:49:59', 'Initial Release\n- Classes for Circular, Periodic, Size, and Time of Day TDMS generation with examples of each\n- Reading and Writing Clusters into TDMS\n- XLSX Conversion example\n- File operations for combining files, renaming, moving, saving in memory to zip\n- Basic function for splitting TDMS file into segments\n- Reorder TDMS Channel with Demo\n\n', 'oglib_file>=4.0.1.22,hooovahh_array_vims>=1.2.0.9'),
(229, 72, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/hse_lib_hse_layout_manager/hse_lib_hse_layout_manager-1.2.0.3.vip', 'VIPM', '1.2.0.3', '2020-09-16 15:12:42', 'provide VI Package for easier reuse', NULL),
(230, 73, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/hse_lib_hse_logger/hse_lib_hse_logger-2.0.1.1.vip', 'VIPM', '2.0.1.1', '2020-09-15 20:23:55', 'New in version 2.0\r\n=============\r\n\r\n  * All functions are accessible in the functions palette (Hampel Software Engineering>>HSE-Logger).\r\n  * The API is streamlined and follows the common conventions for LVOOP.\r\n  * With the improved API it\'s easier to develope own subclasses.\r\n  * All classes have getter/setter-methods accessible via property nodes.\r\n  * Re-organised the unit tests to use them with the HSE Release-Automation-Tools (RAT).\r\n  * Fixed a bunch of minor bugs and inconsistencies.\n\n\nFixes in version 2.0.1\n\r==============\n\n  * Fixes a bug in Log.vi that prevented state changes in the handler object(s).\n\n  \r\nIncompatible API-changes\r\n================\r\n\r\nCompared to versions < 2.0.0 the methods for creating an object have changed.\r\nIt\'s very likely that your project will have a broken run arrow after updating\r\nto version 2.0.0. In the common use case this affects only the creation of `Handler` objects \r\nwhen initializing the HSE-Logger. For more information see the examples.', NULL),
(231, 73, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/hse_lib_hse_logger/hse_lib_hse_logger-2.0.3.2.vip', 'VIPM', '2.0.3.2', '2020-09-22 12:04:35', 'Changes/Fixes\n\r==============\n\n*  The logger-VIs for DEBUG, INFO and WARNING do return an error caused by the logger first. An error on the \"error in\" terminal will be discarded in this (rare) case. \n* The \"FileHandler\" does not flush every \"Write to File\" call. This improves the write performance.', NULL),
(232, 74, 'https://gitlab.com/mgi/gpm-packages/ide-interface.git', 'GPM', '0.1.0', '2019-06-19 15:22:46', '## 0.1.0\r\n\r\nInitial Release.\r\n', NULL),
(233, 75, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_design_palette/jki_design_palette-1.0.0.155.vip', 'VIPM', '1.0.0.155', '2019-08-08 03:44:37', 'First public release!', 'jki_flat_ui_controls_2_0>=2.0'),
(234, 75, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_design_palette/jki_design_palette-1.0.1.176.vip', 'VIPM', '1.0.1.176', '2019-08-14 03:17:33', 'First bugfix release!\n- 64-bit LabVIEW support\n- Off-line Activation support\n- No error dialog(s) when checking for updates (and no network connection)\n- Controls now reposition live while the window is resized with the mouse (instead of only after resize is complete).\n- Feedback and Activation Dialog improvements\n- Ctrl+P to replace selected FP control (similar to Ctrl+P QuickDrop Shortcut)\n- Design Palette now closes itself when no VIs are open (even when pinned)\n- Resolved issues where palette would open whenever a LV Project is opened', 'jki_flat_ui_controls_2_0>=2.0'),
(235, 75, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_design_palette/jki_design_palette-1.0.2.184.vip', 'VIPM', '1.0.2.184', '2019-08-22 10:52:41', 'New bugfix release!\n- Reorganized navbar for better usability\n- Close Window button for easier window close\n- Added \"Information\" (i) dialog with tips and other navigation items\n- TipStrip visible when hovering over controls in the Design Palette show name and search tags\n- Resizing window will keep topmost visible control in same relative position after resize (previously scroll position was reset)\n- Now you can launch JKI Design Palette from the right-click menu of Front Panel items (controls, indicators, decorations, etc.)\n-  Hot keys for Quick Drop mode (e.g. Ctrl-Shift-Space) now work with right side keys (previously only left side keys worked) \n- Added support for Clusters and Arrays with no elements (previously required a dummy element)', 'jki_flat_ui_controls_2_0>=2.0'),
(236, 75, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_design_palette/jki_design_palette-1.0.3.186.vip', 'VIPM', '1.0.3.186', '2019-08-28 20:49:16', 'New bugfix release!\n- Now displays number of \'unread tips\' on the information button and a New Tip! indicator above the image for new tips, so that users will know whether they\'ve read all the new tips.\n- Added System Array controls to System Theme (one with Spin Control for increment/decrement index and one without)\n- Fixed color of System Cluster label colors to adapts to FP background color (like a System Label) and moved location over the cluster frame.', 'jki_flat_ui_controls_2_0>=2.0'),
(237, 75, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_design_palette/jki_design_palette-1.0.4.192.vip', 'VIPM', '1.0.4.192', '2019-09-05 20:32:41', 'New bugfix release!\n- Double-clicking search string does a Select All\n- Name of the selected/hovered control is displayed at the top of the Design Palette\n- Improved refresh of palette when installing and uninstalling themes\n- Minor cosmetic improvements to the selected control red frame (grey when tabbing, red when selected for drop)\n- Improved drop of selected control (can now click to drop, in addition to drag and drop)', 'jki_flat_ui_controls_2_0>=2.0.1.28'),
(238, 75, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_design_palette/jki_design_palette-1.0.4.193.vip', 'VIPM', '1.0.4.193', '2019-09-06 12:36:47', 'New bugfix release!\n- Double-clicking search string does a Select All\n- Name of the selected/hovered control is displayed at the top of the Design Palette\n- Improved refresh of palette when installing and uninstalling themes\n- Minor cosmetic improvements to the selected control red frame (grey when tabbing, red when selected for drop)\n- Improved drop of selected control (can now click to drop, in addition to drag and drop)', 'jki_flat_ui_controls_2_0>=2.0.1.28'),
(239, 75, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_design_palette/jki_design_palette-1.0.5.196.vip', 'VIPM', '1.0.5.196', '2020-05-20 22:09:52', '- Support for LabVIEW 2020!\n- Now displays software version number on the Information dialog on a check for upates button\n- Improved display of tip articles (when new/unread articles, was showing older articles first)', 'jki_flat_ui_controls_2_0>=2.0.1.28'),
(240, 76, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_flat_ui_controls_2_0/jki_flat_ui_controls_2_0-2.0.0.24.vip', 'VIPM', '2.0.0.24', '2019-08-08 03:52:51', 'First public release of Flat UI Controls 2.0!', 'jki_design_palette>=1.0'),
(241, 76, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_flat_ui_controls_2_0/jki_flat_ui_controls_2_0-2.0.1.28.vip', 'VIPM', '2.0.1.28', '2019-09-05 20:35:08', 'Maintenance release of the Flat UI Controls 2.0!\n\n== New Controls ==\n- Text Only Button (“Blank” Button with no Icon -- just text)\n- File Open Button (120x40 button with File Icon and \"Open\" text)\n- File Path Control with folder icon for browse button (in addition to one with a plus “+” icon)\n- Borderless Cluster (with very small border/edge, which is nice for making arrays of items where extra visual space between elements is not desired)\n- System Cluster (uses a system recessed frame as cluster border)\n- System Array (uses a system recessed frame as the array border and a system numeric as the index display)\n- VISA Resource (looks similar to the existing Flat UI Controls 2.0 Combo Box)\n\n== Functional Improvements ==\n- Mechanical actions of all buttons set to “Latch When Released” (since it tends to be the most commonly used)\n- String control is now resizable (Removed extra string controls)\n- Numeric control is now resizeable (removed extra string controls)\n\n== Cosmetic Improvements ==\n- Fixed text size and font of combo box control’s display and drop-down list\n- Improved drop shadows of buttons (it’s a little sharper looking now)\n- Set all label colors to be consistent across the theme (122,122,127)\n- Fixed inconsistencies in font size in various controls\n\n== Search Improvements ==\n- Added some some tags to controls for improved searchability\n- Added “Flat” tag to all Flat UI Controls\n- Added “button” tag to all buttons\n- Fixed typo on “Transparent Boolean” control\n', 'jki_design_palette>=1.0.4.193'),
(242, 77, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_rest_client/jki_lib_rest_client-1.0.0.5.vip', 'VIPM', '1.0.0.5', '2016-12-08 20:01:57', 'Initial Release', NULL),
(243, 77, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_rest_client/jki_lib_rest_client-1.0.1.6.vip', 'VIPM', '1.0.1.6', '2017-01-02 14:39:35', 'Added support for not encoding URLs', NULL),
(244, 77, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_rest_client/jki_lib_rest_client-1.1.0.7.vip', 'VIPM', '1.1.0.7', '2017-01-03 15:21:14', 'Converted response headers into a class object', NULL),
(245, 77, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_rest_client/jki_lib_rest_client-1.1.1.8.vip', 'VIPM', '1.1.1.8', '2017-01-04 03:19:03', '- Added accessor methods. \n- Flush client handle queue when accessors are being written.', NULL),
(246, 77, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_rest_client/jki_lib_rest_client-1.2.0.11.vip', 'VIPM', '1.2.0.11', '2017-04-10 13:17:55', 'Updated documentation', NULL),
(247, 77, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_rest_client/jki_lib_rest_client-1.2.1.12.vip', 'VIPM', '1.2.1.12', '2017-05-04 19:07:43', 'Updated documentation.', NULL),
(248, 77, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_rest_client/jki_lib_rest_client-1.3.0.13.vip', 'VIPM', '1.3.0.13', '2018-07-03 12:06:15', '- [NEW] HTTP Multipart POST support: https://github.com/JKISoftware/JKI-REST-Client/issues/5\n- [FIX] HTTP GET leaks memory when URL can\'t be reached: https://github.com/JKISoftware/JKI-REST-Client/issues/6', NULL),
(249, 77, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_rest_client/jki_lib_rest_client-1.3.1.18.vip', 'VIPM', '1.3.1.18', '2019-02-07 17:39:16', '- [FIX #8] Remove \"Resolve Resource.vi\" from disk (it\'s an old VI that\'s not used): https://github.com/JKISoftware/JKI-REST-Client/issues/8\n- [New #9] Improve QuickDrop by adding \"(REST)\" suffix to pallet items of the REST Client API VIs: https://github.com/JKISoftware/JKI-REST-Client/issues/9', NULL),
(250, 77, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_rest_client/jki_lib_rest_client-1.3.2.21.vip', 'VIPM', '1.3.2.21', '2019-02-18 16:00:25', '- [NEW #5] HTTP Multipart POST support https://github.com/JKISoftware/JKI-REST-Client/issues/5\n- [FIX #6] HTTP GET leaks memory when URL can\'t be reached https://github.com/JKISoftware/JKI-REST-Client/issues/6\n- [FIX #8] Remove \"Resolve Resource.vi\" from disk (it\'s an old VI that\'s not used) https://github.com/JKISoftware/JKI-REST-Client/issues/8\n- [New #9] Improve QuickDrop by adding \"(REST)\" suffix to pallet items of the REST Client API VIs https://github.com/JKISoftware/JKI-REST-Client/issues/9\n- [NEW #11] Allow passing a Timeout value to HTTP methods (to override object\'s default timeout) https://github.com/JKISoftware/JKI-REST-Client/issues/11', NULL),
(251, 77, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_rest_client/jki_lib_rest_client-1.3.3.25.vip', 'VIPM', '1.3.3.25', '2020-05-19 17:17:36', '[FIX: 13] [HTTP DELETE.vi] Timeout required input not wired into subVI - https://github.com/JKISoftware/JKI-HTTP-REST-Client/issues/13\n[FIX: 14] [HTTP Request.vi] wrong timeout passed to LV HTTP request  - https://github.com/JKISoftware/JKI-HTTP-REST-Client/issues/14\n\nRelease Contributors\n@francois-normandin @kosist @carlodri @KShireyNTG @jimkring', NULL),
(252, 78, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.0.0.16.vip', 'VIPM', '1.0.0.16', '2016-08-03 11:10:28', 'Relink to latest JKI Unicode library with namespace change', 'oglib_error>=4.2.0.23,oglib_lvdata>=4.2.0.21,jki_lib_serialization>=1.0.0.13,jki_lib_unicode>=1.0.0.7'),
(253, 78, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.0.1.17.vip', 'VIPM', '1.0.1.17', '2016-08-03 18:07:13', 'Added support for flattening enums to strings and back to enums', 'oglib_error>=4.2.0.23,oglib_lvdata>=4.2.0.21,jki_lib_serialization>=1.0.0.13,jki_lib_unicode>=1.0.0.7'),
(254, 78, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.0.1.18.vip', 'VIPM', '1.0.1.18', '2016-08-03 19:30:08', 'Added support for flattening enums to strings and back to enums - hotfix for missing quotes', 'oglib_error>=4.2.0.23,oglib_lvdata>=4.2.0.21,jki_lib_serialization>=1.0.0.13,jki_lib_unicode>=1.0.0.7'),
(255, 78, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.0.2.19.vip', 'VIPM', '1.0.2.19', '2016-08-24 00:29:50', 'Fixed an issue where empty object inside an object wasn\'t deserialized correctly', 'oglib_error>=4.2.0.23,oglib_lvdata>=4.2.0.21,jki_lib_serialization>=1.0.0.13,jki_lib_unicode>=1.0.0.7'),
(256, 78, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.0.3.20.vip', 'VIPM', '1.0.3.20', '2016-08-26 11:39:47', 'Added support for path serialization and deserialization', 'oglib_error>=4.2.0.23,oglib_lvdata>=4.2.0.21,jki_lib_serialization>=1.0.0.13,jki_lib_unicode>=1.0.0.7'),
(257, 78, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.0.4.21.vip', 'VIPM', '1.0.4.21', '2016-08-26 13:30:58', 'Made Adapt to Type method public in the Deserializer class', 'oglib_error>=4.2.0.23,oglib_lvdata>=4.2.0.21,jki_lib_serialization>=1.0.0.13,jki_lib_unicode>=1.0.0.7'),
(258, 78, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.0.5.22.vip', 'VIPM', '1.0.5.22', '2016-08-31 18:45:24', 'Chnaged how null values are being supported.', 'oglib_error>=4.2.0.23,oglib_lvdata>=4.2.0.21,jki_lib_serialization>=1.0.0.13,jki_lib_unicode>=1.0.0.7'),
(259, 78, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.0.6.23.vip', 'VIPM', '1.0.6.23', '2016-08-31 22:13:11', 'Added support for multidimensional arrays', 'oglib_error>=4.2.0.23,oglib_lvdata>=4.2.0.21,jki_lib_serialization>=1.0.0.13,jki_lib_unicode>=1.0.0.7'),
(260, 78, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.0.7.24.vip', 'VIPM', '1.0.7.24', '2016-09-01 00:56:52', 'Change how variable sized multidimensional arrays are deserialized', 'oglib_error>=4.2.0.23,oglib_lvdata>=4.2.0.21,jki_lib_serialization>=1.0.0.13,jki_lib_unicode>=1.0.0.7'),
(261, 78, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.1.0.25.vip', 'VIPM', '1.1.0.25', '2016-09-01 02:21:59', 'Change how NaN is treated. Disabled numeric extensions by default.', 'oglib_error>=4.2.0.23,oglib_lvdata>=4.2.0.21,jki_lib_serialization>=1.0.0.13,jki_lib_unicode>=1.0.0.7'),
(262, 78, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.1.1.26.vip', 'VIPM', '1.1.1.26', '2016-09-01 20:12:16', 'Changed how null is deserialized.', 'oglib_error>=4.2.0.23,oglib_lvdata>=4.2.0.21,jki_lib_serialization>=1.0.0.13,jki_lib_unicode>=1.0.0.7'),
(263, 78, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.1.2.27.vip', 'VIPM', '1.1.2.27', '2016-09-01 20:52:50', 'Added Is Null VI to the library.', 'oglib_error>=4.2.0.23,oglib_lvdata>=4.2.0.21,jki_lib_serialization>=1.0.0.13,jki_lib_unicode>=1.0.0.7'),
(264, 78, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.1.3.28.vip', 'VIPM', '1.1.3.28', '2016-09-02 00:55:26', 'Added support for empty objects separate from null values', 'oglib_error>=4.2.0.23,oglib_lvdata>=4.2.0.21,jki_lib_serialization>=1.0.0.13,jki_lib_unicode>=1.0.0.7'),
(265, 78, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.1.4.29.vip', 'VIPM', '1.1.4.29', '2016-09-02 21:06:37', 'Added Adapt to Type top level VI to the library.', 'oglib_error>=4.2.0.23,oglib_lvdata>=4.2.0.21,jki_lib_serialization>=1.0.0.13,jki_lib_unicode>=1.0.0.7'),
(266, 78, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.1.5.30.vip', 'VIPM', '1.1.5.30', '2016-09-02 22:04:10', 'Added config file example', 'oglib_error>=4.2.0.23,oglib_lvdata>=4.2.0.21,jki_lib_serialization>=1.0.0.13,jki_lib_unicode>=1.0.0.7'),
(267, 78, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.1.7.33.vip', 'VIPM', '1.1.7.33', '2016-11-08 17:47:35', 'Fixed an issue where timestamps without fractional component generated an error ', 'jki_lib_unicode>=1.0.0.7,oglib_error>=4.2.0.23,oglib_lvdata>=4.2.0.21,jki_lib_serialization>=1.0.1.14'),
(268, 78, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.1.9.35.vip', 'VIPM', '1.1.9.35', '2016-11-08 19:34:13', 'Rebuild to resolve an issue where a VI is broken due to a problem in compiled code.', 'jki_lib_unicode>=1.0.0.7,oglib_error>=4.2.0.23,oglib_lvdata>=4.2.0.21,jki_lib_serialization>=1.0.1.14'),
(269, 78, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_json_serialization/jki_lib_json_serialization-1.1.10.37.vip', 'VIPM', '1.1.10.37', '2017-02-24 19:31:29', 'Made Adapt To Type dynamic dispatch to allow decedent classes to override', 'jki_lib_unicode>=1.0.0.7,oglib_error>=4.2.0.23,oglib_lvdata>=4.2.0.21,jki_lib_serialization>=1.0.1.14'),
(270, 79, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_magic_delay_fairy/jki_magic_delay_fairy-1.0.0.11.vip', 'VIPM', '1.0.0.11', '2015-04-01 02:31:49', '', 'oglib_time>=4.0.0.2'),
(271, 80, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_serialization/jki_lib_serialization-1.0.0.13.vip', 'VIPM', '1.0.0.13', '2016-08-03 11:11:55', 'Saved for LabVIEW 2009', NULL),
(272, 80, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_serialization/jki_lib_serialization-1.0.1.14.vip', 'VIPM', '1.0.1.14', '2016-08-03 18:28:47', 'Updated the palette', NULL),
(273, 81, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_smo_editor/jki_lib_smo_editor-1.0.0.9.vip', 'VIPM', '1.0.0.9', '2015-12-20 00:12:49', '1.0.0: Initial release of the JKI State Machine Objects Editor Tools.\n- This version provides a utility VI in Tools menu to create a new SMO from template and rename its components. ', 'jki_lib_state_machine>=2.0.0,oglib_array>=4.1.1.14,oglib_error>=4.2.0.23,oglib_file>=4.0.1.22,oglib_lvdata>=4.2.0.21,oglib_string>=4.1.0.12,oglib_variantconfig>=4.0.0.5,jki_statemachineobjects>=1.0.0.3'),
(274, 81, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_smo_editor/jki_lib_smo_editor-1.0.0.10.vip', 'VIPM', '1.0.0.10', '2016-01-22 21:54:44', '- Templates are now found dynamically from the \"<LabVIEW>/templates/JKI/JKI SMO\" directory.', 'jki_lib_state_machine>=2.0.0,oglib_array>=4.1.1.14,oglib_error>=4.2.0.23,oglib_file>=4.0.1.22,oglib_lvdata>=4.2.0.21,oglib_string>=4.1.0.12,oglib_variantconfig>=4.0.0.5,jki_smo_templates>=1.0.0.3,jki_statemachineobjects>=1.0.0.5'),
(275, 81, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_smo_editor/jki_lib_smo_editor-1.0.0.11.vip', 'VIPM', '1.0.0.11', '2016-01-27 21:21:23', '- Fixed minor problem when loading templates the first time.', 'jki_lib_state_machine>=2.0.0,oglib_array>=4.1.1.14,oglib_error>=4.2.0.23,oglib_file>=4.0.1.22,oglib_lvdata>=4.2.0.21,oglib_string>=4.1.0.12,oglib_variantconfig>=4.0.0.5,jki_smo_templates>=1.0.0.3,jki_statemachineobjects>=1.0.0.5'),
(276, 81, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_smo_editor/jki_lib_smo_editor-2.0.0.2.vip', 'VIPM', '2.0.0.2', '2016-03-07 16:17:07', '- Fixed error when creating a class with white spaces in the name', 'jki_lib_state_machine>=2.0.0,oglib_array>=4.1.1.14,oglib_error>=4.2.0.23,oglib_file>=4.0.1.22,oglib_lvdata>=4.2.0.21,oglib_string>=4.1.0.12,oglib_variantconfig>=4.0.0.5,jki_smo_templates>=1.0.0.5,jki_statemachineobjects>=1.0.0.11'),
(277, 81, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_smo_editor/jki_lib_smo_editor-2.0.1.4.vip', 'VIPM', '2.0.1.4', '2016-04-27 12:59:07', '- Changed Public Method to use Private Events to message Process.\n- Event can now be empty (boolean placeholder)\n- Event that contains only one control will not wrap into a cluster', 'jki_lib_state_machine>=2.0.0,oglib_array>=4.1.1.14,oglib_error>=4.2.0.23,oglib_file>=4.0.1.22,oglib_lvdata>=4.2.0.21,oglib_string>=4.1.0.12,oglib_variantconfig>=4.0.0.5,jki_smo_templates>=1.0.0.5,jki_statemachineobjects>=1.0.0.11'),
(278, 81, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_smo_editor/jki_lib_smo_editor-2.0.2.5.vip', 'VIPM', '2.0.2.5', '2019-04-25 19:43:58', '- Performance improvement of Editor startup time (getting template descriptions was slow)\n- On New SMO screen, limited SMO Name to single line, so that it doesn\'t accept an EOL', 'jki_lib_state_machine>=2.0.0,oglib_array>=4.1.1.14,oglib_error>=4.2.0.23,oglib_file>=4.0.1.22,oglib_lvdata>=4.2.0.21,oglib_string>=4.1.0.12,oglib_variantconfig>=4.0.0.5,jki_smo_templates>=1.0.0.5,jki_statemachineobjects>=1.0.0.11'),
(279, 82, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_templates/jki_smo_templates-1.0.0.3.vip', 'VIPM', '1.0.0.3', '2016-01-22 21:51:38', '- Updated Splash Icon', 'jki_statemachineobjects>=1.0.0.5'),
(280, 82, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_templates/jki_smo_templates-1.0.0.4.vip', 'VIPM', '1.0.0.4', '2016-02-26 20:21:48', 'Updated class descriptions.', 'jki_statemachineobjects>=1.0.0.5'),
(281, 82, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_templates/jki_smo_templates-1.0.0.5.vip', 'VIPM', '1.0.0.5', '2016-02-26 21:53:08', '- Updated descriptions and class settings.', 'jki_statemachineobjects>=1.0.0.11'),
(282, 82, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_templates/jki_smo_templates-1.0.0.7.vip', 'VIPM', '1.0.0.7', '2016-03-07 21:22:49', '- Updated descriptions and class settings.', 'jki_statemachineobjects>=1.0.0.11'),
(283, 82, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_templates/jki_smo_templates-1.0.2.11.vip', 'VIPM', '1.0.2.11', '2016-04-15 20:04:42', '- Updated base templates with new event public registration', 'jki_lib_state_machine>=2.0.0,jki_statemachineobjects>=1.0.4.18'),
(284, 82, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_templates/jki_smo_templates-1.4.0.13.vip', 'VIPM', '1.4.0.13', '2016-07-13 19:18:49', '- Added a SMO.Instrument template for management of Dependencies at RunTime\n- Needs SMO Base 1.4.0 or newer', 'jki_lib_state_machine>=2.0.0,jki_statemachineobjects>=1.1.4.28'),
(285, 82, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_templates/jki_smo_templates-1.4.0.14.vip', 'VIPM', '1.4.0.14', '2016-07-18 18:16:21', '- Update the look of the Splash template', 'jki_lib_state_machine>=2.0.0,jki_statemachineobjects>=1.1.4.28'),
(286, 82, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_templates/jki_smo_templates-1.4.0.15.vip', 'VIPM', '1.4.0.15', '2016-08-04 15:24:01', '- Fixed an issue with UI templates not closing on Stop Command in Test Launcher VI', 'jki_lib_state_machine>=2.0.0,jki_statemachineobjects>=1.1.6.30'),
(287, 83, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_daqmx_templates/jki_smo_daqmx_templates-1.0.0.1.vip', 'VIPM', '1.0.0.1', '2016-09-11 23:27:15', 'Initial package for DAQmx templates', 'jki_statemachineobjects>=1.1.8.32'),
(288, 83, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_daqmx_templates/jki_smo_daqmx_templates-1.1.0.2.vip', 'VIPM', '1.1.0.2', '2016-09-25 00:43:21', 'Added TDMS Logging support', 'jki_statemachineobjects>=1.1.8.32'),
(289, 84, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_templates_graph/jki_smo_templates_graph-1.0.0.8.vip', 'VIPM', '1.0.0.8', '2016-03-07 16:20:52', 'Initial release: SMO.UI.Chart', 'jki_lib_state_machine>=2.0.0,jki_statemachineobjects>=1.0.1.12'),
(290, 84, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_templates_graph/jki_smo_templates_graph-1.0.0.9.vip', 'VIPM', '1.0.0.9', '2016-04-15 20:05:16', 'Initial release: SMO.UI.Chart', 'jki_lib_state_machine>=2.0.0,jki_statemachineobjects>=1.0.4.18'),
(291, 84, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_templates_graph/jki_smo_templates_graph-1.1.0.11.vip', 'VIPM', '1.1.0.11', '2016-07-19 00:44:39', 'Backsaved Chart process to 2013.', 'jki_lib_state_machine>=2.0.0,jki_statemachineobjects>=1.0.4.18'),
(292, 85, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_timedloop_templates/jki_smo_timedloop_templates-1.0.0.1.vip', 'VIPM', '1.0.0.1', '2016-08-04 15:30:13', 'Added the timed loop template.', 'jki_statemachineobjects>=1.1.6.30'),
(293, 85, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_timedloop_templates/jki_smo_timedloop_templates-1.0.0.2.vip', 'VIPM', '1.0.0.2', '2016-08-09 19:09:45', 'Added comments to the Process.vi and description to the class.', 'jki_statemachineobjects>=1.1.6.30'),
(294, 86, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_ui_templates/jki_smo_ui_templates-1.0.0.1.vip', 'VIPM', '1.0.0.1', '2016-07-20 21:27:16', 'Added the SMO.UI_Embed template', 'jki_lib_state_machine>=2.0.0,jki_statemachineobjects>=1.1.5.29'),
(295, 86, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_ui_templates/jki_smo_ui_templates-1.0.0.2.vip', 'VIPM', '1.0.0.2', '2016-07-21 18:47:33', 'Added description to the UI_Embed template.', 'jki_lib_state_machine>=2.0.0,jki_statemachineobjects>=1.1.5.29'),
(296, 86, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_smo_ui_templates/jki_smo_ui_templates-1.0.0.3.vip', 'VIPM', '1.0.0.3', '2016-08-22 14:47:41', 'Fixed issues with the DVR to Ref and Ref to DVR methods were not named correctly.', 'jki_lib_state_machine>=2.0.0,jki_statemachineobjects>=1.1.5.29'),
(297, 87, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_state_machine/jki_lib_state_machine-3.0.0.8.vip', 'VIPM', '3.0.0.8', '2015-03-27 19:36:18', '- Built in LabVIEW 2013\n- Added \"Event Structure\" to the \"Idle?\" (\"\") Case Structure frame\n- Cleaned up floating labels used for documentation', 'jki_rsc_toolkits_palette>=1.1'),
(298, 87, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_state_machine/jki_lib_state_machine-2018.0.0.35.vip', 'VIPM', '2018.0.0.35', '2018-11-20 21:41:24', '- Now includes the JKI State Machine Editor (JKI SM Explorer window and LabVIEW right-click menu integration)\n- Changed While Loop Label to JKI State Machine (2018)\n- New Icons and Color Scheme, designed for the future!\n- Major performance improvements to Support VIs (\"Parse State Queue\", \"Add State(s) to Queue\", and \"Build State String with Arguments\")\n- Support VIs are now configured for \"Inline SubVIs into Calling VIs\" and \"Subroutine\" priority to reduce memory footprint and execution time\n- Replaced deprecated FP.Open property with FP.State\n- Added new arguments to \"UI: Front Panel State\" (Open, Standard, Close, Closed, Hidden, Hide, Maximize, Maximized, Minimize, Minimized)\n- Special thanks to @mcduff14 and @drjdpowell for their performance improvement ideas and feedback on this thread https://github.com/JKISoftware/JKI-State-Machine/pull/3', 'jki_rsc_toolkits_palette>=1.1'),
(299, 87, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_state_machine/jki_lib_state_machine-2018.0.1.36.vip', 'VIPM', '2018.0.1.36', '2018-12-04 00:33:48', '- Now includes the JKI State Machine Editor (JKI SM Explorer window and LabVIEW right-click menu integration)\n- Changed While Loop Label to JKI State Machine (2018)\n- New Icons and Color Scheme, designed for the future!\n- Major performance improvements to Support VIs (\"Parse State Queue\", \"Add State(s) to Queue\", and \"Build State String with Arguments\")\n- Support VIs are now configured for \"Inline SubVIs into Calling VIs\" and \"Subroutine\" priority to reduce memory footprint and execution time\n- Replaced deprecated FP.Open property with FP.State\n- Added new arguments to \"UI: Front Panel State\" (Open, Standard, Close, Closed, Hidden, Hide, Maximize, Maximized, Minimize, Minimized)\n- Special thanks to @mcduff14 and @drjdpowell for their performance improvement ideas and feedback on this thread https://github.com/JKISoftware/JKI-State-Machine/pull/3\n\nFixes\n- Fixed Issue #9 (JKI SM Explorer VI keeps running when target VI FP is closed)', 'jki_rsc_toolkits_palette>=1.1'),
(300, 87, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_state_machine/jki_lib_state_machine-2018.0.2.37.vip', 'VIPM', '2018.0.2.37', '2018-12-04 20:26:58', '- Now includes the JKI State Machine Editor (JKI SM Explorer window and LabVIEW right-click menu integration)\n- Changed While Loop Label to JKI State Machine (2018)\n- New Icons and Color Scheme, designed for the future!\n- Major performance improvements to Support VIs (\"Parse State Queue\", \"Add State(s) to Queue\", and \"Build State String with Arguments\")\n- Support VIs are now configured for \"Inline SubVIs into Calling VIs\" and \"Subroutine\" priority to reduce memory footprint and execution time\n- Replaced deprecated FP.Open property with FP.State\n- Added new arguments to \"UI: Front Panel State\" (Open, Standard, Close, Closed, Hidden, Hide, Maximize, Maximized, Minimize, Minimized)\n- Special thanks to @mcduff14 and @drjdpowell for their performance improvement ideas and feedback on this thread https://github.com/JKISoftware/JKI-State-Machine/pull/3\n\nFixes\n- Fixed Issue #9 (JKI SM Explorer VI keeps running when target VI FP is closed)\n- Fixed Issue #10 (Editor Plug-ins that call \"Term:Data Type\" (as Variant) need a Request Deallocation to avoid LV crash)', 'jki_rsc_toolkits_palette>=1.1'),
(301, 87, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_state_machine/jki_lib_state_machine-2018.0.3.38.vip', 'VIPM', '2018.0.3.38', '2018-12-05 22:46:55', '- Now includes the JKI State Machine Editor (JKI SM Explorer window and LabVIEW right-click menu integration)\n- Changed While Loop Label to JKI State Machine (2018)\n- New Icons and Color Scheme, designed for the future!\n- Major performance improvements to Support VIs (\"Parse State Queue\", \"Add State(s) to Queue\", and \"Build State String with Arguments\")\n- Support VIs are now configured for \"Inline SubVIs into Calling VIs\" and \"Subroutine\" priority to reduce memory footprint and execution time\n- Replaced deprecated FP.Open property with FP.State\n- Added new arguments to \"UI: Front Panel State\" (Open, Standard, Close, Closed, Hidden, Hide, Maximize, Maximized, Minimize, Minimized)\n- Special thanks to @mcduff14 and @drjdpowell for their performance improvement ideas and feedback on this thread https://github.com/JKISoftware/JKI-State-Machine/pull/3\n\nFixes\n- Fixed Issue #9 (JKI SM Explorer VI keeps running when target VI FP is closed)\n- Fixed Issue #10 (Editor Plug-ins that call \"Term:Data Type\" (as Variant) need a Request Deallocation to avoid LV crash)\n- Fixed Issue with Find Data Accessors not always working well (failing to open and consuming CPU)', 'jki_rsc_toolkits_palette>=1.1'),
(302, 87, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_state_machine/jki_lib_state_machine-2018.0.4.39.vip', 'VIPM', '2018.0.4.39', '2018-12-06 15:42:14', '- Now includes the JKI State Machine Editor (JKI SM Explorer window and LabVIEW right-click menu integration)\n- Changed While Loop Label to JKI State Machine (2018)\n- New Icons and Color Scheme, designed for the future!\n- Major performance improvements to Support VIs (\"Parse State Queue\", \"Add State(s) to Queue\", and \"Build State String with Arguments\")\n- Support VIs are now configured for \"Inline SubVIs into Calling VIs\" and \"Subroutine\" priority to reduce memory footprint and execution time\n- Replaced deprecated FP.Open property with FP.State\n- Added new arguments to \"UI: Front Panel State\" (Open, Standard, Close, Closed, Hidden, Hide, Maximize, Maximized, Minimize, Minimized)\n- Special thanks to @mcduff14 and @drjdpowell for their performance improvement ideas and feedback on this thread https://github.com/JKISoftware/JKI-State-Machine/pull/3\n\nFixes\n- Fixed Issue #9 (JKI SM Explorer VI keeps running when target VI FP is closed)\n- Fixed Issue #10 (Editor Plug-ins that call \"Term:Data Type\" (as Variant) need a Request Deallocation to avoid LV crash)\n- Fixed Issue with Find Data Accessors not always working well (failing to open and consuming CPU)\n- Fkixed issue (SM Editor #79) where SM Explorer window does not disappear occasionally', 'jki_rsc_toolkits_palette>=1.1');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(303, 87, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_state_machine/jki_lib_state_machine-2018.0.5.41.vip', 'VIPM', '2018.0.5.41', '2019-01-14 16:54:54', '- Now includes the JKI State Machine Editor (JKI SM Explorer window and LabVIEW right-click menu integration)\n- Changed While Loop Label to JKI State Machine (2018)\n- New Icons and Color Scheme, designed for the future!\n- Major performance improvements to Support VIs (\"Parse State Queue\", \"Add State(s) to Queue\", and \"Build State String with Arguments\")\n- Support VIs are now configured for \"Inline SubVIs into Calling VIs\" and \"Subroutine\" priority to reduce memory footprint and execution time\n- Replaced deprecated FP.Open property with FP.State\n- Added new arguments to \"UI: Front Panel State\" (Open, Standard, Close, Closed, Hidden, Hide, Maximize, Maximized, Minimize, Minimized)\n- Special thanks to @mcduff14 and @drjdpowell for their performance improvement ideas and feedback on this thread https://github.com/JKISoftware/JKI-State-Machine/pull/3\n\nFixes\n- Fixed Issue #9 (JKI SM Explorer VI keeps running when target VI FP is closed)\n- Fixed Issue #10 (Editor Plug-ins that call \"Term:Data Type\" (as Variant) need a Request Deallocation to avoid LV crash)\n- Fixed Issue with Find Data Accessors not always working well (failing to open and consuming CPU)\n- Fixed Issue (SM Editor #79) where SM Explorer window does not disappear occasionally\n- Fixed Issue (SM Editor #86) Can\'t open JKI SM Explorer for multiple JKI SM\'s on same BD', 'jki_rsc_toolkits_palette>=1.1'),
(304, 87, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_state_machine/jki_lib_state_machine-2018.0.6.44.vip', 'VIPM', '2018.0.6.44', '2019-01-21 16:24:33', '- Now includes the JKI State Machine Editor (JKI SM Explorer window and LabVIEW right-click menu integration)\n- Changed While Loop Label to JKI State Machine (2018)\n- New Icons and Color Scheme, designed for the future!\n- Major performance improvements to Support VIs (\"Parse State Queue\", \"Add State(s) to Queue\", and \"Build State String with Arguments\")\n- Support VIs are now configured for \"Inline SubVIs into Calling VIs\" and \"Subroutine\" priority to reduce memory footprint and execution time\n- Replaced deprecated FP.Open property with FP.State\n- Added new arguments to \"UI: Front Panel State\" (Open, Standard, Close, Closed, Hidden, Hide, Maximize, Maximized, Minimize, Minimized)\n- Special thanks to @mcduff14 and @drjdpowell for their performance improvement ideas and feedback on this thread https://github.com/JKISoftware/JKI-State-Machine/pull/3\n\nFixes\n- Fixed Issue #9 (JKI SM Explorer VI keeps running when target VI FP is closed)\n- Fixed Issue #10 (Editor Plug-ins that call \"Term:Data Type\" (as Variant) need a Request Deallocation to avoid LV crash)\n- Fixed Issue with Find Data Accessors not always working well (failing to open and consuming CPU)\n- Fixed Issue (SM Editor #79) where SM Explorer window does not disappear occasionally\n- Fixed Issue (SM Editor #86) Can\'t open JKI SM Explorer for multiple JKI SM\'s on same BD\n- Fixed Issue (SM Editor #89) Find Callers does not work on Idle, Event Structure frame', 'jki_rsc_toolkits_palette>=1.1'),
(305, 87, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_state_machine/jki_lib_state_machine-2018.0.7.45.vip', 'VIPM', '2018.0.7.45', '2019-01-25 17:17:00', '- Now includes the JKI State Machine Editor (JKI SM Explorer window and LabVIEW right-click menu integration)\n- Changed While Loop Label to JKI State Machine (2018)\n- New Icons and Color Scheme, designed for the future!\n- Major performance improvements to Support VIs (\"Parse State Queue\", \"Add State(s) to Queue\", and \"Build State String with Arguments\")\n- Support VIs are now configured for \"Inline SubVIs into Calling VIs\" and \"Subroutine\" priority to reduce memory footprint and execution time\n- Replaced deprecated FP.Open property with FP.State\n- Added new arguments to \"UI: Front Panel State\" (Open, Standard, Close, Closed, Hidden, Hide, Maximize, Maximized, Minimize, Minimized)\n- Special thanks to @mcduff14 and @drjdpowell for their performance improvement ideas and feedback on this thread https://github.com/JKISoftware/JKI-State-Machine/pull/3\n\nFixes\n- Fixed Issue #9 (JKI SM Explorer VI keeps running when target VI FP is closed)\n- Fixed Issue #10 (Editor Plug-ins that call \"Term:Data Type\" (as Variant) need a Request Deallocation to avoid LV crash)\n- Fixed Issue with Find Data Accessors not always working well (failing to open and consuming CPU)\n- Fixed Issue (SM Editor #79) where SM Explorer window does not disappear occasionally\n- Fixed Issue (SM Editor #86) Can\'t open JKI SM Explorer for multiple JKI SM\'s on same BD\n- Fixed Issue (SM Editor #89) Find Callers does not work on Idle, Event Structure frame\n- Fixed Issue #13 Right-click menu item \'Insert \"Add State(s) to Queue\"\' fails', 'jki_rsc_toolkits_palette>=1.1'),
(306, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.0.0.59.vip', 'VIPM', '2013.0.0.59', '2017-05-05 22:23:07', 'Initial public release', 'jki_lib_state_machine>=2.0.0,oglib_appcontrol>=4.1.0.7,oglib_comparison>=4.0.0.3,oglib_string>=4.1.0.12'),
(307, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.0.0.61.vip', 'VIPM', '2013.0.0.61', '2017-05-05 22:39:13', 'Initial public release', 'jki_lib_state_machine>=2.0.0,oglib_appcontrol>=4.1.0.7,oglib_comparison>=4.0.0.3,oglib_string>=4.1.0.12'),
(308, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.0.1.65.vip', 'VIPM', '2013.0.1.65', '2017-05-19 23:17:59', '- Fixed Issue #4: Ctrl+E to toggle between FP and BD of a VI stops working when showing BD\n- Fixed Issue #1: Removed Refresh Tree right-click option', 'jki_lib_state_machine>=2.0.0,oglib_appcontrol>=4.1.0.7,oglib_comparison>=4.0.0.3,oglib_string>=4.1.0.12'),
(309, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.0.2.67.vip', 'VIPM', '2013.0.2.67', '2017-05-24 11:52:36', '- Fixed Issue #5: Missing \"Is Child Path\" VI', 'jki_lib_state_machine>=2.0.0,oglib_appcontrol>=4.1.0.7,oglib_comparison>=4.0.0.3,oglib_string>=4.1.0.12'),
(310, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.0.3.71.vip', 'VIPM', '2013.0.3.71', '2017-05-24 15:19:04', '- Fixed Issue #6: Change right-click item name to \"JKI State Machine Editor...\" (from \"Helper\")', 'jki_lib_state_machine>=2.0.0,oglib_appcontrol>=4.1.0.7,oglib_comparison>=4.0.0.3,oglib_string>=4.1.0.12'),
(311, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.0.5.80.vip', 'VIPM', '2013.0.5.80', '2017-05-26 22:44:55', '- Fixed Issue #8 - No automatic installation of add-ons dependencies along with editor installation.\n- Fixed Issue #10 - Should defer panel updates when refreshing Tree periodically\n- Fixed Issue #12 - F2 for Rename frame should work (only shows \":\" instead of \"Cat: State\")', 'jki_lib_state_machine>=2.0.0'),
(312, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.0.6.89.vip', 'VIPM', '2013.0.6.89', '2017-06-07 10:44:20', '- Fixed Issue - right-click menu on State Strings outside of JKI State Machine would not work properly', 'jki_lib_state_machine>=2.0.0'),
(313, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.0.7.90.vip', 'VIPM', '2013.0.7.90', '2017-06-08 11:41:49', '- Fixed Issue #13 - LabVIEW Memory Full after running the editor for a whole day #13 (thanks @digiajay)', 'jki_lib_state_machine>=2.0.0'),
(314, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.0.8.92.vip', 'VIPM', '2013.0.8.92', '2017-06-09 17:04:23', '- Fixed Issue #15: Delete key doesn\'t work (thanks for reporting this @joerghampel)', 'jki_lib_state_machine>=2.0.0'),
(315, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.1.3.150.vip', 'VIPM', '2013.1.3.150', '2017-08-17 22:42:39', 'New Feature: *Find Callers* of State\r\n- To use, press Ctrl+F in tree view or Right-click on a state in the Tree View, a State String Constant on the BD, or JKI SM Case Structure frame\r\n- In the search results dialog, click a state to highlight the caller state string\r\n- Ctrl+G to step forward through results, Ctrl+Shift+G to step backward through results\r\n\nNew Feature: Renaming a Category renames category prefix of all States in that Category\n\nNew/Improved Feature: Undo Support\n- Now when you use Ctrl+Z and Ctrl+Shift+Z from the Tree View or Find Callers window, it will undo and redo actions in the JKI State Machine being edited.', 'jki_lib_state_machine>=2.0.0,oglib_appcontrol>=4.1.0.7,oglib_array>=4.1.1.14,oglib_comparison>=4.0.0.3,oglib_error>=4.2.0.23,oglib_file>=4.0.1.22,oglib_lvdata>=4.2.0.21,oglib_string>=4.1.0.12,oglib_time>=4.0.0.2'),
(316, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.2.1.159.vip', 'VIPM', '2013.2.1.159', '2017-11-08 01:13:17', 'New Feature: *Search Filter* textbox\r\n- To use, simply type search strings (spaces between each term) and any states that match all terms will be shown (all others filtered out)', 'jki_lib_state_machine>=2.0.0,oglib_appcontrol>=4.1.0.7,oglib_array>=4.1.1.14,oglib_comparison>=4.0.0.3,oglib_error>=4.2.0.23,oglib_file>=4.0.1.22,oglib_lvdata>=4.2.0.21,oglib_string>=4.1.0.12,oglib_time>=4.0.0.2'),
(317, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.3.2.170.vip', 'VIPM', '2013.3.2.170', '2017-12-15 18:35:25', 'New Feature: *Add Dynamic Events*\r\n- To use, right-click anywhere in the Tree View of the JKI State Machine Editor and choose \"Add Dynamic Events\" (Warning: Cannot Undo [ctrl+z] this action).', 'jki_lib_state_machine>=2.0.0,oglib_appcontrol>=4.1.0.7,oglib_array>=4.1.1.14,oglib_comparison>=4.0.0.3,oglib_error>=4.2.0.23,oglib_file>=4.0.1.22,oglib_lvdata>=4.2.0.21,oglib_string>=4.1.0.12,oglib_time>=4.0.0.2'),
(318, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.4.0.186.vip', 'VIPM', '2013.4.0.186', '2018-03-01 20:32:00', 'New Feature: *Find Data Accessors* of App Data Cluster\r\n- To use, right-click on a Bundle by Name or Unbundle by Name inside the JKI State Machine and choose \"Find Data Accessors\".\n- In the search results dialog, click a state to highlight the Bundle by Name or Unbundle by Name that is accessing the data.\n- Ctrl+G to step forward through the results, Ctrl+Shift+G to step backward through the results.\n', NULL),
(319, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.4.1.190.vip', 'VIPM', '2013.4.1.190', '2018-03-02 19:57:29', 'New Feature: *Find Data Accessors* of App Data Cluster\r\n- To use, right-click on a Bundle by Name or Unbundle by Name inside the JKI State Machine and choose \"Find Data Accessors\".\n- In the search results dialog, click a state to highlight the Bundle by Name or Unbundle by Name that is accessing the data.\n- Ctrl+G to step forward through the results, Ctrl+Shift+G to step backward through the results.\n\nBugs Fixed:\n- Added support for In Place Element Cluster (Un)Bundlers\n- Fixed issue where right-click on cluster (un)bundlers not in a JKI SM were showing JKI SM right-click menu', NULL),
(320, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.5.0.211.vip', 'VIPM', '2013.5.0.211', '2018-03-17 04:08:08', 'New Feature: Event Structure frames are now shown beneath the *\"\", \"Idle\"* frame of the Case Structure (sort of like a Category) in same Tree View as Case Structure frames\n- Should just work as you might expect :-)\n\nNew Feature: \"Explore States\" for State String Constant\n- To use, right-click on a State String Constant and choose \"Explore States\".\n- In the resulting dialog, click a state to navigate to that frame, or click on the first element to \"Go Back to...\" the state containing the string constant.\n- Ctrl+G to step forward through the results, Ctrl+Shift+G to step backward through the results.\n\nMinor Tweaks:\n- Renamed right click as JKI State Machine Explorer (instead of Editor)\n- Moved all of the right-click options for a state under a submenu with the state\'s name (for better grouping)', NULL),
(321, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.5.1.215.vip', 'VIPM', '2013.5.1.215', '2018-03-27 18:08:42', 'New Feature: Event Structure frames are now shown beneath the *\"\", \"Idle\"* frame of the Case Structure (sort of like a Category) in same Tree View as Case Structure frames\n- Should just work as you might expect :-)\n\nNew Feature: \"Explore States\" for State String Constant\n- To use, right-click on a State String Constant and choose \"Explore States\".\n- In the resulting dialog, click a state to navigate to that frame, or click on the first element to \"Go Back to...\" the state containing the string constant.\n- Ctrl+G to step forward through the results, Ctrl+Shift+G to step backward through the results.\n\nMinor Tweaks:\n- Renamed right click as JKI State Machine Explorer (instead of Editor)\n- Moved all of the right-click options for a state under a submenu with the state\'s name (for better grouping)\n- Fixed some quick search/filtering bugs\n- Added right-click option JKI SM Explorer tree view to Expand All and Collapse All items', NULL),
(322, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.5.2.217.vip', 'VIPM', '2013.5.2.217', '2018-03-29 16:30:52', 'New Feature: Event Structure frames are now shown beneath the *\"\", \"Idle\"* frame of the Case Structure (sort of like a Category) in same Tree View as Case Structure frames\n- Should just work as you might expect :-)\n\nNew Feature: \"Explore States\" for State String Constant\n- To use, right-click on a State String Constant and choose \"Explore States\".\n- In the resulting dialog, click a state to navigate to that frame, or click on the first element to \"Go Back to...\" the state containing the string constant.\n- Ctrl+G to step forward through the results, Ctrl+Shift+G to step backward through the results.\n\nMinor Tweaks:\n- Renamed right click as JKI State Machine Explorer (instead of Editor)\n- Moved all of the right-click options for a state under a submenu with the state\'s name (for better grouping)\n- Fixed some quick search/filtering bugs\n- Added right-click option JKI SM Explorer tree view to Expand All and Collapse All items\n- Fixed issue where sometimes state strings were not recognised correctly if they were inside or wired through structures', NULL),
(323, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.5.3.218.vip', 'VIPM', '2013.5.3.218', '2018-03-29 19:32:11', 'New Feature: Event Structure frames are now shown beneath the *\"\", \"Idle\"* frame of the Case Structure (sort of like a Category) in same Tree View as Case Structure frames\n- Should just work as you might expect :-)\n\nNew Feature: \"Explore States\" for State String Constant\n- To use, right-click on a State String Constant and choose \"Explore States\".\n- In the resulting dialog, click a state to navigate to that frame, or click on the first element to \"Go Back to...\" the state containing the string constant.\n- Ctrl+G to step forward through the results, Ctrl+Shift+G to step backward through the results.\n\nMinor Tweaks:\n- Renamed right click as JKI State Machine Explorer (instead of Editor)\n- Moved all of the right-click options for a state under a submenu with the state\'s name (for better grouping)\n- Fixed some quick search/filtering bugs\n- Added right-click option JKI SM Explorer tree view to Expand All and Collapse All items\n- Fixed issue where sometimes state strings were not recognised correctly if they were inside or wired through structures\n- Fixed issue where tree fully expands after any edit of JKI SM frame names', NULL),
(324, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.5.4.221.vip', 'VIPM', '2013.5.4.221', '2018-04-09 21:28:58', 'New Feature: Event Structure frames are now shown beneath the *\"\", \"Idle\"* frame of the Case Structure (sort of like a Category) in same Tree View as Case Structure frames\n- Should just work as you might expect :-)\n\nNew Feature: \"Explore States\" for State String Constant\n- To use, right-click on a State String Constant and choose \"Explore States\".\n- In the resulting dialog, click a state to navigate to that frame, or click on the first element to \"Go Back to...\" the state containing the string constant.\n- Ctrl+G to step forward through the results, Ctrl+Shift+G to step backward through the results.\n\nMinor Tweaks:\n- Renamed right click as JKI State Machine Explorer (instead of Editor)\n- Moved all of the right-click options for a state under a submenu with the state\'s name (for better grouping)\n- Fixed some quick search/filtering bugs\n- Added right-click option JKI SM Explorer tree view to Expand All and Collapse All items\n- Fixed issue where sometimes state strings were not recognised correctly if they were inside or wired through structures\n- Fixed issue where tree fully expands after any edit of JKI SM frame names\n- Fixed issue where clicking on a state while JKI SM is running causes errors\n- Now shows and hides the vertical scrollbar on the Explore State String dialog', NULL),
(325, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.6.0.232.vip', 'VIPM', '2013.6.0.232', '2018-04-11 00:59:54', 'New Feature: Insert \"Add State(s) to Queue\" right-click menu on state string wires\n- Should just work as you might expect :-)\n', NULL),
(326, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.6.1.233.vip', 'VIPM', '2013.6.1.233', '2018-04-11 16:51:24', 'New Feature: Insert \"Add State(s) to Queue\" right-click menu on state string wires\n- Should just work as you might expect :-)\n\nFixes and Tweaks\n- Fixed issue where category would automatically collapse in tree view when it was renamed\n- Fixed issue where Insert \"Add State(s) to Queue\" right-click option was showing for all wire types (not just string wires)', NULL),
(327, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.6.2.236.vip', 'VIPM', '2013.6.2.236', '2018-04-13 14:31:53', 'New Feature: Insert \"Add State(s) to Queue\" right-click menu on state string wires\n- Should just work as you might expect :-)\n\nFixes and Tweaks\n- Fixed issue where Add Dynamic Events would sometimes show error message after confirmation dialog', NULL),
(328, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.6.3.239.vip', 'VIPM', '2013.6.3.239', '2018-05-02 21:15:29', 'New Feature: Insert \"Add State(s) to Queue\" right-click menu on state string wires\n- Should just work as you might expect :-)\n\nFixes and Tweaks\n- Fixed issue where Add Dynamic Events would sometimes show error message after confirmation dialog\n- Fixes for issue where sometimes LabVIEW would crash when right-click on JKI SM parts', NULL),
(329, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.6.3.240.vip', 'VIPM', '2013.6.3.240', '2018-05-09 13:55:58', 'New Feature: Insert \"Add State(s) to Queue\" right-click menu on state string wires\n- Should just work as you might expect :-)\n\nFixes and Tweaks\n- Fixed issue where Add Dynamic Events would sometimes show error message after confirmation dialog\n- Fixes for issue where sometimes LabVIEW would crash when right-click on JKI SM parts', NULL),
(330, 88, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_state_machine_editor/jki_state_machine_editor-2013.6.3.241.vip', 'VIPM', '2013.6.3.241', '2018-06-20 02:20:34', 'New Feature: Insert \"Add State(s) to Queue\" right-click menu on state string wires\n- Should just work as you might expect :-)\n\nFixes and Tweaks\n- Fixed issue where Add Dynamic Events would sometimes show error message after confirmation dialog\n- Fixes for issue where sometimes LabVIEW would crash when right-click on JKI SM parts', NULL),
(331, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.0.0.3.vip', 'VIPM', '1.0.0.3', '2015-12-19 01:57:48', 'Updated the palette to include protected methods of the SMO and SMO.UI classes.', 'jki_lib_state_machine>=2.0.0'),
(332, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.0.0.4.vip', 'VIPM', '1.0.0.4', '2015-12-23 00:49:46', '- Simplified the SMO.UI.Template so that it is more basic and reusable.\n- Updated SMO launcher icons.', 'jki_lib_state_machine>=2.0.0'),
(333, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.0.0.5.vip', 'VIPM', '1.0.0.5', '2016-01-18 16:39:32', '- Modified the process synchronization method to use Notifiers instead of resizable Randezvous.\n- Modified the SMO.UI.Template to include template event.', 'jki_lib_state_machine>=2.0.0'),
(334, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.0.0.6.vip', 'VIPM', '1.0.0.6', '2016-01-22 21:57:06', '- Removed template classes.', 'jki_lib_state_machine>=2.0.0'),
(335, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.0.0.7.vip', 'VIPM', '1.0.0.7', '2016-01-25 14:31:03', '- Refactored Sync process\n- Added virtual onStart( ), onStop( ), onProcessStart( ), onProcessStop( ) methods for overrides.', 'jki_lib_state_machine>=2.0.0'),
(336, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.0.0.11.vip', 'VIPM', '1.0.0.11', '2016-02-26 21:53:31', '- Adjusted reentrancy settings for SMO overridable methods\r\n- Get PublicEvents is now a public method (this exposes the references to developer, which should not generate events outside of the process, but is convenient to avoid event structure linkage issues on renaming and rewiring)', 'jki_lib_state_machine>=2.0.0'),
(337, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.0.1.12.vip', 'VIPM', '1.0.1.12', '2016-03-07 16:17:57', '- Added handling of timeout on Stop method\n- Added a Stop command on Unhandled Error.', 'jki_lib_state_machine>=2.0.0'),
(338, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.0.2.14.vip', 'VIPM', '1.0.2.14', '2016-04-13 07:30:52', '- Fixed an issue with stop process sequence on unhandled errors.', 'jki_lib_state_machine>=2.0.0'),
(339, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.0.3.17.vip', 'VIPM', '1.0.3.17', '2016-04-14 22:41:11', '-Added SMO Name terminal on Create Public constructor\n-Added UI State Public Event (Closed, Opened)', 'jki_lib_state_machine>=2.0.0'),
(340, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.0.4.18.vip', 'VIPM', '1.0.4.18', '2016-04-15 20:05:30', '-Fixed an issue with SMO Base process that would hang if called without timeout', 'jki_lib_state_machine>=2.0.0'),
(341, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.1.3.27.vip', 'VIPM', '1.1.3.27', '2016-07-11 21:13:25', '[Fix] Closed the registry reference after unregistration of the last SMO', 'jki_lib_state_machine>=2.0.0'),
(342, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.1.4.28.vip', 'VIPM', '1.1.4.28', '2016-07-13 20:28:24', '[Fix] Fixed process notifier reference leak on stopping SMO', 'jki_lib_state_machine>=2.0.0'),
(343, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.1.5.29.vip', 'VIPM', '1.1.5.29', '2016-07-19 01:48:58', '[Feature] Added onStarted and onStopped to activity diagram\n[Fix] Race condition in multiple Start-Stop SMOs as shown by Unit Test failure', 'jki_lib_state_machine>=2.0.0'),
(344, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.1.6.30.vip', 'VIPM', '1.1.6.30', '2016-07-21 00:32:11', '[Feature] SMO Class banner and wire color modified to remove confusion with Event Registration refnum.\n\n[Fix] Launching SMO Processes with a strictly typed VI definition caused LabVIEW to not release references after objects were destroyed (classes locked after proper stop of objects) ref: https://labviewcoder.com/2016/07/06/quick-tip-asynchronously-launching-vis-the-right-way', 'jki_lib_state_machine>=2.0.0'),
(345, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.1.8.32.vip', 'VIPM', '1.1.8.32', '2016-08-15 15:37:04', '[Fix: 21] Stopping aggregated dependencies no longer can produce a 1556 error on termination when dependency has already been terminated.', 'jki_lib_state_machine>=2.0.0'),
(346, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.1.9.33.vip', 'VIPM', '1.1.9.33', '2016-09-25 12:50:10', '[Feature: 22] Modified the Process Sync methods to allow usign them into subVIs of the Process.vi dynamic dispatch. This allows to encapsulate a process loop into a subVI and change its reentrancy settings at will.\n\n[Feature] SMO.Example process demonstrates how to launch JKI State Machine process VI as a standalone tester without call for parent node.', 'jki_lib_state_machine>=2.0.0'),
(347, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.1.10.34.vip', 'VIPM', '1.1.10.34', '2016-10-10 20:55:59', '[Feature: 24] Destroy should try to Stop SMO gracefully before Abort\n\n[Feature: 25] Stop SMO Zombie Processes when Creator Call Chain Goes Idle', 'jki_lib_state_machine>=2.0.0'),
(348, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.1.11.35.vip', 'VIPM', '1.1.11.35', '2016-12-09 19:21:49', '[Feature: 28] Added support to stop dynamic dependencies at runtime.', 'jki_lib_state_machine>=2.0.0'),
(349, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.1.14.38.vip', 'VIPM', '1.1.14.38', '2016-12-22 15:23:48', '[Feature:30] Dependency can now self-terminate and dependent takes care of destroying reference.\n\n[Feature] Added a protected method to allow dependency to message dependent (send any packet of information) which is handled by onDependencyMessage ( ) callback method.', 'jki_lib_state_machine>=2.0.0'),
(350, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.1.15.39.vip', 'VIPM', '1.1.15.39', '2017-03-02 20:20:36', '[Feature: 31]  Stop Dependency now exposes a timeout terminal (default = -1)\n\n[Feature] List Dependencies method has been made protected (previously private) after addition of ownership verification which is meant to prevent leaking the dependencies list in composition hierarchy. This node is supposed to be used solely to access dependencies in own inheritance tree. An unauthorized call will return an empty list.', 'jki_lib_state_machine>=2.0.0'),
(351, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.1.16.40.vip', 'VIPM', '1.1.16.40', '2017-03-08 14:05:18', '[Fix: 32]  Parent process can now be overwritten by child implementation\n', 'jki_lib_state_machine>=2.0.0'),
(352, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.1.17.41.vip', 'VIPM', '1.1.17.41', '2017-03-15 12:18:13', '[Fix: 36] Fixed an issue where Shared Dependencies that are aggregated in the Static Dependencies list would be filtered out.\r\n\r\n[Feature: 35] Adding reserve mechanism to limit accessibility to public methods to a single master.\r\n- Default behavior is unreserved for all methods.\r\n- Developer is required to implement the Check Availability on a method-per-method basis to take advantage of this feature in critical systems.\r\n- Technically allows a way to deny access to public API calls during critical states.\r\n\r\n', 'jki_lib_state_machine>=2.0.0'),
(353, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.2.0.45.vip', 'VIPM', '1.2.0.45', '2017-03-20 20:28:11', '[Feature: 34]\rIntroducing SMO Facade for accessing SMO Components\' public API generically.\n\r\n', 'jki_lib_state_machine>=2.0.0'),
(354, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.2.0.54.vip', 'VIPM', '1.2.0.54', '2017-03-22 21:54:18', '[Feature: 34]\rIntroducing SMO Facade for accessing SMO Components\' public API generically.\n\r\n', 'jki_lib_state_machine>=2.0.0'),
(355, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.2.1.55.vip', 'VIPM', '1.2.1.55', '2017-04-13 14:43:18', '[Fix: 38]\renumerateStaticDependencies is now called only during startup process.\n', 'jki_lib_state_machine>=2.0.0'),
(356, 89, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_statemachineobjects/jki_statemachineobjects-1.3.0.56.vip', 'VIPM', '1.3.0.56', '2017-11-13 15:35:30', '[Fix: 40] onProcessStart( ) has been moved to the process thread to be symmetrical with onProcessStop( ).\n[Fix: 41] onStopped, onStarted and onProcessStopped methods must require overrides to call parent.\n[Fix: 42] Process now resets call-parent state when process terminates, to prepare process for consistent restart conditions, if requested.\n[Fix: 43] onProcessStopped now symmetrical with onProcessStart, in Process thread.\n[Feature: 45] Create method now allows a dependency to be declared as shared without specific ownership.\n[Fix: 46] dependencies are now stopped during the onStopped callback, not onStop.\n[Fix: 47] LaunchDependency method, called during onStart, is split in two parts: one that creates the dependency and takes ownership on creation (in a non-reentrant method to disallow concurrent creations), the second to start the dependency which is reentrant to allow recursive calls.', 'jki_lib_state_machine>=2.0.0'),
(357, 90, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_unicode/jki_lib_unicode-1.0.0.7.vip', 'VIPM', '1.0.0.7', '2016-08-03 11:09:29', 'Namespaced the UTF-8 class', NULL),
(358, 91, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=packages/jki_labs_tool_vi_tester/jki_labs_tool_vi_tester-1.1.2.164-1.ogp', 'VIPM', '1', '2010-12-01 19:22:34', '', 'jki_rsc_toolkits_palette>=1.1'),
(359, 92, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_labs_tool_vi_tester/jki_labs_tool_vi_tester-1.1.2.274-1.ogp', 'VIPM', '1', '2014-02-27 01:47:16', '', 'jki_rsc_toolkits_palette>=1.1'),
(360, 93, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_labs_tool_vi_tester/jki_labs_tool_vi_tester-2.0.0.285-1.ogp', 'VIPM', '1', '2017-04-29 15:03:29', '', 'jki_rsc_toolkits_palette>=1.1'),
(361, 94, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_labs_tool_vi_tester/jki_labs_tool_vi_tester-3.0.0.292-1.ogp', 'VIPM', '1', '2019-01-25 14:14:50', '', 'jki_rsc_toolkits_palette>=1.1'),
(362, 95, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_labs_tool_vi_tester/jki_labs_tool_vi_tester-3.0.2.294-1.ogp', 'VIPM', '1', '2019-02-13 20:33:59', '', 'jki_rsc_toolkits_palette>=1.1'),
(363, 96, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=jki_labs_tool_vi_tester-1.0.0.70-1.ogp', 'VIPM', '1', '2019-08-08 03:52:51', '', 'jki_rsc_toolkits_palette>=1.1'),
(364, 97, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=jki_labs_tool_vi_tester-1.1.0.121-1.ogp', 'VIPM', '1', '2019-08-08 03:52:51', '', 'jki_rsc_toolkits_palette>=1.1'),
(365, 98, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=packages/jki_labs_tool_vi_tester/jki_labs_tool_vi_tester-1.1.1.137-1.ogp', 'VIPM', '1', '2010-02-17 03:48:45', '', 'jki_rsc_toolkits_palette>=1.1'),
(366, 99, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=jki_lib_easyxml-1.0-1.ogp', 'VIPM', '1', '2016-08-09 15:55:00', '', 'jki_rsc_toolkits_palette>=1.0,nirsc_html_help_common>=2.0,oglib_string>=2.6,oglib_lvdata>=2.8,oglib_error>=2.3,oglib_array>=2.7'),
(367, 100, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=packages/jki_lib_easyxml/jki_lib_easyxml-2.0-1.ogp', 'VIPM', '1', '2010-03-19 17:20:24', '', 'jki_rsc_toolkits_palette>=1.0,nirsc_html_help_common>=2.0,oglib_string>=2.6,oglib_lvdata>=2.8,oglib_error>=2.3,oglib_array>=2.7,oglib_file>=2.8'),
(368, 101, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=packages/jki_lib_rcf_create_enum_from_string/jki_lib_rcf_create_enum_from_string-1.0.1-1.vip', 'VIPM', '1', '2009-07-09 01:05:19', '', 'jki_tool_right_click_framework>=1.0.0.189'),
(369, 102, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=packages/jki_lib_rcf_create_enum_on_disabled_property/jki_lib_rcf_create_enum_on_disabled_property-1.0.1-1.vip', 'VIPM', '1', '2009-07-09 01:04:46', '', 'jki_tool_right_click_framework>=1.0.0.189'),
(370, 103, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=packages/jki_lib_rcf_disconnect_from_typedef_recursive/jki_lib_rcf_disconnect_from_typedef_recursive-1.0.1-1.vip', 'VIPM', '1', '2009-07-09 01:04:23', '', 'jki_tool_right_click_framework>=1.0.0.189'),
(371, 104, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=packages/jki_lib_rcf_justify_text/jki_lib_rcf_justify_text-1.0.1-1.vip', 'VIPM', '1', '2009-07-09 01:03:56', '', 'jki_tool_right_click_framework>=1.0.0.189'),
(372, 105, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=packages/jki_lib_rcf_wire_error_case_structure/jki_lib_rcf_wire_error_case_structure-1.2.1-1.vip', 'VIPM', '1', '2009-07-09 01:03:31', '', 'jki_tool_right_click_framework>=1.0.0.189'),
(373, 106, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=jki_lib_state_machine-2.0.0-1.vip', 'VIPM', '1', '2018-11-20 21:41:24', '', 'jki_rsc_toolkits_palette>=1.1'),
(374, 107, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=jki_rsc_toolkits_palette-1.1-1.ogp', 'VIPM', '1', '2015-04-01 02:31:49', '', NULL),
(375, 108, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=packages/jki_tool_right_click_framework/jki_tool_right_click_framework-1.0.0.189-1.ogp', 'VIPM', '1', '2009-07-09 01:02:36', '', NULL),
(376, 109, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=packages/jki_tool_right_click_framework/jki_tool_right_click_framework-1.0.1.199-1.ogp', 'VIPM', '1', '2009-07-22 21:00:56', '', NULL),
(377, 110, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=packages/jki_tool_right_click_framework/jki_tool_right_click_framework-1.0.2.208-1.ogp', 'VIPM', '1', '2009-07-29 16:44:17', '', NULL),
(378, 111, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=packages/jki_tool_tortoisesvn/jki_tool_tortoisesvn-2.0.0.119-1.ogp', 'VIPM', '1', '2009-06-05 14:51:59', '', NULL),
(379, 112, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=packages/jki_tool_tortoisesvn/jki_tool_tortoisesvn-2.0.1.135-1.ogp', 'VIPM', '1', '2009-06-22 18:10:10', '', NULL),
(380, 113, 'https://bitbucket.org/MooreGoodIdeas/json/', 'GPM', '0.1.2', '2018-09-05 00:37:24', '## 0.1.2\r\n\r\nRemoved UTF converter when on RT\r\n\r\n## 0.1.1\r\n\r\nFixed NaN/Inf case for numbers\r\n\r\n## 0.1.0\r\n\r\nInitial Release', NULL),
(381, 113, 'https://bitbucket.org/MooreGoodIdeas/json/', 'GPM', '0.1.3', '2018-09-06 14:26:40', '## 0.1.3\r\n\r\nFixed bug when converting a timestamp to an ISO8601 string in non-negative time zones.\r\n\r\n## 0.1.2\r\n\r\nRemoved UTF converter when on RT.\r\n\r\n## 0.1.1\r\n\r\nFixed NaN/Inf case for numbers.\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', NULL),
(382, 113, 'https://gitlab.com/mgi/gpm-packages/JSON', 'GPM', '0.1.4', '2018-09-07 18:40:40', '## 0.1.4\r\n\r\nFixed bad links in gpackage.json\r\n\r\n## 0.1.3\r\n\r\nFixed bug when converting a timestamp to an ISO8601 string in non-negative time zones.\r\n\r\n## 0.1.2\r\n\r\nRemoved UTF converter when on RT.\r\n\r\n## 0.1.1\r\n\r\nFixed NaN/Inf case for numbers.\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', NULL),
(383, 113, 'https://gitlab.com/mgi/gpm-packages/JSON', 'GPM', '0.1.5', '2018-11-15 20:42:38', '## 0.1.5\r\n\r\nTweaked access scope and VI properties to solve broken build issues.\r\n\r\n## 0.1.4\r\n\r\nFixed bad links in gpackage.json\r\n\r\n## 0.1.3\r\n\r\nFixed bug when converting a timestamp to an ISO8601 string in non-negative time zones.\r\n\r\n## 0.1.2\r\n\r\nRemoved UTF converter when on RT.\r\n\r\n## 0.1.1\r\n\r\nFixed NaN/Inf case for numbers.\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', NULL),
(384, 113, 'https://gitlab.com/mgi/gpm-packages/JSON', 'GPM', '0.1.6', '2018-11-21 23:40:33', '## 0.1.6\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.5\r\n\r\nTweaked access scope and VI properties to solve broken build issues.\r\n\r\n## 0.1.4\r\n\r\nFixed bad links in gpackage.json\r\n\r\n## 0.1.3\r\n\r\nFixed bug when converting a timestamp to an ISO8601 string in non-negative time zones.\r\n\r\n## 0.1.2\r\n\r\nRemoved UTF converter when on RT.\r\n\r\n## 0.1.1\r\n\r\nFixed NaN/Inf case for numbers.\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', NULL),
(385, 113, 'https://gitlab.com/mgi/gpm-packages/JSON', 'GPM', '0.1.7', '2019-07-10 18:54:47', '## 0.1.7\r\n\r\nAdded support for 2D and 3D arrays.\r\n\r\n## 0.1.6\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.5\r\n\r\nTweaked access scope and VI properties to solve broken build issues.\r\n\r\n## 0.1.4\r\n\r\nFixed bad links in gpackage.json\r\n\r\n## 0.1.3\r\n\r\nFixed bug when converting a timestamp to an ISO8601 string in non-negative time zones.\r\n\r\n## 0.1.2\r\n\r\nRemoved UTF converter when on RT.\r\n\r\n## 0.1.1\r\n\r\nFixed NaN/Inf case for numbers.\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', NULL),
(386, 113, 'https://gitlab.com/mgi/gpm-packages/JSON', 'GPM', '0.1.8', '2020-03-11 22:05:10', '## 0.1.8\r\n\r\nAlways use period as decimal separator for numbers in JSON text (regardless of localization)\r\n\r\n## 0.1.7\r\n\r\nAdded support for 2D and 3D arrays.\r\n\r\n## 0.1.6\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.5\r\n\r\nTweaked access scope and VI properties to solve broken build issues.\r\n\r\n## 0.1.4\r\n\r\nFixed bad links in gpackage.json\r\n\r\n## 0.1.3\r\n\r\nFixed bug when converting a timestamp to an ISO8601 string in non-negative time zones.\r\n\r\n## 0.1.2\r\n\r\nRemoved UTF converter when on RT.\r\n\r\n## 0.1.1\r\n\r\nFixed NaN/Inf case for numbers.\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', NULL),
(387, 113, 'https://gitlab.com/mgi/gpm-packages/JSON', 'GPM', '1.0.0', '2020-04-30 16:16:24', '## 1.0.0\r\n\r\nImproved documentation. Added unit tests for parsing, not just formatting. Fixed timestamp formatting unit test. Fixed actual timestamp parsing behavior which was non-functional. Added complex number support.\r\n\r\n## 0.1.8\r\n\r\nAlways use period as decimal separator for numbers in JSON text (regardless of localization)\r\n\r\n## 0.1.7\r\n\r\nAdded support for 2D and 3D arrays.\r\n\r\n## 0.1.6\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.5\r\n\r\nTweaked access scope and VI properties to solve broken build issues.\r\n\r\n## 0.1.4\r\n\r\nFixed bad links in gpackage.json\r\n\r\n## 0.1.3\r\n\r\nFixed bug when converting a timestamp to an ISO8601 string in non-negative time zones.\r\n\r\n## 0.1.2\r\n\r\nRemoved UTF converter when on RT.\r\n\r\n## 0.1.1\r\n\r\nFixed NaN/Inf case for numbers.\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', NULL),
(388, 114, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/felipefoz_lib_json_pretty_printer/felipefoz_lib_json_pretty_printer-0.1.1.6.vip', 'VIPM', '0.1.1.6', '2020-06-16 19:26:58', '## [0.1.1] - 2020-06-16\n### Added\n- Included Build Specification for VIPM.', NULL),
(389, 115, 'https://gitlab.com/mgi/gpm-packages/json-rpc', 'GPM', '0.1.0', '2018-09-05 00:37:32', '## 0.1.0\r\n\r\nInitial Release', '@mgi/json (^0.1.0)'),
(390, 115, 'https://gitlab.com/mgi/gpm-packages/json-rpc', 'GPM', '0.1.1', '2018-11-15 22:08:00', '## 0.1.1\r\n\r\nRelinked to non-vi.lib items.\r\n\r\n## 0.1.0\r\n\r\nInitial Release', '@mgi/json (^0.1.0),@mgi/monitored-actor-core (^3.0.1)'),
(391, 115, 'https://gitlab.com/mgi/gpm-packages/json-rpc', 'GPM', '0.1.2', '2018-11-15 22:33:51', '## 0.1.2\r\n\r\nIgnored error when a response comes in but the requesting actor has already stopped.\r\n\r\n## 0.1.1\r\n\r\nRelinked to non-vi.lib items.\r\n\r\n## 0.1.0\r\n\r\nInitial Release', '@mgi/json (^0.1.0),@mgi/monitored-actor-core (^3.0.1)'),
(392, 115, 'https://gitlab.com/mgi/gpm-packages/json-rpc', 'GPM', '0.1.3', '2018-11-21 23:50:04', '## 0.1.3\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.2\r\n\r\nIgnored error when a response comes in but the requesting actor has already stopped.\r\n\r\n## 0.1.1\r\n\r\nRelinked to non-vi.lib items.\r\n\r\n## 0.1.0\r\n\r\nInitial Release', '@mgi/json (^0.1.0),@mgi/monitored-actor-core (^3.0.1)'),
(393, 116, 'https://gitlab.com/mgi/gpm-packages/jwt', 'GPM', '0.1.0', '2018-09-05 00:37:39', '## 0.1.0\r\n\r\nInitial Release', '@mgi/base64 (^0.1.0),@mgi/hash (^0.1.0),@mgi/json (^0.1.0)'),
(394, 116, 'https://gitlab.com/mgi/gpm-packages/jwt', 'GPM', '0.1.1', '2018-11-21 23:44:46', '## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release', '@mgi/base64 (^0.1.0),@mgi/hash (^0.1.0),@mgi/json (^0.1.0)'),
(395, 117, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_tool_labview_icon_version_overlay/jki_tool_labview_icon_version_overlay-1.0.0.15.vip', 'VIPM', '1.0.0.15', '2014-12-12 15:17:45', '', NULL),
(396, 118, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/lava_lib_labview_api_scripting_tools/lava_lib_labview_api_scripting_tools-0.24.0.24.vip', 'VIPM', '0.24.0.24', '2020-06-24 19:51:15', 'Change Log:\n0.24.0 Added Copy and WireTagged Element function and replaced Find tagged and replace function with a bug fixed one - both contributions of Greg Sands\n0.23.0 Added a Find Control Index in ConPane function courtesy of Eric Bobillier\n0.22.02 Connected the Check Cluster Term Type to the connector pane and implmenented a new test for all cluster elements being of the same (top level) type.\n0.22.01 Correct the Array type sortable test in XNode support, add a new test for no more than  N dimsnions in the Array tests in XNode support, add a new VI to find tunnels in structures based on the names of terminals on the wires connected to the outside of the structure. Removed dependencies on OpenG array tools\n0.21.05 Add an additional XNode supprt vi to help on the GenerateCode ability. Create palette menu in VIPM\n0.21.04 Imporved the Set Tag on Selected Object Example to eliminate an error message when setting a tag for the first time and to run continuosly waiting for objects to be selected.\n0.21.03 Mad package name and product name consistent and added old name to Incompatible packages.\n0.21.02 Fixed a bug in checking if a variant type is sortable - complex numbers aren\'t (!) and clusters might be. Some cosmetic tidying up of front panels as well.\n0.21.01 Added a new routine to walk down a wire from a point and find all the terminals that are downstream.\n0.20.02 Repackaged as a VI Package Manager File with custom palette files installed in a LAVAG Category.\n0.20.01  Repackage for LV 8.6.1. Include menu files in the library.\n	Add a new palette of unfo control vis to control undo/redo operations in scripting.\n	Add a new palette of copy-paste control\n	Add a new Create Primitive by Enclosure vi that simulates drawing around the BD contents\n	Add some preliminary code for analysing and modifying structure tunnel properties - use default if not wired etc.\n	Add some more examples including a JKISoft RCF Framework plugin that will wrap the entire contents of a vi in an error cluster.\n0.18.01 Repackage for LV 8.5.1\n	Change Create Free Text Label to polymorphic and add a polymorph for creating labels on block diagrams\n0.17.01 Adds another routine for XNode support to get the terminal descriptor from a vi reference.\n0.16.02 Update .opgb file to allow the library to be built as an OpenG package file for install via VIPM\n0.16.01	Minor bug fixes, added a routine to convert a ref to an enum describing its class, reworked find all objects\n	to get the selector tunnel of a case structure too. Added a number of routines to the XNode Support\n	sub-library.\n0.15.01 Added new routines to tidy up wires and delete LV objects.\n	Added a new example that will take a selected case structure without a wire selector, looks for\n	an error cluster wire that tunnels in and out, deletes the in tunnel and wires it to the selector\n	instead. This is for those situations when you realise you should have wrapped your vi in an error\n	case structure... !\n0.14.02 Fixed the cleanup wiring example by adding a routine to return references for wires specifically.\n0.14.01 Added a routine to create a free text label on a vi front panel.\n0.13.02 Added routines to create constants and controls/indicators from aribtary variant data. Reorganised some \n	of the tagging support vi\'s out of private scope and renamed the misspelt private directory. Added a couple\n 	more examples - one is a tool to set tags on selected elements for doing template based scripting and the\n	other is a complete (although sparse) XNode that will test whether a single LVObject references, or an array\n	of LVObject references can be cast to a specific type of reference. (Think about getting all objects in a\n	diagram and then filtering for those that are decorations, or sub-bi nodes or...). The Generate Code ability\n	vi of this XNode demonstrates how to use a template vi with tagging to minise the hassle of generating code\n	for XNodes.\n\n	This release is in OpenG Package format\n0.12.01	Added a few new routines, one to expand a shift register, one to deterine if an object is selected,\n	and a polymorphic vi that returns a reference of any given LVObject class (essentially wrapping\n	class specifier constants for all possible class types). Also added a couple of examples, including \n	one that will do a clean up wire operation on all selected wires or all wires in the structure.\n0.11.01 Wrapped all vis in a case structure wired to error in for error handling\n	added a get sub-vi nodes in heirarchy and get all sub-vis routines\n	tried to find and fix the worst wiring excesses\n0.10.04 Updated the README\n0.10.03 fixed a bug with the creation of (un)bundle by name nodes.\n0.10.02 fixes a couple of bugs, and adds some create bundle/unbundle node functions.\n0.10.01 Original release\n', NULL);
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(397, 119, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/lavag_lib_user_interface_xcontrole_multi_segment_ramp_xcontrol/lavag_lib_user_interface_xcontrole_multi_segment_ramp_xcontrol-1.7.0.34.vip', 'VIPM', '1.7.0.34', '2020-05-25 14:57:30', '1.7.0 - Add aditional properties for rate time unit, more consist unit display\n         - Move start value to first tab, replace index digit display with scorll bar\n         - Fix some resize issues\n         - Add New button to clear program and redo load/save buttons\n         - Control now exports and imports in JSON (NI Native schema)', 'oglib_string>=2.6'),
(398, 120, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/lavag_lib_user_interface_xcontrole_waveform_xcontrol/lavag_lib_user_interface_xcontrole_waveform_xcontrol-1.2.0.18.vip', 'VIPM', '1.2.0.18', '2020-05-23 09:52:17', '1.2.0 Add parabolic, cubic and quartic patterns to allow more data points around zero', NULL),
(399, 121, 'https://gitlab.com/mgi/gpm-packages/library-core', 'GPM', '0.1.2', '2018-11-27 19:28:31', '## 0.1.2\r\n\r\nAdded several array helper VIs\r\n\r\n## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', NULL),
(400, 121, 'https://gitlab.com/mgi/gpm-packages/library-core', 'GPM', '0.2.0', '2018-12-17 20:15:50', '## 0.2.0\r\n\r\n- Reworked enable if/gray if to be less confusing\r\n- Added `Array of Enum Values.vim`\r\n- Reformatted readme.\r\n\r\n## 0.1.2\r\n\r\n- Added several array helper VIs\r\n\r\n## 0.1.1\r\n\r\n- Updated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\n- Initial Release.\r\n', NULL),
(401, 121, 'https://gitlab.com/mgi/gpm-packages/library-core', 'GPM', '0.3.0', '2019-02-16 00:10:05', '## 0.3.0\r\n\r\n- Added `GUIDv4`\r\n- Added `Enumerate Enum`\r\n\r\n## 0.2.0\r\n\r\n- Reworked enable if/gray if to be less confusing\r\n- Added `Array of Enum Values.vim`\r\n- Reformatted readme.\r\n\r\n## 0.1.2\r\n\r\n- Added several array helper VIs\r\n\r\n## 0.1.1\r\n\r\n- Updated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\n- Initial Release.\r\n', NULL),
(402, 121, 'https://gitlab.com/mgi/gpm-packages/library-core', 'GPM', '0.4.0', '2019-06-13 20:37:23', '## 0.4.0\r\n\r\n- Added `Tolopolical Sort`\r\n- Removed duplicate VI `Array of Enum Values` (Equivalent to Enumerate Enum)\r\n\r\n\r\n## 0.3.0\r\n\r\n- Added `GUIDv4`\r\n- Added `Enumerate Enum`\r\n\r\n## 0.2.0\r\n\r\n- Reworked enable if/gray if to be less confusing\r\n- Added `Array of Enum Values.vim`\r\n- Reformatted readme.\r\n\r\n## 0.1.2\r\n\r\n- Added several array helper VIs\r\n\r\n## 0.1.1\r\n\r\n- Updated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\n- Initial Release.\r\n', NULL),
(403, 121, 'https://gitlab.com/mgi/gpm-packages/library-core', 'GPM', '0.4.1', '2019-06-20 15:37:30', '## 0.4.1\r\n\r\n- Added `Show Scrollbars if Needed.vi`\r\n- Added error terminals to `Center Controls in Pane.vi`\r\n\r\n## 0.4.0\r\n\r\n- Added `Tolopolical Sort`\r\n- Removed duplicate VI `Array of Enum Values` (Equivalent to Enumerate Enum)\r\n\r\n\r\n## 0.3.0\r\n\r\n- Added `GUIDv4`\r\n- Added `Enumerate Enum`\r\n\r\n## 0.2.0\r\n\r\n- Reworked enable if/gray if to be less confusing\r\n- Added `Array of Enum Values.vim`\r\n- Reformatted readme.\r\n\r\n## 0.1.2\r\n\r\n- Added several array helper VIs\r\n\r\n## 0.1.1\r\n\r\n- Updated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\n- Initial Release.\r\n', NULL),
(404, 121, 'https://gitlab.com/mgi/gpm-packages/library-core', 'GPM', '0.4.2', '2019-08-07 17:11:05', '## 0.4.2\r\n\r\n- Fixed Misc icons\r\n\r\n## 0.4.1\r\n\r\n- Added `Show Scrollbars if Needed.vi`\r\n- Added error terminals to `Center Controls in Pane.vi`\r\n\r\n## 0.4.0\r\n\r\n- Added `Tolopolical Sort`\r\n- Removed duplicate VI `Array of Enum Values` (Equivalent to Enumerate Enum)\r\n\r\n\r\n## 0.3.0\r\n\r\n- Added `GUIDv4`\r\n- Added `Enumerate Enum`\r\n\r\n## 0.2.0\r\n\r\n- Reworked enable if/gray if to be less confusing\r\n- Added `Array of Enum Values.vim`\r\n- Reformatted readme.\r\n\r\n## 0.1.2\r\n\r\n- Added several array helper VIs\r\n\r\n## 0.1.1\r\n\r\n- Updated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\n- Initial Release.\r\n', NULL),
(405, 121, 'https://gitlab.com/mgi/gpm-packages/library-core', 'GPM', '0.4.3', '2019-10-24 01:51:55', '## 0.4.3\r\n\r\n- Fixed Bug that caused GUIDs to be missing 2 bytes\r\n\r\n## 0.4.2\r\n\r\n- Fixed Misc icons\r\n\r\n## 0.4.1\r\n\r\n- Added `Show Scrollbars if Needed.vi`\r\n- Added error terminals to `Center Controls in Pane.vi`\r\n\r\n## 0.4.0\r\n\r\n- Added `Tolopolical Sort`\r\n- Removed duplicate VI `Array of Enum Values` (Equivalent to Enumerate Enum)\r\n\r\n\r\n## 0.3.0\r\n\r\n- Added `GUIDv4`\r\n- Added `Enumerate Enum`\r\n\r\n## 0.2.0\r\n\r\n- Reworked enable if/gray if to be less confusing\r\n- Added `Array of Enum Values.vim`\r\n- Reformatted readme.\r\n\r\n## 0.1.2\r\n\r\n- Added several array helper VIs\r\n\r\n## 0.1.1\r\n\r\n- Updated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\n- Initial Release.\r\n', NULL),
(406, 121, 'https://gitlab.com/mgi/gpm-packages/library-core', 'GPM', '0.5.0', '2019-11-12 18:29:13', '## 0.5.0\r\n\r\n- Changed `Natural Sort` to a malleable VI\r\n\r\n## 0.4.3\r\n\r\n- Fixed Bug that caused GUIDs to be missing 2 bytes\r\n\r\n## 0.4.2\r\n\r\n- Fixed Misc icons\r\n\r\n## 0.4.1\r\n\r\n- Added `Show Scrollbars if Needed.vi`\r\n- Added error terminals to `Center Controls in Pane.vi`\r\n\r\n## 0.4.0\r\n\r\n- Added `Tolopolical Sort`\r\n- Removed duplicate VI `Array of Enum Values` (Equivalent to Enumerate Enum)\r\n\r\n\r\n## 0.3.0\r\n\r\n- Added `GUIDv4`\r\n- Added `Enumerate Enum`\r\n\r\n## 0.2.0\r\n\r\n- Reworked enable if/gray if to be less confusing\r\n- Added `Array of Enum Values.vim`\r\n- Reformatted readme.\r\n\r\n## 0.1.2\r\n\r\n- Added several array helper VIs\r\n\r\n## 0.1.1\r\n\r\n- Updated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\n- Initial Release.\r\n', NULL),
(407, 121, 'https://gitlab.com/mgi/gpm-packages/library-core', 'GPM', '0.5.1', '2020-01-23 18:01:05', '## 0.5.1\r\n\r\n- Fixed issue in `Topological Sort` that would cause duplicates when one node depended on another node multiple times.\r\n\r\n\r\n## 0.5.0\r\n\r\n- Changed `Natural Sort` to a malleable VI\r\n\r\n## 0.4.3\r\n\r\n- Fixed Bug that caused GUIDs to be missing 2 bytes\r\n\r\n## 0.4.2\r\n\r\n- Fixed Misc icons\r\n\r\n## 0.4.1\r\n\r\n- Added `Show Scrollbars if Needed.vi`\r\n- Added error terminals to `Center Controls in Pane.vi`\r\n\r\n## 0.4.0\r\n\r\n- Added `Tolopolical Sort`\r\n- Removed duplicate VI `Array of Enum Values` (Equivalent to Enumerate Enum)\r\n\r\n\r\n## 0.3.0\r\n\r\n- Added `GUIDv4`\r\n- Added `Enumerate Enum`\r\n\r\n## 0.2.0\r\n\r\n- Reworked enable if/gray if to be less confusing\r\n- Added `Array of Enum Values.vim`\r\n- Reformatted readme.\r\n\r\n## 0.1.2\r\n\r\n- Added several array helper VIs\r\n\r\n## 0.1.1\r\n\r\n- Updated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\n- Initial Release.\r\n', NULL),
(408, 122, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/field_rnd_services_libssh2/field_rnd_services_libssh2-1.0.0.20.vip', 'VIPM', '1.0.0.20', '2020-05-01 18:30:30', '## [0.1.0] - 2020-04-17\n\n### Added\n\n- The `Channel.lvclass:Read All Stderr.vi` and `Channel.lvclass:Write All Stderr.vi` VIs\n- Data entry limits to the `Max Data Length` and `Per Read Size` controls for the \"Read\" VIs in the Channel class\n- Descriptions to all VIs and type definitions for all classes\n- Descriptions to all controls and indicators for all VIs\n- Missing `Create from Listener` variant to the `Channel.lvclass:Create.vi` polymorphic VI\n- Missing `Destroy to Listener` variant to the `Channel.lvclass:Destroy.vi` polymorphic VI\n- Path for the _Help path_ field to all VI documentation\n- A relative path for the _Help tag_ field to all VI documentation\n- The `Agent Identity.lvclass:Create.vi` and `Agent Identity.lvclass:Destroy.vi` VIs to the Agent palette\n- CHM file to installable package (VIP)\n- HTML help documentation for all controls, indicators, VIs, classes, and libraries\n- Apache-2.0 License header to all block diagrams of all VIs\n\n### Changed\n\n- The `SFTP File.lvclass:Open.vi` to a polymorphic VI\n- The `SFTP File.lvclass:Close.vi` to a polymorphic VI\n- The `SFTP Directory.lvclass:Open.vi` to a polymorphic VI\n- The `SFTP Directory.lvclass:Close.vi` to a polymorphic VI\n- The `Channel.lvclass:Create.vi` SCP Receive instance to internally use a File Info object \n- `Max Data Length` from 32000 to 1024 for all channel read and write examples\n- The type selector default from hidden to visible for all polymorphic VIs\n- The `Session.lvclass:Create.vi` to a polymorphic VI for API consistency\n- The `Session.lvclass:Create.vi` to a polymorphic VI for API consistency\n- The `SFTP.lvclass:Create.vi` to a polymorphic VI for API consistency\n- The `SFTP.lvclass:Destroy.vi` to a polymorphic VI for API consistency\n- The `Known Hosts.lvclass:Destroy.vi` to a polymorphic VI for API consistency\n- The `Known Hosts.lvclass:Destroy.vi` to a polymorphic VI for API consistency\n- `SFTP File.lvclass:Flags.ctl` to `SFTP File.lvclass:Options.ctl` for API naming consistency', NULL),
(409, 123, '', 'GPM', '0.0.1-Beta', '2019-03-25 17:53:27', '', '@cs/lookup-table (^0.0.2),@cs/variant (^1.0.1)'),
(410, 123, '', 'GPM', '0.0.2-Beta', '2019-03-26 00:36:30', '', '@cs/lookup-table (^0.0.2),@cs/variant (^1.0.1)'),
(411, 123, '', 'GPM', '0.0.3-Beta', '2019-03-27 03:12:21', '', '@cs/lookup-table (^0.0.2),@cs/variant (^1.0.1)'),
(412, 123, '', 'GPM', '0.0.4-Beta', '2019-03-27 15:33:55', '', '@cs/lookup-table (^0.0.2),@cs/variant (^1.0.1)'),
(413, 123, '', 'GPM', '0.0.5-Beta', '2019-03-27 18:04:00', '', '@cs/lookup-table (^0.0.2),@cs/variant (^1.0.1)'),
(414, 123, '', 'GPM', '0.0.6-Beta', '2019-03-27 19:09:26', '', '@cs/lookup-table (^0.0.2),@cs/variant (^1.0.1)'),
(415, 123, '', 'GPM', '0.0.7-Beta', '2019-03-28 01:47:36', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(416, 123, '', 'GPM', '0.0.8-Beta', '2019-03-29 14:41:43', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(417, 123, '', 'GPM', '0.0.9-Beta', '2019-04-02 15:29:29', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(418, 123, '', 'GPM', '0.0.10-Beta', '2019-04-16 02:37:39', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(419, 123, '', 'GPM', '0.0.11-Beta', '2019-04-16 03:00:47', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(420, 123, '', 'GPM', '0.0.12-Beta', '2019-04-16 03:10:21', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(421, 123, '', 'GPM', '0.0.13-Beta', '2019-04-16 18:02:19', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(422, 123, '', 'GPM', '0.0.14-Beta', '2019-04-17 13:51:08', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(423, 123, '', 'GPM', '0.0.15-Beta', '2019-04-17 19:21:32', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(424, 123, '', 'GPM', '0.0.16-Beta', '2019-04-18 15:02:09', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(425, 123, '', 'GPM', '0.0.17-Beta', '2019-04-23 15:55:06', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(426, 123, '', 'GPM', '0.0.18-Beta', '2019-04-25 12:48:12', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(427, 123, '', 'GPM', '0.0.19-Beta', '2019-04-26 00:02:51', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(428, 123, '', 'GPM', '0.0.20-Beta', '2019-04-26 14:29:56', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(429, 123, '', 'GPM', '0.0.21-Beta', '2019-05-01 02:08:23', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(430, 123, '', 'GPM', '0.0.22-Beta', '2019-05-03 14:17:05', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(431, 123, '', 'GPM', '0.0.23-Beta', '2019-05-03 14:54:25', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(432, 123, '', 'GPM', '0.0.24-Beta', '2019-05-13 00:46:16', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(433, 123, '', 'GPM', '0.0.25-Beta', '2019-05-13 15:09:47', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(434, 123, '', 'GPM', '0.0.26-Beta', '2019-05-13 15:24:44', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(435, 123, '', 'GPM', '0.0.27-Beta', '2019-05-16 19:52:58', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(436, 123, '', 'GPM', '0.0.28-Beta', '2019-05-20 14:00:39', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(437, 123, '', 'GPM', '0.0.29-Beta', '2019-05-20 14:20:13', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(438, 123, '', 'GPM', '0.0.30-Beta', '2019-05-20 20:13:47', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(439, 123, '', 'GPM', '0.0.31-Beta', '2019-05-21 01:05:46', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(440, 123, '', 'GPM', '0.0.32-Beta', '2019-05-21 13:37:13', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(441, 123, '', 'GPM', '0.0.33-Beta', '2019-05-28 19:00:28', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(442, 123, '', 'GPM', '0.0.34-Beta', '2019-05-28 19:29:02', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(443, 123, '', 'GPM', '0.0.35-Beta', '2019-05-29 13:32:52', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(444, 123, '', 'GPM', '0.0.36-Beta', '2019-06-06 13:32:27', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(445, 123, '', 'GPM', '0.0.37-Beta', '2019-07-08 20:49:38', '', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(446, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '0.0.38-Beta', '2019-07-19 15:44:27', '## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(447, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.0.0', '2019-07-19 16:36:24', '## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(448, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.0.1', '2019-07-24 18:40:52', '##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(449, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.0.2', '2019-07-30 16:04:23', '##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(450, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.0.3', '2019-07-30 19:43:02', '##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(451, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.0.4', '2019-08-01 13:59:37', '##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(452, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.0.5', '2019-08-01 14:50:34', '##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(453, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.0.6', '2019-08-01 16:48:46', '##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(454, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.0.7', '2019-08-20 02:48:39', '##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(455, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.0.8', '2019-08-20 14:45:13', '##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(456, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.0.9', '2019-08-20 16:58:29', '##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(457, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.1.0', '2019-08-23 01:04:50', '##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(458, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.1.1', '2019-08-23 14:40:38', '##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(459, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.1.2', '2019-08-23 17:00:24', '##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(460, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.1.3', '2019-09-05 04:05:45', '##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(461, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.1.4', '2019-09-05 13:59:20', '##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(462, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.2.0', '2019-09-09 15:55:51', '##[1.2.0] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(463, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.2.1', '2019-09-09 16:01:27', '##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(464, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.2.2', '2019-09-15 16:39:15', '##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(465, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.3.0', '2019-09-19 16:40:06', '##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(466, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.4.0', '2019-10-04 15:03:58', '##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(467, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.4.1', '2019-10-07 13:50:45', '##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(468, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.4.2', '2019-10-07 14:44:50', '##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(469, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.4.3', '2019-10-07 15:59:05', '##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(470, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.4.4', '2019-10-07 16:36:41', '##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(471, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.4.5', '2019-10-09 03:23:36', '##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(472, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.4.6', '2019-10-16 17:14:32', '##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(473, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.4.7', '2019-10-17 16:00:47', '##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(474, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.5.0', '2019-10-21 17:30:37', '##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(475, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.5.1', '2019-10-22 13:33:08', '##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(476, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.5.2', '2019-10-22 16:00:54', '##[1.5.2] - 2019-10-22\r\n- Bug fix: forgot to wire the \"Recurse\" flag at the by ref layer of the linked list.\r\n\r\n##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(477, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.5.3', '2019-10-22 16:43:56', '##[1.5.3] - 2019-10-22\r\n- Added by ref wrapper for orphaned pointer search (see 1.5.0).\r\n\r\n##[1.5.2] - 2019-10-22\r\n- Bug fix: forgot to wire the \"Recurse\" flag at the by ref layer of the linked list.\r\n\r\n##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(478, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.5.4', '2019-10-22 18:22:05', '##[1.5.4] - 2019-10-22\r\n- Bug Fix: The GUID comparison for orphaned pointers was being done incorrectly.\r\n\r\n##[1.5.3] - 2019-10-22\r\n- Added by ref wrapper for orphaned pointer search (see 1.5.0).\r\n\r\n##[1.5.2] - 2019-10-22\r\n- Bug fix: forgot to wire the \"Recurse\" flag at the by ref layer of the linked list.\r\n\r\n##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(479, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.5.5', '2019-10-24 16:18:27', '##[1.5.5] - 2019-10-24\r\n- Mass Compile.\r\n\r\n##[1.5.4] - 2019-10-22\r\n- Bug Fix: The GUID comparison for orphaned pointers was being done incorrectly.\r\n\r\n##[1.5.3] - 2019-10-22\r\n- Added by ref wrapper for orphaned pointer search (see 1.5.0).\r\n\r\n##[1.5.2] - 2019-10-22\r\n- Bug fix: forgot to wire the \"Recurse\" flag at the by ref layer of the linked list.\r\n\r\n##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(480, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.5.6', '2019-10-24 17:29:41', '##[1.5.6] - 2019-10-24\r\n- Project relink.\r\n\r\n##[1.5.5] - 2019-10-24\r\n- Mass Compile.\r\n\r\n##[1.5.4] - 2019-10-22\r\n- Bug Fix: The GUID comparison for orphaned pointers was being done incorrectly.\r\n\r\n##[1.5.3] - 2019-10-22\r\n- Added by ref wrapper for orphaned pointer search (see 1.5.0).\r\n\r\n##[1.5.2] - 2019-10-22\r\n- Bug fix: forgot to wire the \"Recurse\" flag at the by ref layer of the linked list.\r\n\r\n##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(481, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.5.7', '2019-10-28 13:32:18', '##[1.5.7] - 2019-10-28\r\n- Added read and write methods for meta data to the by-ref class.\r\n\r\n##[1.5.6] - 2019-10-24\r\n- Project relink.\r\n\r\n##[1.5.5] - 2019-10-24\r\n- Mass Compile.\r\n\r\n##[1.5.4] - 2019-10-22\r\n- Bug Fix: The GUID comparison for orphaned pointers was being done incorrectly.\r\n\r\n##[1.5.3] - 2019-10-22\r\n- Added by ref wrapper for orphaned pointer search (see 1.5.0).\r\n\r\n##[1.5.2] - 2019-10-22\r\n- Bug fix: forgot to wire the \"Recurse\" flag at the by ref layer of the linked list.\r\n\r\n##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(482, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.5.8', '2019-10-29 01:40:37', '##[1.5.8] - 2019-10-28\r\n- Added read and write methods for attribute meta data to the by-ref class.\r\n\r\n##[1.5.7] - 2019-10-28\r\n- Added read and write methods for meta data to the by-ref class.\r\n\r\n##[1.5.6] - 2019-10-24\r\n- Project relink.\r\n\r\n##[1.5.5] - 2019-10-24\r\n- Mass Compile.\r\n\r\n##[1.5.4] - 2019-10-22\r\n- Bug Fix: The GUID comparison for orphaned pointers was being done incorrectly.\r\n\r\n##[1.5.3] - 2019-10-22\r\n- Added by ref wrapper for orphaned pointer search (see 1.5.0).\r\n\r\n##[1.5.2] - 2019-10-22\r\n- Bug fix: forgot to wire the \"Recurse\" flag at the by ref layer of the linked list.\r\n\r\n##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(483, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.5.9', '2019-10-30 00:51:44', '##[1.5.9] - 2019-10-29\r\n- Added tag of \"5\" to attribute in build tree data.\r\n\r\n##[1.5.8] - 2019-10-28\r\n- Added read and write methods for attribute meta data to the by-ref class.\r\n\r\n##[1.5.7] - 2019-10-28\r\n- Added read and write methods for meta data to the by-ref class.\r\n\r\n##[1.5.6] - 2019-10-24\r\n- Project relink.\r\n\r\n##[1.5.5] - 2019-10-24\r\n- Mass Compile.\r\n\r\n##[1.5.4] - 2019-10-22\r\n- Bug Fix: The GUID comparison for orphaned pointers was being done incorrectly.\r\n\r\n##[1.5.3] - 2019-10-22\r\n- Added by ref wrapper for orphaned pointer search (see 1.5.0).\r\n\r\n##[1.5.2] - 2019-10-22\r\n- Bug fix: forgot to wire the \"Recurse\" flag at the by ref layer of the linked list.\r\n\r\n##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(484, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.5.10', '2019-12-02 16:50:21', '##[1.5.10] - 2019-12-2\r\n- Added ability to delete multiple attributes at once.\r\n\r\n##[1.5.9] - 2019-10-29\r\n- Added tag of \"5\" to attribute in build tree data.\r\n\r\n##[1.5.8] - 2019-10-28\r\n- Added read and write methods for attribute meta data to the by-ref class.\r\n\r\n##[1.5.7] - 2019-10-28\r\n- Added read and write methods for meta data to the by-ref class.\r\n\r\n##[1.5.6] - 2019-10-24\r\n- Project relink.\r\n\r\n##[1.5.5] - 2019-10-24\r\n- Mass Compile.\r\n\r\n##[1.5.4] - 2019-10-22\r\n- Bug Fix: The GUID comparison for orphaned pointers was being done incorrectly.\r\n\r\n##[1.5.3] - 2019-10-22\r\n- Added by ref wrapper for orphaned pointer search (see 1.5.0).\r\n\r\n##[1.5.2] - 2019-10-22\r\n- Bug fix: forgot to wire the \"Recurse\" flag at the by ref layer of the linked list.\r\n\r\n##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(485, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.5.11', '2019-12-20 15:22:46', '##[1.5.11] - 2019-12-20\r\n- Updated Format Attribute String to do a string length check on arrays flattened XML to prevent crashes on search for end of line.\r\n\r\n##[1.5.10] - 2019-12-2\r\n- Added ability to delete multiple attributes at once.\r\n\r\n##[1.5.9] - 2019-10-29\r\n- Added tag of \"5\" to attribute in build tree data.\r\n\r\n##[1.5.8] - 2019-10-28\r\n- Added read and write methods for attribute meta data to the by-ref class.\r\n\r\n##[1.5.7] - 2019-10-28\r\n- Added read and write methods for meta data to the by-ref class.\r\n\r\n##[1.5.6] - 2019-10-24\r\n- Project relink.\r\n\r\n##[1.5.5] - 2019-10-24\r\n- Mass Compile.\r\n\r\n##[1.5.4] - 2019-10-22\r\n- Bug Fix: The GUID comparison for orphaned pointers was being done incorrectly.\r\n\r\n##[1.5.3] - 2019-10-22\r\n- Added by ref wrapper for orphaned pointer search (see 1.5.0).\r\n\r\n##[1.5.2] - 2019-10-22\r\n- Bug fix: forgot to wire the \"Recurse\" flag at the by ref layer of the linked list.\r\n\r\n##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(486, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.6.0', '2020-03-18 02:02:31', '##[1.6.0] - 2020-03-17\r\n- There was a bug with copying an entire Linked List (as opposed to just lists within the greate linked list), this version fixes that bug so that top level linked list copy operations generate new GUIDs for the entire linked list.\r\n\r\n##[1.5.11] - 2019-12-20\r\n- Updated Format Attribute String to do a string length check on arrays flattened XML to prevent crashes on search for end of line.\r\n\r\n##[1.5.10] - 2019-12-2\r\n- Added ability to delete multiple attributes at once.\r\n\r\n##[1.5.9] - 2019-10-29\r\n- Added tag of \"5\" to attribute in build tree data.\r\n\r\n##[1.5.8] - 2019-10-28\r\n- Added read and write methods for attribute meta data to the by-ref class.\r\n\r\n##[1.5.7] - 2019-10-28\r\n- Added read and write methods for meta data to the by-ref class.\r\n\r\n##[1.5.6] - 2019-10-24\r\n- Project relink.\r\n\r\n##[1.5.5] - 2019-10-24\r\n- Mass Compile.\r\n\r\n##[1.5.4] - 2019-10-22\r\n- Bug Fix: The GUID comparison for orphaned pointers was being done incorrectly.\r\n\r\n##[1.5.3] - 2019-10-22\r\n- Added by ref wrapper for orphaned pointer search (see 1.5.0).\r\n\r\n##[1.5.2] - 2019-10-22\r\n- Bug fix: forgot to wire the \"Recurse\" flag at the by ref layer of the linked list.\r\n\r\n##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/variant (^1.0.1)'),
(487, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.7.0', '2020-05-04 03:53:32', '##[1.7.0] - 2020-05-04\r\n- Seperated the persistence bits into their own package\r\n- Depends on a data serialization package because binary strings dont work well when going between Windows and RT\r\n\r\n##[1.6.0] - 2020-03-17\r\n- There was a bug with copying an entire Linked List (as opposed to just lists within the greate linked list), this version fixes that bug so that top level linked list copy operations generate new GUIDs for the entire linked list.\r\n\r\n##[1.5.11] - 2019-12-20\r\n- Updated Format Attribute String to do a string length check on arrays flattened XML to prevent crashes on search for end of line.\r\n\r\n##[1.5.10] - 2019-12-2\r\n- Added ability to delete multiple attributes at once.\r\n\r\n##[1.5.9] - 2019-10-29\r\n- Added tag of \"5\" to attribute in build tree data.\r\n\r\n##[1.5.8] - 2019-10-28\r\n- Added read and write methods for attribute meta data to the by-ref class.\r\n\r\n##[1.5.7] - 2019-10-28\r\n- Added read and write methods for meta data to the by-ref class.\r\n\r\n##[1.5.6] - 2019-10-24\r\n- Project relink.\r\n\r\n##[1.5.5] - 2019-10-24\r\n- Mass Compile.\r\n\r\n##[1.5.4] - 2019-10-22\r\n- Bug Fix: The GUID comparison for orphaned pointers was being done incorrectly.\r\n\r\n##[1.5.3] - 2019-10-22\r\n- Added by ref wrapper for orphaned pointer search (see 1.5.0).\r\n\r\n##[1.5.2] - 2019-10-22\r\n- Bug fix: forgot to wire the \"Recurse\" flag at the by ref layer of the linked list.\r\n\r\n##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/persistence (^0.0.5-Beta),@cs/variant (^1.0.1)'),
(488, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.7.1', '2020-05-05 21:30:48', '##[1.7.1] - 2020-05-05\r\n- Updated to Persistence package v0.0.6\r\n\r\n##[1.7.0] - 2020-05-04\r\n- Seperated the persistence bits into their own package\r\n- Depends on a data serialization package because binary strings dont work well when going between Windows and RT\r\n\r\n##[1.6.0] - 2020-03-17\r\n- There was a bug with copying an entire Linked List (as opposed to just lists within the greate linked list), this version fixes that bug so that top level linked list copy operations generate new GUIDs for the entire linked list.\r\n\r\n##[1.5.11] - 2019-12-20\r\n- Updated Format Attribute String to do a string length check on arrays flattened XML to prevent crashes on search for end of line.\r\n\r\n##[1.5.10] - 2019-12-2\r\n- Added ability to delete multiple attributes at once.\r\n\r\n##[1.5.9] - 2019-10-29\r\n- Added tag of \"5\" to attribute in build tree data.\r\n\r\n##[1.5.8] - 2019-10-28\r\n- Added read and write methods for attribute meta data to the by-ref class.\r\n\r\n##[1.5.7] - 2019-10-28\r\n- Added read and write methods for meta data to the by-ref class.\r\n\r\n##[1.5.6] - 2019-10-24\r\n- Project relink.\r\n\r\n##[1.5.5] - 2019-10-24\r\n- Mass Compile.\r\n\r\n##[1.5.4] - 2019-10-22\r\n- Bug Fix: The GUID comparison for orphaned pointers was being done incorrectly.\r\n\r\n##[1.5.3] - 2019-10-22\r\n- Added by ref wrapper for orphaned pointer search (see 1.5.0).\r\n\r\n##[1.5.2] - 2019-10-22\r\n- Bug fix: forgot to wire the \"Recurse\" flag at the by ref layer of the linked list.\r\n\r\n##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/persistence (^0.0.6-Beta),@cs/variant (^1.0.1)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(489, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.7.2', '2020-05-10 01:38:31', '##[1.7.2] - 2020-05-09\r\n- Updated to Persistence package v0.0.7\r\n\r\n##[1.7.1] - 2020-05-05\r\n- Updated to Persistence package v0.0.6\r\n\r\n##[1.7.0] - 2020-05-04\r\n- Seperated the persistence bits into their own package\r\n- Depends on a data serialization package because binary strings dont work well when going between Windows and RT\r\n\r\n##[1.6.0] - 2020-03-17\r\n- There was a bug with copying an entire Linked List (as opposed to just lists within the greate linked list), this version fixes that bug so that top level linked list copy operations generate new GUIDs for the entire linked list.\r\n\r\n##[1.5.11] - 2019-12-20\r\n- Updated Format Attribute String to do a string length check on arrays flattened XML to prevent crashes on search for end of line.\r\n\r\n##[1.5.10] - 2019-12-2\r\n- Added ability to delete multiple attributes at once.\r\n\r\n##[1.5.9] - 2019-10-29\r\n- Added tag of \"5\" to attribute in build tree data.\r\n\r\n##[1.5.8] - 2019-10-28\r\n- Added read and write methods for attribute meta data to the by-ref class.\r\n\r\n##[1.5.7] - 2019-10-28\r\n- Added read and write methods for meta data to the by-ref class.\r\n\r\n##[1.5.6] - 2019-10-24\r\n- Project relink.\r\n\r\n##[1.5.5] - 2019-10-24\r\n- Mass Compile.\r\n\r\n##[1.5.4] - 2019-10-22\r\n- Bug Fix: The GUID comparison for orphaned pointers was being done incorrectly.\r\n\r\n##[1.5.3] - 2019-10-22\r\n- Added by ref wrapper for orphaned pointer search (see 1.5.0).\r\n\r\n##[1.5.2] - 2019-10-22\r\n- Bug fix: forgot to wire the \"Recurse\" flag at the by ref layer of the linked list.\r\n\r\n##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/persistence (^0.0.7-Beta),@cs/variant (^1.0.1)'),
(490, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.7.3', '2020-05-10 17:49:23', '##[1.7.3] - 2020-05-10\r\n- Updated to Persistence package v0.0.8\r\n\r\n##[1.7.2] - 2020-05-09\r\n- Updated to Persistence package v0.0.7\r\n\r\n##[1.7.1] - 2020-05-05\r\n- Updated to Persistence package v0.0.6\r\n\r\n##[1.7.0] - 2020-05-04\r\n- Seperated the persistence bits into their own package\r\n- Depends on a data serialization package because binary strings dont work well when going between Windows and RT\r\n\r\n##[1.6.0] - 2020-03-17\r\n- There was a bug with copying an entire Linked List (as opposed to just lists within the greate linked list), this version fixes that bug so that top level linked list copy operations generate new GUIDs for the entire linked list.\r\n\r\n##[1.5.11] - 2019-12-20\r\n- Updated Format Attribute String to do a string length check on arrays flattened XML to prevent crashes on search for end of line.\r\n\r\n##[1.5.10] - 2019-12-2\r\n- Added ability to delete multiple attributes at once.\r\n\r\n##[1.5.9] - 2019-10-29\r\n- Added tag of \"5\" to attribute in build tree data.\r\n\r\n##[1.5.8] - 2019-10-28\r\n- Added read and write methods for attribute meta data to the by-ref class.\r\n\r\n##[1.5.7] - 2019-10-28\r\n- Added read and write methods for meta data to the by-ref class.\r\n\r\n##[1.5.6] - 2019-10-24\r\n- Project relink.\r\n\r\n##[1.5.5] - 2019-10-24\r\n- Mass Compile.\r\n\r\n##[1.5.4] - 2019-10-22\r\n- Bug Fix: The GUID comparison for orphaned pointers was being done incorrectly.\r\n\r\n##[1.5.3] - 2019-10-22\r\n- Added by ref wrapper for orphaned pointer search (see 1.5.0).\r\n\r\n##[1.5.2] - 2019-10-22\r\n- Bug fix: forgot to wire the \"Recurse\" flag at the by ref layer of the linked list.\r\n\r\n##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/persistence (^0.0.8-Beta),@cs/variant (^1.0.1)'),
(491, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.7.4', '2020-05-11 11:03:00', '##[1.7.4] - 2020-05-11\r\n- Updated to Persistence package v0.0.9\r\n\r\n##[1.7.3] - 2020-05-10\r\n- Updated to Persistence package v0.0.8\r\n\r\n##[1.7.2] - 2020-05-09\r\n- Updated to Persistence package v0.0.7\r\n\r\n##[1.7.1] - 2020-05-05\r\n- Updated to Persistence package v0.0.6\r\n\r\n##[1.7.0] - 2020-05-04\r\n- Seperated the persistence bits into their own package\r\n- Depends on a data serialization package because binary strings dont work well when going between Windows and RT\r\n\r\n##[1.6.0] - 2020-03-17\r\n- There was a bug with copying an entire Linked List (as opposed to just lists within the greate linked list), this version fixes that bug so that top level linked list copy operations generate new GUIDs for the entire linked list.\r\n\r\n##[1.5.11] - 2019-12-20\r\n- Updated Format Attribute String to do a string length check on arrays flattened XML to prevent crashes on search for end of line.\r\n\r\n##[1.5.10] - 2019-12-2\r\n- Added ability to delete multiple attributes at once.\r\n\r\n##[1.5.9] - 2019-10-29\r\n- Added tag of \"5\" to attribute in build tree data.\r\n\r\n##[1.5.8] - 2019-10-28\r\n- Added read and write methods for attribute meta data to the by-ref class.\r\n\r\n##[1.5.7] - 2019-10-28\r\n- Added read and write methods for meta data to the by-ref class.\r\n\r\n##[1.5.6] - 2019-10-24\r\n- Project relink.\r\n\r\n##[1.5.5] - 2019-10-24\r\n- Mass Compile.\r\n\r\n##[1.5.4] - 2019-10-22\r\n- Bug Fix: The GUID comparison for orphaned pointers was being done incorrectly.\r\n\r\n##[1.5.3] - 2019-10-22\r\n- Added by ref wrapper for orphaned pointer search (see 1.5.0).\r\n\r\n##[1.5.2] - 2019-10-22\r\n- Bug fix: forgot to wire the \"Recurse\" flag at the by ref layer of the linked list.\r\n\r\n##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/persistence (^0.0.9-Beta),@cs/variant (^1.0.1)'),
(492, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.7.5', '2020-05-12 18:59:55', '##[1.7.5] - 2020-05-12\r\n- Fixed an uninitialized shift register in a low level method that was causing false errors\r\n\r\n##[1.7.4] - 2020-05-11\r\n- Updated to Persistence package v0.0.9\r\n\r\n##[1.7.3] - 2020-05-10\r\n- Updated to Persistence package v0.0.8\r\n\r\n##[1.7.2] - 2020-05-09\r\n- Updated to Persistence package v0.0.7\r\n\r\n##[1.7.1] - 2020-05-05\r\n- Updated to Persistence package v0.0.6\r\n\r\n##[1.7.0] - 2020-05-04\r\n- Seperated the persistence bits into their own package\r\n- Depends on a data serialization package because binary strings dont work well when going between Windows and RT\r\n\r\n##[1.6.0] - 2020-03-17\r\n- There was a bug with copying an entire Linked List (as opposed to just lists within the greate linked list), this version fixes that bug so that top level linked list copy operations generate new GUIDs for the entire linked list.\r\n\r\n##[1.5.11] - 2019-12-20\r\n- Updated Format Attribute String to do a string length check on arrays flattened XML to prevent crashes on search for end of line.\r\n\r\n##[1.5.10] - 2019-12-2\r\n- Added ability to delete multiple attributes at once.\r\n\r\n##[1.5.9] - 2019-10-29\r\n- Added tag of \"5\" to attribute in build tree data.\r\n\r\n##[1.5.8] - 2019-10-28\r\n- Added read and write methods for attribute meta data to the by-ref class.\r\n\r\n##[1.5.7] - 2019-10-28\r\n- Added read and write methods for meta data to the by-ref class.\r\n\r\n##[1.5.6] - 2019-10-24\r\n- Project relink.\r\n\r\n##[1.5.5] - 2019-10-24\r\n- Mass Compile.\r\n\r\n##[1.5.4] - 2019-10-22\r\n- Bug Fix: The GUID comparison for orphaned pointers was being done incorrectly.\r\n\r\n##[1.5.3] - 2019-10-22\r\n- Added by ref wrapper for orphaned pointer search (see 1.5.0).\r\n\r\n##[1.5.2] - 2019-10-22\r\n- Bug fix: forgot to wire the \"Recurse\" flag at the by ref layer of the linked list.\r\n\r\n##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/persistence (^0.0.9-Beta),@cs/variant (^1.0.1)'),
(493, 123, 'https://bitbucket.org/composedsystems/composed-linked-lists/src/master/', 'GPM', '1.7.6', '2020-08-11 12:27:33', '##[1.7.6] - 2020-05-12\r\n- Rev to to test GPM\r\n\r\n##[1.7.5] - 2020-05-12\r\n- Fixed an uninitialized shift register in a low level method that was causing false errors\r\n\r\n##[1.7.4] - 2020-05-11\r\n- Updated to Persistence package v0.0.9\r\n\r\n##[1.7.3] - 2020-05-10\r\n- Updated to Persistence package v0.0.8\r\n\r\n##[1.7.2] - 2020-05-09\r\n- Updated to Persistence package v0.0.7\r\n\r\n##[1.7.1] - 2020-05-05\r\n- Updated to Persistence package v0.0.6\r\n\r\n##[1.7.0] - 2020-05-04\r\n- Seperated the persistence bits into their own package\r\n- Depends on a data serialization package because binary strings dont work well when going between Windows and RT\r\n\r\n##[1.6.0] - 2020-03-17\r\n- There was a bug with copying an entire Linked List (as opposed to just lists within the greate linked list), this version fixes that bug so that top level linked list copy operations generate new GUIDs for the entire linked list.\r\n\r\n##[1.5.11] - 2019-12-20\r\n- Updated Format Attribute String to do a string length check on arrays flattened XML to prevent crashes on search for end of line.\r\n\r\n##[1.5.10] - 2019-12-2\r\n- Added ability to delete multiple attributes at once.\r\n\r\n##[1.5.9] - 2019-10-29\r\n- Added tag of \"5\" to attribute in build tree data.\r\n\r\n##[1.5.8] - 2019-10-28\r\n- Added read and write methods for attribute meta data to the by-ref class.\r\n\r\n##[1.5.7] - 2019-10-28\r\n- Added read and write methods for meta data to the by-ref class.\r\n\r\n##[1.5.6] - 2019-10-24\r\n- Project relink.\r\n\r\n##[1.5.5] - 2019-10-24\r\n- Mass Compile.\r\n\r\n##[1.5.4] - 2019-10-22\r\n- Bug Fix: The GUID comparison for orphaned pointers was being done incorrectly.\r\n\r\n##[1.5.3] - 2019-10-22\r\n- Added by ref wrapper for orphaned pointer search (see 1.5.0).\r\n\r\n##[1.5.2] - 2019-10-22\r\n- Bug fix: forgot to wire the \"Recurse\" flag at the by ref layer of the linked list.\r\n\r\n##[1.5.1] - 2019-10-22\r\n- Refactored the Copy Linked List method so that recursing through children of the copied Linked List optional, set by a flag.  The default value for the flag is True to keep backwards compatibility.\r\n\r\n##[1.5.0] - 2019-10-21\r\n- Added ability to search for ophaned pointers.\r\n\r\n##[1.4.7] - 2019-10-16\r\n- Refactored error propagation in reentrant VI\'s so that errors stack up instead of halting recursion\r\n\r\n##[1.4.6] - 2019-10-16\r\n- Fixed a bug in the XML Persist class, where attribute values saved as strings in the header were causing errors on load when the string value contained non alphanumeric characters\r\n\r\n##[1.4.5] - 2019-10-08\r\n- Mass Compile\r\n\r\n##[1.4.4] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser - Needed to specifically address the Refnum type\r\n\r\n##[1.4.3] - 2019-10-07\r\n- Refactored ability for attributes to store their value as well as their type in the xml persistence type, previously complex data types were being flattened to XML which was causing errors in the persistence parser\r\n\r\n##[1.4.2] - 2019-10-07\r\n- Added ability for attributes to store their value as well as their type in the xml persistence type\r\n\r\n##[1.4.1] - 2019-10-07\r\n- Fixed a bug in the Build Tree Data method that was causing the tree data builder to hang on complex data types\r\n\r\n##[1.4.0] - 2019-10-04\r\n- Moved file IO from Linked List library into Persistence library.\r\n- Updated color of Linked List Parent wire so that it isn\'t black and white\r\n\r\n##[1.3.0] - 2019-09-19\r\n- Unchecked \"Convert EOL\" for Saving and Loading the Linked List to and from disk.  The EOL Conversion was introducing issues in very specific circumstances with binary string data.\r\n\r\n##[1.2.2] - 2019-09-15\r\n- Fixed a bug in Set Attribute that was allowing a pointer value to be overwritten when a scalar value is inputted into an attribute that has been setup as a pointer\r\n- Updated Set Attribute to include a new input \"Update Pointer\" (default value is False).  Setting this flag to true for an attribute \"A\" that points to an attribute \"B\" will update the value of attribute \"B\".\r\n\r\n##[1.2.1] - 2019-09-09\r\n- Built against Look Up Table v0.1.0\r\n\r\n##[1.1.4] - 2019-09-05\r\n- Fixed a bug on Write Headers, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n- Fixed a bug on Write Name, an error will now be thrown if a bad GUID is passed in and the Linked List is not found\r\n\r\n##[1.1.3] - 2019-09-05\r\n- Fixed a bug on Move that was passing out the parent GUID instead of the moved items GUID\r\n- Fixed a bug on Add Linked List where the \"Replaced?\" flag output was hardcoded to False.\r\n\r\n##[1.1.2] - 2019-08-23\r\n- Refactored GUIDs so that they aren\'t GUID paths, now we are back to using GUIDs\r\n\r\n##[1.1.1] - 2019-08-23\r\n- Fixed an issue with copy and move where the Linked List definition was not being copied and/or moved with the Linked List\r\n\r\n##[1.1.0] - 2019-08-22\r\n- Refactored Linked Lists to use a GUID made up of a \"path\" of GUIDs built up from a Linked Lists ancestors GUIDs.  This is a big change but does not break backwards compatibility with other 1.x.x packages.\r\n\r\n##[1.0.9] - 2019-08-20\r\n- Fixed a bug with spaces in names of linked lists\r\n\r\n##[1.0.8] - 2019-08-20\r\n- Separated source from compiled code\r\n\r\n##[1.0.7] - 2019-08-19\r\n- Addresses [Issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml) - which is a bug that was reported in the Test Executive as [Issue #18](https://bitbucket.org/composedsystems/composed-test-executive/issues/18/attribute-id-and-tag-name-mean-the-same).\r\n\r\n##[1.0.6] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).  There was still a bug in v1.0.5.  There was one more change that needed to be made, setting the Flatten Pointer and Include Private flags to true on the Read Attributes method within the Copy Linked List Attributes.vi.\r\n\r\n##[1.0.5] - 2019-08-01\r\n- Addresses [Issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues?status=new&status=open) - which is a bug that was reported in the Test Executive as [Issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n\r\n##[1.0.4] - 2019-08-01\r\n- Addresses [Issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - which is a feature request to prevent the Build Tree Data Type method from showing the contents of a subroutine in the tree representing the linked list\r\n\r\n##[1.0.3] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #5) where copying a test was not propagating the new GUID to the header, so when the test exec was saved to disk the copied element would hold the GUID of the item it was copied from.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List was copied the header object for the new linked list was not storing the new GUID.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_HeaderGUID.vi\r\n\r\n##[1.0.2] - 2019-07-30\r\n- Fixes an issue reported in the Test Executive (issue #4) where copying a test was creating a blank attribute for that test.  It turns out that the bug was in the Linked List, and the root cause was that when a Linked List with a private attribute was copied the private attribute would copy over as an empty attribute.  This bug has been fixed and is covered by TestAPI_CopyLinkedList_PrivateAttributes.vi and TestAPI_CopyLinkedList_PublicAttributes.vi\r\n\r\n##[1.0.1] - 2019-07-24\r\n- Fixes a bug that was causing duplicates in the Attributes, Attribute Names, and Attribute IDs returned by the Get Child Attributes.vi of the Linked List class.  This was causing a problem with the Get List of Attributes by Type method of the by-ref class.\r\n\r\n## [1.0.0] - 2019-07-19\r\n- Initial Release\r\n- Fixes bug with Move Linked List method, attributes were being incorrectly copied to the destination parent on a move operation.\r\n\r\n## [0.0.38] - 2019-07-19\r\n- Last version before initial release', '@cs/lookup-table (^0.1.0),@cs/persistence (^0.0.9-Beta),@cs/variant (^1.0.1)'),
(494, 124, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/mediamongrels_lib_linx_raspberry_pi_addons/mediamongrels_lib_linx_raspberry_pi_addons-1.0.0.1.vip', 'VIPM', '1.0.0.1', '2020-05-20 05:58:07', '- Initial release', NULL),
(495, 125, 'https://bitbucket.org/composedsystems/listbox-extensions/src', 'GPM', '1.0.0', '2019-01-23 23:57:05', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [1.0.0] - 2019-01-23\r\n### Release Note\r\nFirst release of this component through GPM', NULL),
(496, 125, 'https://bitbucket.org/composedsystems/listbox-extensions/src', 'GPM', '1.0.1', '2019-02-14 16:25:04', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [1.0.1] - 2019-02-14\r\n###Changed\r\n- Added package whitelist to install only Source files\r\n\r\n## [1.0.0] - 2019-01-23\r\n### Release Note\r\nFirst release of this component through GPM', NULL),
(497, 126, 'https://bitbucket.org/composedsystems/composed-lookup-table', 'GPM', '0.0.0', '2019-02-06 02:28:20', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.0.0] - 2019-02-05\r\n### Added\r\n- Everything (Initial publication)', NULL),
(498, 126, 'https://bitbucket.org/composedsystems/composed-lookup-table', 'GPM', '0.0.1', '2019-02-07 17:09:46', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.0.1] - 2019-02-07\r\n### Changed\r\n- Performance optimization when deleting an item without type check\r\n\r\n## [0.0.0] - 2019-02-05\r\n### Added\r\n- Everything (Initial publication)', NULL),
(499, 126, 'https://bitbucket.org/composedsystems/composed-lookup-table', 'GPM', '0.0.2', '2019-02-14 20:16:58', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.0.2] - 2019-02-14\r\n### Removed\r\n- All tests and project file excluded from package\r\n\r\n## [0.0.1] - 2019-02-07\r\n### Changed\r\n- Performance optimization when deleting an item without type check\r\n\r\n## [0.0.0] - 2019-02-05\r\n### Added\r\n- Everything (Initial publication)', NULL),
(500, 126, 'https://bitbucket.org/composedsystems/composed-lookup-table', 'GPM', '0.0.3', '2019-02-27 00:01:54', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.0.3] - 2019-02-26\r\n### Fixed\r\n- Writing as variant now skips element type check (previously all variants failed overwrite)\r\n\r\n## [0.0.2] - 2019-02-14\r\n### Removed\r\n- All tests and project file excluded from package\r\n\r\n## [0.0.1] - 2019-02-07\r\n### Changed\r\n- Performance optimization when deleting an item without type check\r\n\r\n## [0.0.0] - 2019-02-05\r\n### Added\r\n- Everything (Initial publication)', NULL),
(501, 126, 'https://bitbucket.org/composedsystems/composed-lookup-table', 'GPM', '0.1.0', '2019-06-13 18:38:02', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.1.0] 2019-06-13\r\n### Added\r\n- Table lookup key can be any data type\r\n- Public API method to flatten any value to string key (Only call this method external to Read/Write if you need to leak the flattened key to the caller. For normal use, just wire any key directly to public Read/Write methods.)\r\n\r\n## [0.0.3] - 2019-02-26\r\n### Fixed\r\n- Writing as variant now skips element type check (previously all variants failed overwrite)\r\n\r\n## [0.0.2] - 2019-02-14\r\n### Removed\r\n- All tests and project file excluded from package\r\n\r\n## [0.0.1] - 2019-02-07\r\n### Changed\r\n- Performance optimization when deleting an item without type check\r\n\r\n## [0.0.0] - 2019-02-05\r\n### Added\r\n- Everything (Initial publication)', NULL),
(502, 127, 'https://gitlab.com/mgi/gpm-packages/markdown-error-log', 'GPM', '0.1.1', '2018-11-27 19:34:26', '## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/detailed-error (^0.1.0),@mgi/error-log (^0.1.0)'),
(503, 127, 'https://gitlab.com/mgi/gpm-packages/markdown-error-log', 'GPM', '0.1.2', '2018-12-17 20:51:57', '## 0.1.1\r\n\r\nUpdated Dependencies.\r\n\r\n## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/detailed-error (^0.1.0),@mgi/error-log (^0.1.2)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(504, 128, 'https://gitlab.com/mgi/gpm-packages/markdown-error-logger-panel', 'GPM', '0.1.2', '2018-11-27 19:43:14', '## 0.1.2\r\n\r\nAdded `Log Folder` Output to constructor.\r\n\r\n## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/error-file-logger-panel (^0.1.2),@mgi/markdown-error-log (^0.1.0),@mgi/markdown-viewer (^0.1.0)'),
(505, 128, 'https://gitlab.com/mgi/gpm-packages/markdown-error-logger-panel', 'GPM', '0.1.3', '2018-12-17 20:59:21', '## 0.1.3\r\n\r\nUpdated Dependencies.\r\n\r\n## 0.1.2\r\n\r\nAdded `Log Folder` Output to constructor.\r\n\r\n## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/error-file-logger-panel (^0.1.3),@mgi/markdown-error-log (^0.1.2),@mgi/markdown-viewer (^0.1.1)'),
(506, 129, 'https://gitlab.com/mgi/gpm-packages/markdown-viewer', 'GPM', '0.1.1', '2018-11-27 19:37:07', '## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/panel-actors (^3.0.3)'),
(507, 129, 'https://gitlab.com/mgi/gpm-packages/markdown-viewer', 'GPM', '0.2.0', '2019-08-07 20:14:02', '## 0.2.0\r\n\r\n- Implemented custom HTML Templates\r\n- Expanded link handling.\r\n\r\n## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/monitored-actor (^3.0.3),@mgi/panel-actors (^3.0.3)'),
(508, 130, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/erencan_tayanc_lib_material_icons_pack/erencan_tayanc_lib_material_icons_pack-1.0.0.2.vip', 'VIPM', '1.0.0.2', '2020-09-22 13:20:51', 'Material Icon Pack for LabVIEW.\nThis package includes Light & Dark Theme Icon Pack.\nWeb Site: https://erencantayanc.github.io/labviewmdiconpack/', NULL),
(509, 131, 'https://gitlab.com/mgi/gpm-packages/mdi-panels', 'GPM', '2.0.1', '2018-11-27 19:33:36', '## 2.0.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n# 2.0.0\r\n\r\nPort from VIPM', '@mgi/panel-manager (^2.0.0)'),
(510, 132, 'https://gitlab.com/mgi/gpm-packages/monitored-actor', 'GPM', '3.0.2', '2018-11-27 19:33:05', '## 3.0.2\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n# 3.0.1\r\n\r\nPort from VIPM', '@mgi/monitored-actor-core (^3.0.1)'),
(511, 132, 'https://gitlab.com/mgi/gpm-packages/monitored-actor', 'GPM', '3.0.3', '2019-06-13 17:22:26', '## 3.0.3\r\n\r\nFixed monitor crash when launching message logger.\r\n\r\n## 3.0.2\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n# 3.0.1\r\n\r\nPort from VIPM', '@mgi/monitored-actor-core (^3.0.1)'),
(512, 133, 'https://gitlab.com/mgi/gpm-packages/monitored-actor-core', 'GPM', '3.0.3', '2018-11-27 19:28:49', '## 3.0.3\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n# 3.0.2\r\n\r\nUpdated VI Documentation.s\r\n\r\n# 3.0.1\r\n\r\n* Misc performance improvements.\r\n* Removed calls to depricated methods.\r\n\r\n# 3.0.0\r\n\r\nInitial GPM release. Ported from the VIPM version.', NULL),
(513, 133, 'https://gitlab.com/mgi/gpm-packages/monitored-actor-core', 'GPM', '3.0.4', '2019-06-13 17:26:15', '## 3.0.4\r\n\r\nFixed Substitute Actor to properly pass private data to new actor type.\r\n\r\n## 3.0.3\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n# 3.0.2\r\n\r\nUpdated VI Documentation.s\r\n\r\n# 3.0.1\r\n\r\n* Misc performance improvements.\r\n* Removed calls to depricated methods.\r\n\r\n# 3.0.0\r\n\r\nInitial GPM release. Ported from the VIPM version.', NULL),
(514, 134, 'https://github.com/S5Solutions/MRU.git', 'GPM', '1.0.0', '2018-12-07 01:28:55', '', NULL),
(515, 134, 'https://github.com/S5Solutions/MRU.git', 'GPM', '1.0.1', '2018-12-11 22:32:49', '', NULL),
(516, 135, 'https://gitlab.com/mgi/gpm-packages/multi-panel-error-reporter', 'GPM', '0.1.2', '2018-11-27 19:40:53', '## 0.1.2\r\n\r\nChanged Labeling\r\n\r\n## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/panel-actor-error-reporter (^0.1.0)'),
(517, 135, 'https://gitlab.com/mgi/gpm-packages/multi-panel-error-reporter', 'GPM', '0.1.3', '2020-10-12 21:32:38', '## 0.1.3\r\n\r\nUse newer dependency\r\n\r\n## 0.1.2\r\n\r\nChanged Labeling\r\n\r\n## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/panel-actor-error-reporter (^0.1.2)'),
(518, 135, 'https://gitlab.com/mgi/gpm-packages/multi-panel-error-reporter', 'GPM', '0.1.4', '2020-10-12 22:43:35', '## 0.1.4\r\n\r\nUse newer dependency (panel-actor-error-reporter 0.1.3)\r\n\r\n## 0.1.3\r\n\r\nUse newer dependency (panel-actor-error-reporter 0.1.2)\r\n\r\n## 0.1.2\r\n\r\nChanged Labeling\r\n\r\n## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/panel-actor-error-reporter (^0.1.3)'),
(519, 136, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/lv_muparser/lv_muparser-2.0.1.1.vip', 'VIPM', '2.0.1.1', '2020-08-19 16:05:38', 'Added accessor for reading constants', 'lava_rsc_lava_palette>=1.0.0.1'),
(520, 137, 'https://bitbucket.org/composedsystems/mva-core/src/', 'GPM', '0.1.0', '2020-01-12 19:36:19', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.1.0] - 2020-01-12\r\n### Added\r\n- Option to launch headless (model-only) framework instance for PC or RT applications that do not implement views. Call **Construct Headless MVA Application.vim** to prepare a headless MVA application for launch.', '@cs/event-logger (^0.7.1),@cs/transport (^0.0.4)'),
(521, 137, 'https://bitbucket.org/composedsystems/mva-core/src/', 'GPM', '0.1.1', '2020-01-22 16:42:50', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.1.1] - 2020-01-22\r\n### Added\r\n- MonitoredMediator extends Mediator to allow zero or more bus monitors.\r\n- IBusMonitor class defines bus monitor interface and must-override method(s).\r\n### Changed\r\n- Made *Launch Nested Model.vim* non-malleable and DD.\r\n- *Write Pre-Addressed Publisher Messages* is now public (for call by ViewModel in full application).\r\n\r\n## [0.1.0] - 2020-01-12\r\n### Added\r\n- Option to launch headless (model-only) framework instance for PC or RT applications that do not implement views. Call **Construct Headless MVA Application.vim** to prepare a headless MVA application for launch.', '@cs/event-logger (^0.7.1),@cs/transport (^0.0.4)'),
(522, 137, 'https://bitbucket.org/composedsystems/mva-core/src/', 'GPM', '0.2.0', '2020-02-09 15:36:32', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.2.0] - 2020-02-09\r\n### Added\r\n- Model asynchronous orderly shutdown (Models defer stopping until they collect all tracked nested Models).\r\n### Changed\r\n- Logging conditional disable flags changed to REMOVE_FRAMEWORK_LOG and ENABLE_VERBOSE_LOG (both True/False).\r\n- Standard MVA launch, stop, collect logging enabled by default.\r\n\r\n## [0.1.1] - 2020-01-22\r\n### Added\r\n- MonitoredMediator extends Mediator to allow zero or more bus monitors.\r\n- IBusMonitor class defines bus monitor interface and must-override method(s).\r\n### Changed\r\n- Made *Launch Nested Model.vim* non-malleable and DD.\r\n- *Write Pre-Addressed Publisher Messages* is now public (for call by ViewModel in full application).\r\n\r\n## [0.1.0] - 2020-01-12\r\n### Added\r\n- Option to launch headless (model-only) framework instance for PC or RT applications that do not implement views. Call **Construct Headless MVA Application.vim** to prepare a headless MVA application for launch.', '@cs/actor-framework-messages (^0.2.0),@cs/event-logger (^0.7.1),@cs/transport (^0.0.4)'),
(523, 137, 'https://bitbucket.org/composedsystems/mva-core/src/', 'GPM', '0.2.1', '2020-04-03 18:15:22', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.2.1] - 2020-04-03\r\n### Fixed\r\n- Models no longer automatically stop for all errors (clearing errors in Handle Error.vi was still incorrectly triggering orderly shutdown).\r\n\r\n## [0.2.0] - 2020-02-09\r\n### Added\r\n- Model asynchronous orderly shutdown (Models defer stopping until they collect all tracked nested Models).\r\n### Changed\r\n- Logging conditional disable flags changed to REMOVE_FRAMEWORK_LOG and ENABLE_VERBOSE_LOG (both True/False).\r\n- Standard MVA launch, stop, collect logging enabled by default.\r\n\r\n## [0.1.1] - 2020-01-22\r\n### Added\r\n- MonitoredMediator extends Mediator to allow zero or more bus monitors.\r\n- IBusMonitor class defines bus monitor interface and must-override method(s).\r\n### Changed\r\n- Made *Launch Nested Model.vim* non-malleable and DD.\r\n- *Write Pre-Addressed Publisher Messages* is now public (for call by ViewModel in full application).\r\n\r\n## [0.1.0] - 2020-01-12\r\n### Added\r\n- Option to launch headless (model-only) framework instance for PC or RT applications that do not implement views. Call **Construct Headless MVA Application.vim** to prepare a headless MVA application for launch.', '@cs/actor-framework-messages (^0.2.0),@cs/event-logger (^0.7.1),@cs/transport (^0.0.4)'),
(524, 137, 'https://bitbucket.org/composedsystems/mva-core/src/', 'GPM', '0.2.2', '2020-05-02 14:43:11', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.2.2] - 2020-05-02\r\n### Fixed\r\n- Publish, subscribe, and lock requests now validate before sending (no empty names allowed), returning error 516002 for empty string.\r\n- If any unnamed (empty string) requests reach concrete Mediator, it logs and flushes the error (also 516002) without stopping.\r\n\r\n## [0.2.1] - 2020-04-03\r\n### Fixed\r\n- Models no longer automatically stop for all errors (clearing errors in Handle Error.vi was still incorrectly triggering orderly shutdown).\r\n\r\n## [0.2.0] - 2020-02-09\r\n### Added\r\n- Model asynchronous orderly shutdown (Models defer stopping until they collect all tracked nested Models).\r\n### Changed\r\n- Logging conditional disable flags changed to REMOVE_FRAMEWORK_LOG and ENABLE_VERBOSE_LOG (both True/False).\r\n- Standard MVA launch, stop, collect logging enabled by default.\r\n\r\n## [0.1.1] - 2020-01-22\r\n### Added\r\n- MonitoredMediator extends Mediator to allow zero or more bus monitors.\r\n- IBusMonitor class defines bus monitor interface and must-override method(s).\r\n### Changed\r\n- Made *Launch Nested Model.vim* non-malleable and DD.\r\n- *Write Pre-Addressed Publisher Messages* is now public (for call by ViewModel in full application).\r\n\r\n## [0.1.0] - 2020-01-12\r\n### Added\r\n- Option to launch headless (model-only) framework instance for PC or RT applications that do not implement views. Call **Construct Headless MVA Application.vim** to prepare a headless MVA application for launch.', '@cs/actor-framework-messages (^0.2.0),@cs/event-logger (^0.7.1),@cs/transport (^0.0.4)'),
(525, 137, 'https://bitbucket.org/composedsystems/mva-core/src/', 'GPM', '0.3.0', '2020-06-22 19:54:06', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.3.0] - 2020-06-22\r\n### Added\r\n- Added malleable method options to Observe API.\r\n### Changed\r\n- Minor changes to Model orderly shutdown logging.\r\n### Fixed\r\n- *Request Data Persistence.vi* did not provided path input connector.\r\n\r\n## [0.2.2] - 2020-05-02\r\n### Fixed\r\n- Publish, subscribe, and lock requests now validate before sending (no empty names allowed), returning error 516002 for empty string.\r\n- If any unnamed (empty string) requests reach concrete Mediator, it logs and flushes the error (also 516002) without stopping.\r\n\r\n## [0.2.1] - 2020-04-03\r\n### Fixed\r\n- Models no longer automatically stop for all errors (clearing errors in Handle Error.vi was still incorrectly triggering orderly shutdown).\r\n\r\n## [0.2.0] - 2020-02-09\r\n### Added\r\n- Model asynchronous orderly shutdown (Models defer stopping until they collect all tracked nested Models).\r\n### Changed\r\n- Logging conditional disable flags changed to REMOVE_FRAMEWORK_LOG and ENABLE_VERBOSE_LOG (both True/False).\r\n- Standard MVA launch, stop, collect logging enabled by default.\r\n\r\n## [0.1.1] - 2020-01-22\r\n### Added\r\n- MonitoredMediator extends Mediator to allow zero or more bus monitors.\r\n- IBusMonitor class defines bus monitor interface and must-override method(s).\r\n### Changed\r\n- Made *Launch Nested Model.vim* non-malleable and DD.\r\n- *Write Pre-Addressed Publisher Messages* is now public (for call by ViewModel in full application).\r\n\r\n## [0.1.0] - 2020-01-12\r\n### Added\r\n- Option to launch headless (model-only) framework instance for PC or RT applications that do not implement views. Call **Construct Headless MVA Application.vim** to prepare a headless MVA application for launch.', '@cs/actor-framework-messages (^0.2.1),@cs/event-logger (^0.8.0),@cs/transport (^0.0.4)'),
(526, 137, 'https://bitbucket.org/composedsystems/mva-core/src/', 'GPM', '0.4.0', '2020-06-26 18:22:31', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.4.0] - 2020-06-26\r\n### Added\r\n- Added ability for bus monitors to track and forget subscribers.\r\n### Changed\r\n- Added datum name input and renamed \'Read Bus Monitor Interface\' to \'Prepare Bus Monitor Interface\'.\r\n\r\n## [0.3.0] - 2020-06-22\r\n### Added\r\n- Added malleable method options to Observe API.\r\n### Changed\r\n- Minor changes to Model orderly shutdown logging.\r\n### Fixed\r\n- *Request Data Persistence.vi* did not provided path input connector.\r\n\r\n## [0.2.2] - 2020-05-02\r\n### Fixed\r\n- Publish, subscribe, and lock requests now validate before sending (no empty names allowed), returning error 516002 for empty string.\r\n- If any unnamed (empty string) requests reach concrete Mediator, it logs and flushes the error (also 516002) without stopping.\r\n\r\n## [0.2.1] - 2020-04-03\r\n### Fixed\r\n- Models no longer automatically stop for all errors (clearing errors in Handle Error.vi was still incorrectly triggering orderly shutdown).\r\n\r\n## [0.2.0] - 2020-02-09\r\n### Added\r\n- Model asynchronous orderly shutdown (Models defer stopping until they collect all tracked nested Models).\r\n### Changed\r\n- Logging conditional disable flags changed to REMOVE_FRAMEWORK_LOG and ENABLE_VERBOSE_LOG (both True/False).\r\n- Standard MVA launch, stop, collect logging enabled by default.\r\n\r\n## [0.1.1] - 2020-01-22\r\n### Added\r\n- MonitoredMediator extends Mediator to allow zero or more bus monitors.\r\n- IBusMonitor class defines bus monitor interface and must-override method(s).\r\n### Changed\r\n- Made *Launch Nested Model.vim* non-malleable and DD.\r\n- *Write Pre-Addressed Publisher Messages* is now public (for call by ViewModel in full application).\r\n\r\n## [0.1.0] - 2020-01-12\r\n### Added\r\n- Option to launch headless (model-only) framework instance for PC or RT applications that do not implement views. Call **Construct Headless MVA Application.vim** to prepare a headless MVA application for launch.', '@cs/actor-framework-messages (^0.2.1),@cs/event-logger (^0.8.0),@cs/transport (^0.0.4)'),
(527, 137, 'https://bitbucket.org/composedsystems/mva-core/src/', 'GPM', '0.5.0', '2020-08-26 21:12:48', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.5.0] - 2020-08-26\r\n### Changed\r\n- Reworked error shutdown semantics for consistency with Actor Framework (orderly shutdown or not, Models E-stop nested Models and Actors on error and propagate original error to caller).\r\n\r\n## [0.4.0] - 2020-06-26\r\n### Added\r\n- Added ability for bus monitors to track and forget subscribers.\r\n### Changed\r\n- Added datum name input and renamed \'Read Bus Monitor Interface\' to \'Prepare Bus Monitor Interface\'.\r\n\r\n## [0.3.0] - 2020-06-22\r\n### Added\r\n- Added malleable method options to Observe API.\r\n### Changed\r\n- Minor changes to Model orderly shutdown logging.\r\n### Fixed\r\n- *Request Data Persistence.vi* did not provided path input connector.\r\n\r\n## [0.2.2] - 2020-05-02\r\n### Fixed\r\n- Publish, subscribe, and lock requests now validate before sending (no empty names allowed), returning error 516002 for empty string.\r\n- If any unnamed (empty string) requests reach concrete Mediator, it logs and flushes the error (also 516002) without stopping.\r\n\r\n## [0.2.1] - 2020-04-03\r\n### Fixed\r\n- Models no longer automatically stop for all errors (clearing errors in Handle Error.vi was still incorrectly triggering orderly shutdown).\r\n\r\n## [0.2.0] - 2020-02-09\r\n### Added\r\n- Model asynchronous orderly shutdown (Models defer stopping until they collect all tracked nested Models).\r\n### Changed\r\n- Logging conditional disable flags changed to REMOVE_FRAMEWORK_LOG and ENABLE_VERBOSE_LOG (both True/False).\r\n- Standard MVA launch, stop, collect logging enabled by default.\r\n\r\n## [0.1.1] - 2020-01-22\r\n### Added\r\n- MonitoredMediator extends Mediator to allow zero or more bus monitors.\r\n- IBusMonitor class defines bus monitor interface and must-override method(s).\r\n### Changed\r\n- Made *Launch Nested Model.vim* non-malleable and DD.\r\n- *Write Pre-Addressed Publisher Messages* is now public (for call by ViewModel in full application).\r\n\r\n## [0.1.0] - 2020-01-12\r\n### Added\r\n- Option to launch headless (model-only) framework instance for PC or RT applications that do not implement views. Call **Construct Headless MVA Application.vim** to prepare a headless MVA application for launch.', '@cs/actor-framework-messages (^0.2.1),@cs/event-logger (^0.8.0),@cs/transport (^0.0.4)'),
(528, 138, 'https://bitbucket.org/composedsystems/composed-dialog-box/src/master/', 'GPM', '0.0.1-Beta', '2020-03-26 12:10:30', '## [0.0.1] - 2020-03-26-Beta\r\n- Initial release of Dialog Box extension for MVA-Viewable\r\n- No readme in place yet\r\n- No testing in place', '@cs/mva-viewable (^0.1.0)'),
(529, 138, 'https://bitbucket.org/composedsystems/composed-dialog-box/src/master/', 'GPM', '0.0.2-Beta', '2020-03-26 13:09:49', '## [0.0.2] - 2020-03-26\r\n- Fixed a linking issue with OneButtonDialog that was locking libraries\r\n\r\n## [0.0.1] - 2020-03-26-Beta\r\n- Initial release of Dialog Box extension for MVA-Viewable\r\n- No readme in place yet\r\n- No testing in place', '@cs/mva-viewable (^0.1.0)'),
(530, 138, 'https://bitbucket.org/composedsystems/composed-dialog-box/src/master/', 'GPM', '0.1.0-Beta', '2020-03-31 12:59:47', '## [0.1.0] - 2020-03-31\r\n- Refactored inheritance of IDialogBox to be a child of IViewable\r\n- Renamed IDialogBoxVieable to IDialogBoxViewManager and refactored to be a child of ViewManager\r\n\r\n## [0.0.2] - 2020-03-26\r\n- Fixed a linking issue with OneButtonDialog that was locking libraries\r\n\r\n## [0.0.1] - 2020-03-26-Beta\r\n- Initial release of Dialog Box extension for MVA-Viewable\r\n- No readme in place yet\r\n- No testing in place', '@cs/mva-viewable (^0.1.0)'),
(531, 138, 'https://bitbucket.org/composedsystems/composed-dialog-box/src/master/', 'GPM', '0.1.1-Beta', '2020-04-07 02:17:08', '## [0.1.1] - 2020-04-06\r\n- Updated to depend on MVA-Viewable 0.1.1\r\n\r\n## [0.1.0] - 2020-03-31\r\n- Refactored inheritance of IDialogBox to be a child of IViewable\r\n- Renamed IDialogBoxVieable to IDialogBoxViewManager and refactored to be a child of ViewManager\r\n\r\n## [0.0.2] - 2020-03-26\r\n- Fixed a linking issue with OneButtonDialog that was locking libraries\r\n\r\n## [0.0.1] - 2020-03-26-Beta\r\n- Initial release of Dialog Box extension for MVA-Viewable\r\n- No readme in place yet\r\n- No testing in place', '@cs/mva-viewable (^0.1.1)'),
(532, 139, 'https://bitbucket.org/composedsystems/mva-framework/src/', 'GPM', '1.8.2', '2019-02-14 17:34:56', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [1.8.2] - 2019-02-14\r\n### Changed\r\n- Migrated from VI Package to G Package\r\n- Relinked dependencies to G Packages\r\n### Removed\r\n- TimedAverageBuffer and its associated SubscriptionPolicy (which no one used)', '@cs/listbox (^1.0.0),@cs/variant (^1.0.0)'),
(533, 139, 'https://bitbucket.org/composedsystems/mva-framework/src/', 'GPM', '1.8.3', '2019-02-14 18:00:24', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [1.8.3] - 2019-02-14\r\n### Changed\r\n- Moved all remaining tests out of Source folder\r\n\r\n## [1.8.2] - 2019-02-14\r\n### Changed\r\n- Migrated from VI Package to G Package\r\n- Relinked dependencies to G Packages\r\n### Removed\r\n- TimedAverageBuffer and its associated SubscriptionPolicy (which no one used)', '@cs/listbox (^1.0.0),@cs/variant (^1.0.0)'),
(534, 139, 'https://bitbucket.org/composedsystems/mva-framework/src/', 'GPM', '1.8.4', '2019-02-14 18:28:13', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [1.8.4] - 2019-02-14\r\n### Fixed\r\n- Bad link to listbox dependency (was failing to relink during mva package install)\r\n\r\n## [1.8.3] - 2019-02-14\r\n### Changed\r\n- Moved all remaining tests out of Source folder\r\n\r\n## [1.8.2] - 2019-02-14\r\n### Changed\r\n- Migrated from VI Package to G Package\r\n- Relinked dependencies to G Packages\r\n### Removed\r\n- TimedAverageBuffer and its associated SubscriptionPolicy (which no one used)', '@cs/listbox (^1.0.1),@cs/variant (^1.0.1)'),
(535, 139, 'https://bitbucket.org/composedsystems/mva-framework/src/', 'GPM', '1.9.0', '2019-02-14 20:53:46', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [1.9.0] - 2019-02-14\r\n### Changed\r\n- Replaced CurrentValueTable dependency (VIP) with malleable LookupTable (G Package)\r\n\r\n## [1.8.4] - 2019-02-14\r\n### Fixed\r\n- Bad link to listbox dependency (was failing to relink during mva package install)\r\n\r\n## [1.8.3] - 2019-02-14\r\n### Changed\r\n- Moved all remaining tests out of Source folder\r\n\r\n## [1.8.2] - 2019-02-14\r\n### Changed\r\n- Migrated from VI Package to G Package\r\n- Relinked dependencies to G Packages\r\n### Removed\r\n- TimedAverageBuffer and its associated SubscriptionPolicy (which no one used)', '@cs/listbox (^1.0.1),@cs/lookup-table (^0.0.2),@cs/variant (^1.0.1)'),
(536, 139, 'https://bitbucket.org/composedsystems/mva-framework/src/', 'GPM', '1.9.1', '2019-02-15 14:25:18', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [1.9.1] - 2019-02-14\r\n### Version Note\r\nAll prior GPM versions are incomplete, badly linked, or missing dependencies\r\n### Changed\r\n- Replaced CurrentValueTable dependency (VIP) with malleable LookupTable (G Package)\r\n- Moved all remaining tests out of Source folder\r\n- Migrated from VI Package to G Package\r\n- Relinked dependencies to G Packages\r\n### Removed\r\n- TimedAverageBuffer and its associated SubscriptionPolicy (which no one used)', '@cs/listbox (^1.0.1),@cs/lookup-table (^0.0.2),@cs/variant (^1.0.1)'),
(537, 139, 'https://bitbucket.org/composedsystems/mva-framework/src/', 'GPM', '2.0.0', '2019-03-21 18:16:55', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [2.0.0] - 2019-03-21\r\n### Added\r\n- Debug logging (new dependency on @cs/event-logger)\r\n- Project flag to conditionally remove all logging (REMOVE_DEBUG_LOGGING)\r\n##CHANGED\r\n- Moved location of applicaiton template on disk so it installs with G Package\r\n### Removed\r\n- Deprecated framework accessors\r\n- ApplicationStyle injection (removed from framework API)\r\n\r\n## [1.9.1] - 2019-02-14\r\n### Version Note\r\nAll prior GPM versions are incomplete, badly linked, or missing dependencies\r\n### Changed\r\n- Replaced CurrentValueTable dependency (VIP) with malleable LookupTable (G Package)\r\n- Moved all remaining tests out of Source folder\r\n- Migrated from VI Package to G Package\r\n- Relinked dependencies to G Packages\r\n### Removed\r\n- TimedAverageBuffer and its associated SubscriptionPolicy (which no one used)', '@cs/event-logger (^0.4.0),@cs/listbox (^1.0.1),@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(538, 139, 'https://bitbucket.org/composedsystems/mva-framework/src/', 'GPM', '2.1.0', '2019-05-02 16:39:01', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [2.1.0] - 2019-05-02\r\n### Changed\r\n- Framework logging now uses explicit log reference (now local, was global)\r\n### Added\r\n- Set Minimum Panel Size message to IViewable\r\n- In-placeness optimization of subscription policy\r\n\r\n## [2.0.0] - 2019-03-21\r\n### Added\r\n- Debug logging (new dependency on @cs/event-logger)\r\n- Project flag to conditionally remove all logging (REMOVE_DEBUG_LOGGING)\r\n### Changed\r\n- Moved location of applicaiton template on disk so it installs with G Package\r\n### Removed\r\n- Deprecated framework accessors\r\n- ApplicationStyle injection (removed from framework API)\r\n\r\n## [1.9.1] - 2019-02-14\r\n### Version Note\r\nAll prior GPM versions are incomplete, badly linked, or missing dependencies\r\n### Changed\r\n- Replaced CurrentValueTable dependency (VIP) with malleable LookupTable (G Package)\r\n- Moved all remaining tests out of Source folder\r\n- Migrated from VI Package to G Package\r\n- Relinked dependencies to G Packages\r\n### Removed\r\n- TimedAverageBuffer and its associated SubscriptionPolicy (which no one used)', '@cs/actor-framework-messages (^0.1.0),@cs/event-logger (^0.5.18),@cs/listbox (^1.0.1),@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(539, 139, 'https://bitbucket.org/composedsystems/mva-framework/src/', 'GPM', '2.1.1', '2019-05-10 17:26:32', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [2.1.0] - 2019-05-02\r\n### Changed\r\n- Minor in-placeness optimization to MediatorBusMonitor\r\n### Removed\r\n- Deprecated (and disabled) Observe Data method from concrete MediatorBusMonitor\r\n### Fixed\r\n- Stale dependency links in obsolete code and unit tests\r\n\r\n## [2.1.0] - 2019-05-02\r\n### Changed\r\n- Framework logging now uses explicit log reference (now local, was global)\r\n### Added\r\n- Set Minimum Panel Size message to IViewable\r\n- In-placeness optimization of subscription policy\r\n\r\n## [2.0.0] - 2019-03-21\r\n### Added\r\n- Debug logging (new dependency on @cs/event-logger)\r\n- Project flag to conditionally remove all logging (REMOVE_DEBUG_LOGGING)\r\n### Changed\r\n- Moved location of applicaiton template on disk so it installs with G Package\r\n### Removed\r\n- Deprecated framework accessors\r\n- ApplicationStyle injection (removed from framework API)\r\n\r\n## [1.9.1] - 2019-02-14\r\n### Version Note\r\nAll prior GPM versions are incomplete, badly linked, or missing dependencies\r\n### Changed\r\n- Replaced CurrentValueTable dependency (VIP) with malleable LookupTable (G Package)\r\n- Moved all remaining tests out of Source folder\r\n- Migrated from VI Package to G Package\r\n- Relinked dependencies to G Packages\r\n### Removed\r\n- TimedAverageBuffer and its associated SubscriptionPolicy (which no one used)', '@cs/actor-framework-messages (^0.1.0),@cs/event-logger (^0.5.18),@cs/listbox (^1.0.1),@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(540, 139, 'https://bitbucket.org/composedsystems/mva-framework/src/', 'GPM', '2.1.2', '2019-05-10 17:29:05', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [2.1.2] - 2019-05-10\r\n(2.1.1 was an errant publication with an inaccurate Changelog version and date. Source is identical)\r\n### Changed\r\n- Minor in-placeness optimization to MediatorBusMonitor\r\n### Removed\r\n- Deprecated (and disabled) Observe Data method from concrete MediatorBusMonitor\r\n### Fixed\r\n- Stale dependency links in obsolete code and unit tests\r\n\r\n## [2.1.0] - 2019-05-02\r\n### Changed\r\n- Framework logging now uses explicit log reference (now local, was global)\r\n### Added\r\n- Set Minimum Panel Size message to IViewable\r\n- In-placeness optimization of subscription policy\r\n\r\n## [2.0.0] - 2019-03-21\r\n### Added\r\n- Debug logging (new dependency on @cs/event-logger)\r\n- Project flag to conditionally remove all logging (REMOVE_DEBUG_LOGGING)\r\n### Changed\r\n- Moved location of applicaiton template on disk so it installs with G Package\r\n### Removed\r\n- Deprecated framework accessors\r\n- ApplicationStyle injection (removed from framework API)\r\n\r\n## [1.9.1] - 2019-02-14\r\n### Version Note\r\nAll prior GPM versions are incomplete, badly linked, or missing dependencies\r\n### Changed\r\n- Replaced CurrentValueTable dependency (VIP) with malleable LookupTable (G Package)\r\n- Moved all remaining tests out of Source folder\r\n- Migrated from VI Package to G Package\r\n- Relinked dependencies to G Packages\r\n### Removed\r\n- TimedAverageBuffer and its associated SubscriptionPolicy (which no one used)', '@cs/actor-framework-messages (^0.1.0),@cs/event-logger (^0.5.18),@cs/listbox (^1.0.1),@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(541, 139, 'https://bitbucket.org/composedsystems/mva-framework/src/', 'GPM', '2.1.3', '2019-08-02 19:08:58', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [2.1.3] - 2019-08-02\r\n### Fixed\r\n- Incorrect default value of IViewable:Bind Terminal Enabled State (label and value now match *Disabled and Grayed Out*)\r\n- Community scoping issue that broke deployments after LV2017 (added friend relationship)\r\n\r\n## [2.1.2] - 2019-05-10\r\n(2.1.1 was an errant publication with an inaccurate Changelog version and date. Source is identical)\r\n### Changed\r\n- Minor in-placeness optimization to MediatorBusMonitor\r\n### Removed\r\n- Deprecated (and disabled) Observe Data method from concrete MediatorBusMonitor\r\n### Fixed\r\n- Stale dependency links in obsolete code and unit tests\r\n\r\n## [2.1.0] - 2019-05-02\r\n### Changed\r\n- Framework logging now uses explicit log reference (now local, was global)\r\n### Added\r\n- Set Minimum Panel Size message to IViewable\r\n- In-placeness optimization of subscription policy\r\n\r\n## [2.0.0] - 2019-03-21\r\n### Added\r\n- Debug logging (new dependency on @cs/event-logger)\r\n- Project flag to conditionally remove all logging (REMOVE_DEBUG_LOGGING)\r\n### Changed\r\n- Moved location of applicaiton template on disk so it installs with G Package\r\n### Removed\r\n- Deprecated framework accessors\r\n- ApplicationStyle injection (removed from framework API)\r\n\r\n## [1.9.1] - 2019-02-14\r\n### Version Note\r\nAll prior GPM versions are incomplete, badly linked, or missing dependencies\r\n### Changed\r\n- Replaced CurrentValueTable dependency (VIP) with malleable LookupTable (G Package)\r\n- Moved all remaining tests out of Source folder\r\n- Migrated from VI Package to G Package\r\n- Relinked dependencies to G Packages\r\n### Removed\r\n- TimedAverageBuffer and its associated SubscriptionPolicy (which no one used)', '@cs/actor-framework-messages (^0.1.0),@cs/event-logger (^0.5.18),@cs/listbox (^1.0.1),@cs/lookup-table (^0.0.3),@cs/variant (^1.0.1)'),
(542, 139, 'https://bitbucket.org/composedsystems/mva-framework/src/', 'GPM', '2.2.0', '2019-09-06 18:40:41', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [2.2.0] - 2019-09-06\r\n### Changed\r\n- Default framework log state is *no logging*. Minor log format cleanup. To enable framework log, set **ENABLE_FRAMEWORK_LOG** conditional flag = True\r\n### Fixed\r\n- Community scoping issue (I somehow messed this up again in the last release)\r\n### Deprecated\r\n- Old-fashioned polymorphic Request Synchronous Data API (replace calls with malleable method)\r\n### Added\r\n- Malleable Request Synchronous Data compatible with all types\r\n\r\n## [2.1.3] - 2019-08-02\r\n### Fixed\r\n- Incorrect default value of IViewable:Bind Terminal Enabled State (label and value now match *Disabled and Grayed Out*)\r\n- Community scoping issue that broke deployments after LV2017 (added friend relationship)\r\n\r\n## [2.1.2] - 2019-05-10\r\n(2.1.1 was an errant publication with an inaccurate Changelog version and date. Source is identical)\r\n### Changed\r\n- Minor in-placeness optimization to MediatorBusMonitor\r\n### Removed\r\n- Deprecated (and disabled) Observe Data method from concrete MediatorBusMonitor\r\n### Fixed\r\n- Stale dependency links in obsolete code and unit tests\r\n\r\n## [2.1.0] - 2019-05-02\r\n### Changed\r\n- Framework logging now uses explicit log reference (now local, was global)\r\n### Added\r\n- Set Minimum Panel Size message to IViewable\r\n- In-placeness optimization of subscription policy\r\n\r\n## [2.0.0] - 2019-03-21\r\n### Added\r\n- Debug logging (new dependency on @cs/event-logger)\r\n- Project flag to conditionally remove all logging (REMOVE_DEBUG_LOGGING)\r\n### Changed\r\n- Moved location of applicaiton template on disk so it installs with G Package\r\n### Removed\r\n- Deprecated framework accessors\r\n- ApplicationStyle injection (removed from framework API)\r\n\r\n## [1.9.1] - 2019-02-14\r\n### Version Note\r\nAll prior GPM versions are incomplete, badly linked, or missing dependencies\r\n### Changed\r\n- Replaced CurrentValueTable dependency (VIP) with malleable LookupTable (G Package)\r\n- Moved all remaining tests out of Source folder\r\n- Migrated from VI Package to G Package\r\n- Relinked dependencies to G Packages\r\n### Removed\r\n- TimedAverageBuffer and its associated SubscriptionPolicy (which no one used)', '@cs/actor-framework-messages (^0.1.0),@cs/event-logger (^0.7.1),@cs/listbox (^1.0.1),@cs/lookup-table (^0.1.0),@cs/transport (^0.0.2),@cs/variant (^1.0.1)'),
(543, 139, 'https://bitbucket.org/composedsystems/mva-framework/src/', 'GPM', '2.2.1', '2019-09-09 18:34:13', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [2.2.1] - 2019-09-09\r\n### Fixed\r\n- Broken ancestry for all Notification Msg descendants (temporary deprecated ancestor to be removed in major version 3)\r\n\r\n## [2.2.0] - 2019-09-06 - DO NOT USE THIS RELEASE (see 2.2.1)\r\n### Changed\r\n- Default framework log state is *no logging*. Minor log format cleanup. To enable framework log, set **ENABLE_FRAMEWORK_LOG** conditional flag = True\r\n### Fixed\r\n- Community scoping issue (I somehow messed this up again in the last release)\r\n### Deprecated\r\n- Old-fashioned polymorphic Request Synchronous Data API (replace calls with malleable method)\r\n### Added\r\n- Malleable Request Synchronous Data compatible with all types\r\n\r\n## [2.1.3] - 2019-08-02\r\n### Fixed\r\n- Incorrect default value of IViewable:Bind Terminal Enabled State (label and value now match *Disabled and Grayed Out*)\r\n- Community scoping issue that broke deployments after LV2017 (added friend relationship)\r\n\r\n## [2.1.2] - 2019-05-10\r\n(2.1.1 was an errant publication with an inaccurate Changelog version and date. Source is identical)\r\n### Changed\r\n- Minor in-placeness optimization to MediatorBusMonitor\r\n### Removed\r\n- Deprecated (and disabled) Observe Data method from concrete MediatorBusMonitor\r\n### Fixed\r\n- Stale dependency links in obsolete code and unit tests\r\n\r\n## [2.1.0] - 2019-05-02\r\n### Changed\r\n- Framework logging now uses explicit log reference (now local, was global)\r\n### Added\r\n- Set Minimum Panel Size message to IViewable\r\n- In-placeness optimization of subscription policy\r\n\r\n## [2.0.0] - 2019-03-21\r\n### Added\r\n- Debug logging (new dependency on @cs/event-logger)\r\n- Project flag to conditionally remove all logging (REMOVE_DEBUG_LOGGING)\r\n### Changed\r\n- Moved location of applicaiton template on disk so it installs with G Package\r\n### Removed\r\n- Deprecated framework accessors\r\n- ApplicationStyle injection (removed from framework API)\r\n\r\n## [1.9.1] - 2019-02-14\r\n### Version Note\r\nAll prior GPM versions are incomplete, badly linked, or missing dependencies\r\n### Changed\r\n- Replaced CurrentValueTable dependency (VIP) with malleable LookupTable (G Package)\r\n- Moved all remaining tests out of Source folder\r\n- Migrated from VI Package to G Package\r\n- Relinked dependencies to G Packages\r\n### Removed\r\n- TimedAverageBuffer and its associated SubscriptionPolicy (which no one used)', '@cs/actor-framework-messages (^0.1.0),@cs/event-logger (^0.7.1),@cs/listbox (^1.0.1),@cs/lookup-table (^0.1.0),@cs/transport (^0.0.2),@cs/variant (^1.0.1)'),
(544, 139, 'https://bitbucket.org/composedsystems/mva-framework/src/', 'GPM', '2.2.2', '2019-09-09 20:58:06', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [2.2.2] - 2019-09-09\r\n### Fixed\r\n- Incorrect Transport version dependency (should be 0.0.3)\r\n\r\n## [2.2.1] - 2019-09-09\r\n### Fixed\r\n- Broken ancestry for all Notification Msg descendants (temporary deprecated ancestor to be removed in major version 3)\r\n\r\n## [2.2.0] - 2019-09-06 - DO NOT USE THIS RELEASE (see 2.2.1)\r\n### Changed\r\n- Default framework log state is *no logging*. Minor log format cleanup. To enable framework log, set **ENABLE_FRAMEWORK_LOG** conditional flag = True\r\n### Fixed\r\n- Community scoping issue (I somehow messed this up again in the last release)\r\n### Deprecated\r\n- Old-fashioned polymorphic Request Synchronous Data API (replace calls with malleable method)\r\n### Added\r\n- Malleable Request Synchronous Data compatible with all types\r\n\r\n## [2.1.3] - 2019-08-02\r\n### Fixed\r\n- Incorrect default value of IViewable:Bind Terminal Enabled State (label and value now match *Disabled and Grayed Out*)\r\n- Community scoping issue that broke deployments after LV2017 (added friend relationship)\r\n\r\n## [2.1.2] - 2019-05-10\r\n(2.1.1 was an errant publication with an inaccurate Changelog version and date. Source is identical)\r\n### Changed\r\n- Minor in-placeness optimization to MediatorBusMonitor\r\n### Removed\r\n- Deprecated (and disabled) Observe Data method from concrete MediatorBusMonitor\r\n### Fixed\r\n- Stale dependency links in obsolete code and unit tests\r\n\r\n## [2.1.0] - 2019-05-02\r\n### Changed\r\n- Framework logging now uses explicit log reference (now local, was global)\r\n### Added\r\n- Set Minimum Panel Size message to IViewable\r\n- In-placeness optimization of subscription policy\r\n\r\n## [2.0.0] - 2019-03-21\r\n### Added\r\n- Debug logging (new dependency on @cs/event-logger)\r\n- Project flag to conditionally remove all logging (REMOVE_DEBUG_LOGGING)\r\n### Changed\r\n- Moved location of applicaiton template on disk so it installs with G Package\r\n### Removed\r\n- Deprecated framework accessors\r\n- ApplicationStyle injection (removed from framework API)\r\n\r\n## [1.9.1] - 2019-02-14\r\n### Version Note\r\nAll prior GPM versions are incomplete, badly linked, or missing dependencies\r\n### Changed\r\n- Replaced CurrentValueTable dependency (VIP) with malleable LookupTable (G Package)\r\n- Moved all remaining tests out of Source folder\r\n- Migrated from VI Package to G Package\r\n- Relinked dependencies to G Packages\r\n### Removed\r\n- TimedAverageBuffer and its associated SubscriptionPolicy (which no one used)', '@cs/actor-framework-messages (^0.1.0),@cs/event-logger (^0.7.1),@cs/listbox (^1.0.1),@cs/lookup-table (^0.1.0),@cs/transport (^0.0.3),@cs/variant (^1.0.1)'),
(545, 139, 'https://bitbucket.org/composedsystems/mva-framework/src/', 'GPM', '2.2.3', '2019-09-12 16:41:20', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [2.2.3] - 2019-09-12\r\n### Fixed\r\n- Updated Transport dependency to fix returning unnecessary error when Observers request formatted strings with no format specifier\r\n\r\n## [2.2.2] - 2019-09-09\r\n### Fixed\r\n- Incorrect Transport version dependency (should be 0.0.3)\r\n\r\n## [2.2.1] - 2019-09-09\r\n### Fixed\r\n- Broken ancestry for all Notification Msg descendants (temporary deprecated ancestor to be removed in major version 3)\r\n\r\n## [2.2.0] - 2019-09-06 - DO NOT USE THIS RELEASE (see 2.2.1)\r\n### Changed\r\n- Default framework log state is *no logging*. Minor log format cleanup. To enable framework log, set **ENABLE_FRAMEWORK_LOG** conditional flag = True\r\n### Fixed\r\n- Community scoping issue (I somehow messed this up again in the last release)\r\n### Deprecated\r\n- Old-fashioned polymorphic Request Synchronous Data API (replace calls with malleable method)\r\n### Added\r\n- Malleable Request Synchronous Data compatible with all types\r\n\r\n## [2.1.3] - 2019-08-02\r\n### Fixed\r\n- Incorrect default value of IViewable:Bind Terminal Enabled State (label and value now match *Disabled and Grayed Out*)\r\n- Community scoping issue that broke deployments after LV2017 (added friend relationship)\r\n\r\n## [2.1.2] - 2019-05-10\r\n(2.1.1 was an errant publication with an inaccurate Changelog version and date. Source is identical)\r\n### Changed\r\n- Minor in-placeness optimization to MediatorBusMonitor\r\n### Removed\r\n- Deprecated (and disabled) Observe Data method from concrete MediatorBusMonitor\r\n### Fixed\r\n- Stale dependency links in obsolete code and unit tests\r\n\r\n## [2.1.0] - 2019-05-02\r\n### Changed\r\n- Framework logging now uses explicit log reference (now local, was global)\r\n### Added\r\n- Set Minimum Panel Size message to IViewable\r\n- In-placeness optimization of subscription policy\r\n\r\n## [2.0.0] - 2019-03-21\r\n### Added\r\n- Debug logging (new dependency on @cs/event-logger)\r\n- Project flag to conditionally remove all logging (REMOVE_DEBUG_LOGGING)\r\n### Changed\r\n- Moved location of applicaiton template on disk so it installs with G Package\r\n### Removed\r\n- Deprecated framework accessors\r\n- ApplicationStyle injection (removed from framework API)\r\n\r\n## [1.9.1] - 2019-02-14\r\n### Version Note\r\nAll prior GPM versions are incomplete, badly linked, or missing dependencies\r\n### Changed\r\n- Replaced CurrentValueTable dependency (VIP) with malleable LookupTable (G Package)\r\n- Moved all remaining tests out of Source folder\r\n- Migrated from VI Package to G Package\r\n- Relinked dependencies to G Packages\r\n### Removed\r\n- TimedAverageBuffer and its associated SubscriptionPolicy (which no one used)', '@cs/actor-framework-messages (^0.1.0),@cs/event-logger (^0.7.1),@cs/listbox (^1.0.1),@cs/lookup-table (^0.1.0),@cs/transport (^0.0.4),@cs/variant (^1.0.1)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(546, 139, 'https://bitbucket.org/composedsystems/mva-framework/src/', 'GPM', '3.0.0-alpha.0', '2020-06-29 16:33:37', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [3.0.0-alpha.0] - 2020-06-29\r\n#### * MAJOR UPDATE PRE-RELEASE *\r\n### Changed\r\n- Refactored framework to depend on dependency-inverted *mva-core* and *mva-viewable* packages. (*mva-framework* extends with concrete ViewManagers, concrete ListboxBusMonitor, IDialogBox, and dialog box implementations.)\r\n- MonitoredMediator decorates Mediator to allow monitoring. Use MonitoredMediator and inject a concrete bus monitor (e.g. ListboxBusMonitor) to monitor the data bus.\r\n- No public message API for showing bus monitor. (i.e. It is no longer the ViewModel\'s job to manage this.) Bus monitor constructor binds to published datum. (\'Construct Listbox Bus Monitor.vi\' establishes the binding.)\r\n- Viewable actors do not limit to launching one dialog box at a time (it is now the developer\'s option to enforce this rule if/when desired).\r\n\r\n### Added\r\n- Multiple bus monitors may be injected at application launch. (e.g. one that monitors data values and another that tracks publishers and subscriber counts.)\r\n- Bus monitors may now track number of subscribers to data (implementation in ListboxBusMonitor does not yet exist).\r\n\r\n## [2.2.3] - 2019-09-12\r\n### Fixed\r\n- Updated Transport dependency to fix returning unnecessary error when Observers request formatted strings with no format specifier\r\n\r\n## [2.2.2] - 2019-09-09\r\n### Fixed\r\n- Incorrect Transport version dependency (should be 0.0.3)\r\n\r\n## [2.2.1] - 2019-09-09\r\n### Fixed\r\n- Broken ancestry for all Notification Msg descendants (temporary deprecated ancestor to be removed in major version 3)\r\n\r\n## [2.2.0] - 2019-09-06 - DO NOT USE THIS RELEASE (see 2.2.1)\r\n### Changed\r\n- Default framework log state is *no logging*. Minor log format cleanup. To enable framework log, set **ENABLE_FRAMEWORK_LOG** conditional flag = True\r\n### Fixed\r\n- Community scoping issue (I somehow messed this up again in the last release)\r\n### Deprecated\r\n- Old-fashioned polymorphic Request Synchronous Data API (replace calls with malleable method)\r\n### Added\r\n- Malleable Request Synchronous Data compatible with all types\r\n\r\n## [2.1.3] - 2019-08-02\r\n### Fixed\r\n- Incorrect default value of IViewable:Bind Terminal Enabled State (label and value now match *Disabled and Grayed Out*)\r\n- Community scoping issue that broke deployments after LV2017 (added friend relationship)\r\n\r\n## [2.1.2] - 2019-05-10\r\n(2.1.1 was an errant publication with an inaccurate Changelog version and date. Source is identical)\r\n### Changed\r\n- Minor in-placeness optimization to MediatorBusMonitor\r\n### Removed\r\n- Deprecated (and disabled) Observe Data method from concrete MediatorBusMonitor\r\n### Fixed\r\n- Stale dependency links in obsolete code and unit tests\r\n\r\n## [2.1.0] - 2019-05-02\r\n### Changed\r\n- Framework logging now uses explicit log reference (now local, was global)\r\n### Added\r\n- Set Minimum Panel Size message to IViewable\r\n- In-placeness optimization of subscription policy\r\n\r\n## [2.0.0] - 2019-03-21\r\n### Added\r\n- Debug logging (new dependency on @cs/event-logger)\r\n- Project flag to conditionally remove all logging (REMOVE_DEBUG_LOGGING)\r\n### Changed\r\n- Moved location of applicaiton template on disk so it installs with G Package\r\n### Removed\r\n- Deprecated framework accessors\r\n- ApplicationStyle injection (removed from framework API)\r\n\r\n## [1.9.1] - 2019-02-14\r\n### Version Note\r\nAll prior GPM versions are incomplete, badly linked, or missing dependencies\r\n### Changed\r\n- Replaced CurrentValueTable dependency (VIP) with malleable LookupTable (G Package)\r\n- Moved all remaining tests out of Source folder\r\n- Migrated from VI Package to G Package\r\n- Relinked dependencies to G Packages\r\n### Removed\r\n- TimedAverageBuffer and its associated SubscriptionPolicy (which no one used)', '@cs/listbox (^1.0.1),@cs/lookup-table (^0.1.0),@cs/mva-viewable (^0.1.4)'),
(547, 139, 'https://bitbucket.org/composedsystems/mva-framework/src/', 'GPM', '3.0.0-alpha.1', '2020-07-21 15:49:31', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [3.0.0-alpha.1] - 2020-07-21\r\n### Added\r\n- Launch Dialog Box method for launching custom dialogs\r\n### Changed\r\n- Renamed KeypadDialogBox to NumericKeypadDialogBox\r\n\r\n## [3.0.0-alpha.0] - 2020-06-29\r\n#### * MAJOR UPDATE PRE-RELEASE *\r\n### Changed\r\n- Refactored framework to depend on dependency-inverted *mva-core* and *mva-viewable* packages. (*mva-framework* extends with concrete ViewManagers, concrete ListboxBusMonitor, IDialogBox, and dialog box implementations.)\r\n- MonitoredMediator decorates Mediator to allow monitoring. Use MonitoredMediator and inject a concrete bus monitor (e.g. ListboxBusMonitor) to monitor the data bus.\r\n- No public message API for showing bus monitor. (i.e. It is no longer the ViewModel\'s job to manage this.) Bus monitor constructor binds to published datum. (\'Construct Listbox Bus Monitor.vi\' establishes the binding.)\r\n- Viewable actors do not limit to launching one dialog box at a time (it is now the developer\'s option to enforce this rule if/when desired).\r\n\r\n### Added\r\n- Multiple bus monitors may be injected at application launch. (e.g. one that monitors data values and another that tracks publishers and subscriber counts.)\r\n- Bus monitors may now track number of subscribers to data (implementation in ListboxBusMonitor does not yet exist).\r\n\r\n## [2.2.3] - 2019-09-12\r\n### Fixed\r\n- Updated Transport dependency to fix returning unnecessary error when Observers request formatted strings with no format specifier\r\n\r\n## [2.2.2] - 2019-09-09\r\n### Fixed\r\n- Incorrect Transport version dependency (should be 0.0.3)\r\n\r\n## [2.2.1] - 2019-09-09\r\n### Fixed\r\n- Broken ancestry for all Notification Msg descendants (temporary deprecated ancestor to be removed in major version 3)\r\n\r\n## [2.2.0] - 2019-09-06 - DO NOT USE THIS RELEASE (see 2.2.1)\r\n### Changed\r\n- Default framework log state is *no logging*. Minor log format cleanup. To enable framework log, set **ENABLE_FRAMEWORK_LOG** conditional flag = True\r\n### Fixed\r\n- Community scoping issue (I somehow messed this up again in the last release)\r\n### Deprecated\r\n- Old-fashioned polymorphic Request Synchronous Data API (replace calls with malleable method)\r\n### Added\r\n- Malleable Request Synchronous Data compatible with all types\r\n\r\n## [2.1.3] - 2019-08-02\r\n### Fixed\r\n- Incorrect default value of IViewable:Bind Terminal Enabled State (label and value now match *Disabled and Grayed Out*)\r\n- Community scoping issue that broke deployments after LV2017 (added friend relationship)\r\n\r\n## [2.1.2] - 2019-05-10\r\n(2.1.1 was an errant publication with an inaccurate Changelog version and date. Source is identical)\r\n### Changed\r\n- Minor in-placeness optimization to MediatorBusMonitor\r\n### Removed\r\n- Deprecated (and disabled) Observe Data method from concrete MediatorBusMonitor\r\n### Fixed\r\n- Stale dependency links in obsolete code and unit tests\r\n\r\n## [2.1.0] - 2019-05-02\r\n### Changed\r\n- Framework logging now uses explicit log reference (now local, was global)\r\n### Added\r\n- Set Minimum Panel Size message to IViewable\r\n- In-placeness optimization of subscription policy\r\n\r\n## [2.0.0] - 2019-03-21\r\n### Added\r\n- Debug logging (new dependency on @cs/event-logger)\r\n- Project flag to conditionally remove all logging (REMOVE_DEBUG_LOGGING)\r\n### Changed\r\n- Moved location of applicaiton template on disk so it installs with G Package\r\n### Removed\r\n- Deprecated framework accessors\r\n- ApplicationStyle injection (removed from framework API)\r\n\r\n## [1.9.1] - 2019-02-14\r\n### Version Note\r\nAll prior GPM versions are incomplete, badly linked, or missing dependencies\r\n### Changed\r\n- Replaced CurrentValueTable dependency (VIP) with malleable LookupTable (G Package)\r\n- Moved all remaining tests out of Source folder\r\n- Migrated from VI Package to G Package\r\n- Relinked dependencies to G Packages\r\n### Removed\r\n- TimedAverageBuffer and its associated SubscriptionPolicy (which no one used)', '@cs/listbox (^1.0.1),@cs/lookup-table (^0.1.0),@cs/mva-viewable (^0.1.4)'),
(548, 139, 'https://bitbucket.org/composedsystems/mva-framework/src/', 'GPM', '3.0.0-alpha.2', '2020-09-10 20:00:25', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [3.0.0-alpha.2] - 2020-09-10\r\n### Fixed\r\n- Launch Dialog Box now launches all dialogs with valid Observer message set (so they can subscribe)\r\n### Changed\r\n- Reworked error shutdown semantics for consistency with Actor Framework (mva-core version updated to 0.5.0)\r\n\r\n## [3.0.0-alpha.1] - 2020-07-21\r\n### Added\r\n- Launch Dialog Box method for launching custom dialogs\r\n### Changed\r\n- Renamed KeypadDialogBox to NumericKeypadDialogBox\r\n\r\n## [3.0.0-alpha.0] - 2020-06-29\r\n#### * MAJOR UPDATE PRE-RELEASE *\r\n### Changed\r\n- Refactored framework to depend on dependency-inverted *mva-core* and *mva-viewable* packages. (*mva-framework* extends with concrete ViewManagers, concrete ListboxBusMonitor, IDialogBox, and dialog box implementations.)\r\n- MonitoredMediator decorates Mediator to allow monitoring. Use MonitoredMediator and inject a concrete bus monitor (e.g. ListboxBusMonitor) to monitor the data bus.\r\n- No public message API for showing bus monitor. (i.e. It is no longer the ViewModel\'s job to manage this.) Bus monitor constructor binds to published datum. (\'Construct Listbox Bus Monitor.vi\' establishes the binding.)\r\n- Viewable actors do not limit to launching one dialog box at a time (it is now the developer\'s option to enforce this rule if/when desired).\r\n\r\n### Added\r\n- Multiple bus monitors may be injected at application launch. (e.g. one that monitors data values and another that tracks publishers and subscriber counts.)\r\n- Bus monitors may now track number of subscribers to data (implementation in ListboxBusMonitor does not yet exist).\r\n\r\n## [2.2.3] - 2019-09-12\r\n### Fixed\r\n- Updated Transport dependency to fix returning unnecessary error when Observers request formatted strings with no format specifier\r\n\r\n## [2.2.2] - 2019-09-09\r\n### Fixed\r\n- Incorrect Transport version dependency (should be 0.0.3)\r\n\r\n## [2.2.1] - 2019-09-09\r\n### Fixed\r\n- Broken ancestry for all Notification Msg descendants (temporary deprecated ancestor to be removed in major version 3)\r\n\r\n## [2.2.0] - 2019-09-06 - DO NOT USE THIS RELEASE (see 2.2.1)\r\n### Changed\r\n- Default framework log state is *no logging*. Minor log format cleanup. To enable framework log, set **ENABLE_FRAMEWORK_LOG** conditional flag = True\r\n### Fixed\r\n- Community scoping issue (I somehow messed this up again in the last release)\r\n### Deprecated\r\n- Old-fashioned polymorphic Request Synchronous Data API (replace calls with malleable method)\r\n### Added\r\n- Malleable Request Synchronous Data compatible with all types\r\n\r\n## [2.1.3] - 2019-08-02\r\n### Fixed\r\n- Incorrect default value of IViewable:Bind Terminal Enabled State (label and value now match *Disabled and Grayed Out*)\r\n- Community scoping issue that broke deployments after LV2017 (added friend relationship)\r\n\r\n## [2.1.2] - 2019-05-10\r\n(2.1.1 was an errant publication with an inaccurate Changelog version and date. Source is identical)\r\n### Changed\r\n- Minor in-placeness optimization to MediatorBusMonitor\r\n### Removed\r\n- Deprecated (and disabled) Observe Data method from concrete MediatorBusMonitor\r\n### Fixed\r\n- Stale dependency links in obsolete code and unit tests\r\n\r\n## [2.1.0] - 2019-05-02\r\n### Changed\r\n- Framework logging now uses explicit log reference (now local, was global)\r\n### Added\r\n- Set Minimum Panel Size message to IViewable\r\n- In-placeness optimization of subscription policy\r\n\r\n## [2.0.0] - 2019-03-21\r\n### Added\r\n- Debug logging (new dependency on @cs/event-logger)\r\n- Project flag to conditionally remove all logging (REMOVE_DEBUG_LOGGING)\r\n### Changed\r\n- Moved location of applicaiton template on disk so it installs with G Package\r\n### Removed\r\n- Deprecated framework accessors\r\n- ApplicationStyle injection (removed from framework API)\r\n\r\n## [1.9.1] - 2019-02-14\r\n### Version Note\r\nAll prior GPM versions are incomplete, badly linked, or missing dependencies\r\n### Changed\r\n- Replaced CurrentValueTable dependency (VIP) with malleable LookupTable (G Package)\r\n- Moved all remaining tests out of Source folder\r\n- Migrated from VI Package to G Package\r\n- Relinked dependencies to G Packages\r\n### Removed\r\n- TimedAverageBuffer and its associated SubscriptionPolicy (which no one used)', '@cs/listbox (^1.0.1),@cs/lookup-table (^0.1.0),@cs/mva-core (^0.5.0),@cs/mva-viewable (^0.1.4)'),
(549, 140, '', 'GPM', '0.1.0', '2020-02-11 03:54:26', '## [0.1.0] - 2020-02-10\r\n-Initial alpha prelease. ', '@cs/variant (^1.0.1)'),
(550, 140, '', 'GPM', '0.1.1', '2020-02-11 03:59:15', '## [0.1.0] - 2020-02-10\r\n-Initial alpha prelease. \r\n\r\n## [0.1.1] - 2020-02-10\r\n-Something was messed up with the suppored LabVIEW Version.', '@cs/variant (^1.0.1)'),
(551, 140, '', 'GPM', '0.1.2', '2020-02-11 04:04:28', '## [0.1.0] - 2020-02-10\r\n-Initial alpha prelease. \r\n\r\n## [0.1.1] - 2020-02-10\r\n-Something was messed up with the suppored LabVIEW Version.', '@cs/variant (^1.0.1)'),
(552, 140, '', 'GPM', '0.1.3', '2020-02-11 04:08:27', '## [0.1.0] - 2020-02-10\r\n-Initial alpha prelease. \r\n\r\n## [0.1.1] - 2020-02-10\r\n-Something was messed up with the suppored LabVIEW Version.', '@cs/variant (^1.0.1)'),
(553, 140, '', 'GPM', '0.1.4', '2020-02-11 15:21:42', '## [0.1.0] - 2020-02-10\r\n-Initial alpha prelease. \r\n\r\n## [0.1.1] - 2020-02-10\r\n-Something was messed up with the suppored LabVIEW Version.', '@cs/variant (^1.0.1)'),
(554, 140, '', 'GPM', '0.1.5', '2020-02-11 16:19:03', '## [0.1.0] - 2020-02-10\r\n-Initial alpha prelease. \r\n\r\n## [0.1.1] - 2020-02-10\r\n-Something was messed up with the suppored LabVIEW Version.', '@cs/variant (^1.0.1)'),
(555, 140, '', 'GPM', '0.1.6', '2020-02-21 23:54:48', '## [0.1.0] - 2020-02-10\r\n-Initial alpha prelease. \r\n\r\n## [0.1.1] - 2020-02-10\r\n-Something was messed up with the suppored LabVIEW Version.\r\n\r\n## [0.1.1] - 2020-02-21\r\nAdded object highlighting when you double click on a broadcaster or receiver. \r\n\r\n-Added cache regeneration if unflattening the cache fails. ', '@cs/variant (^1.0.1)'),
(556, 140, '', 'GPM', '0.1.7', '2020-02-24 05:24:03', '## [0.1.0] - 2020-02-10\r\n-Initial alpha prelease. \r\n\r\n## [0.1.1] - 2020-02-10\r\n-Something was messed up with the suppored LabVIEW Version.\r\n\r\n## [0.1.6] - 2020-02-21\r\nAdded object highlighting when you double click on a broadcaster or receiver. \r\n\r\n-Added cache regeneration if unflattening the cache fails. \r\n\r\n## [0.1.7] - 2020-2-23\r\nMade custom searching injectable.\r\nadded some test code.\r\ncan detect arrays of strings passed into for loops.\r\n\r\nneed to add other mva functions.\r\nfilter out stuff from the mva framework\r\nmaybe handle ccat.', '@cs/variant (^1.0.1)'),
(557, 140, '', 'GPM', '0.1.8', '2020-02-25 03:30:03', '## [0.1.0] - 2020-02-10\r\n-Initial alpha prelease. \r\n\r\n## [0.1.1] - 2020-02-10\r\n-Something was messed up with the suppored LabVIEW Version.\r\n\r\n## [0.1.6] - 2020-02-21\r\nAdded object highlighting when you double click on a broadcaster or receiver. \r\n\r\n-Added cache regeneration if unflattening the cache fails. \r\n\r\n## [0.1.7] - 2020-2-23\r\nMade custom searching injectable.\r\nadded some test code.\r\ncan detect arrays of strings passed into for loops.\r\n\r\nneed to add other mva functions.\r\nfilter out stuff from the mva framework\r\nmaybe handle ccat.\r\n\r\n## [0.1.8] - 2020-2-24\r\nadded all of the \"bind to\" types and added register for multiple messages. Also now i\'m flashing both the source and sink of the data.\r\n', '@cs/variant (^1.0.1)'),
(558, 140, '', 'GPM', '0.1.9', '2020-02-25 15:49:41', '## [0.1.0] - 2020-02-10\r\n-Initial alpha prelease. \r\n\r\n## [0.1.1] - 2020-02-10\r\n-Something was messed up with the suppored LabVIEW Version.\r\n\r\n## [0.1.6] - 2020-02-21\r\nAdded object highlighting when you double click on a broadcaster or receiver. \r\n\r\n-Added cache regeneration if unflattening the cache fails. \r\n\r\n## [0.1.7] - 2020-2-23\r\nMade custom searching injectable.\r\nadded some test code.\r\ncan detect arrays of strings passed into for loops.\r\n\r\nneed to add other mva functions.\r\nfilter out stuff from the mva framework\r\nmaybe handle ccat.\r\n\r\n## [0.1.8] - 2020-2-24\r\nadded all of the \"bind to\" types and added register for multiple messages. Also now i\'m flashing both the source and sink of the data.\r\n\r\n## [0.1.9] - 2020-2-25\r\nAdded \"Request Data.vi\" ', '@cs/variant (^1.0.1)'),
(559, 140, '', 'GPM', '0.1.10', '2020-03-03 00:08:40', '## [0.1.10] - 2020-03-02\r\nAdded traversal algorithm for build array.\r\n\r\n## [0.1.9] - 2020-2-25\r\nAdded \"Request Data.vi\" \r\n\r\n## [0.1.8] - 2020-2-24\r\nadded all of the \"bind to\" types and added register for multiple messages. Also now i\'m flashing both the source and sink of the data.\r\n\r\n## [0.1.7] - 2020-2-23\r\nMade custom searching injectable.\r\nadded some test code.\r\ncan detect arrays of strings passed into for loops.\r\n\r\nneed to add other mva functions.\r\nfilter out stuff from the mva framework\r\nmaybe handle ccat.\r\n\r\n## [0.1.6] - 2020-02-21\r\nAdded object highlighting when you double click on a broadcaster or receiver. \r\n\r\n-Added cache regeneration if unflattening the cache fails. \r\n\r\n## [0.1.1] - 2020-02-10\r\n-Something was messed up with the suppored LabVIEW Version.\r\n\r\n## [0.1.0] - 2020-02-10\r\n-Initial alpha prelease. ', '@cs/variant (^1.0.1)'),
(560, 140, '', 'GPM', '0.1.11', '2020-03-03 04:14:37', '## [0.1.11] - 2020-03-02\r\nAdding control terminal as source in list.\r\n\r\n## [0.1.10] - 2020-03-02\r\nAdded traversal algorithm for build array.\r\n\r\n## [0.1.9] - 2020-2-25\r\nAdded \"Request Data.vi\" \r\n\r\n## [0.1.8] - 2020-2-24\r\nadded all of the \"bind to\" types and added register for multiple messages. Also now i\'m flashing both the source and sink of the data.\r\n\r\n## [0.1.7] - 2020-2-23\r\nMade custom searching injectable.\r\nadded some test code.\r\ncan detect arrays of strings passed into for loops.\r\n\r\nneed to add other mva functions.\r\nfilter out stuff from the mva framework\r\nmaybe handle ccat.\r\n\r\n## [0.1.6] - 2020-02-21\r\nAdded object highlighting when you double click on a broadcaster or receiver. \r\n\r\n-Added cache regeneration if unflattening the cache fails. \r\n\r\n## [0.1.1] - 2020-02-10\r\n-Something was messed up with the suppored LabVIEW Version.\r\n\r\n## [0.1.0] - 2020-02-10\r\n-Initial alpha prelease. ', '@cs/variant (^1.0.1)'),
(561, 140, '', 'GPM', '0.1.12', '2020-03-04 14:38:17', '## [0.1.12] - 2020-03-04\r\nAdding support for vims. \r\n\r\n## [0.1.11] - 2020-03-02\r\nAdding control terminal as source in list.\r\n\r\n## [0.1.10] - 2020-03-02\r\nAdded traversal algorithm for build array.\r\n\r\n## [0.1.9] - 2020-2-25\r\nAdded \"Request Data.vi\" \r\n\r\n## [0.1.8] - 2020-2-24\r\nadded all of the \"bind to\" types and added register for multiple messages. Also now i\'m flashing both the source and sink of the data.\r\n\r\n## [0.1.7] - 2020-2-23\r\nMade custom searching injectable.\r\nadded some test code.\r\ncan detect arrays of strings passed into for loops.\r\n\r\nneed to add other mva functions.\r\nfilter out stuff from the mva framework\r\nmaybe handle ccat.\r\n\r\n## [0.1.6] - 2020-02-21\r\nAdded object highlighting when you double click on a broadcaster or receiver. \r\n\r\n-Added cache regeneration if unflattening the cache fails. \r\n\r\n## [0.1.1] - 2020-02-10\r\n-Something was messed up with the suppored LabVIEW Version.\r\n\r\n## [0.1.0] - 2020-02-10\r\n-Initial alpha prelease. ', '@cs/variant (^1.0.1)'),
(562, 140, '', 'GPM', '0.1.13', '2020-03-14 19:20:54', '## [0.1.13] - 2020-03-14\r\nFixed a bug where if you double click on empty space in a broadcaster or receier list, the program errors out.\r\nAdded the Actor Centric View.\r\nAdded the Broadcasting Actor to the message centric view.\r\n\r\n\r\n## [0.1.12] - 2020-03-04\r\nAdding support for vims. \r\n\r\n## [0.1.11] - 2020-03-02\r\nAdding control terminal as source in list.\r\n\r\n## [0.1.10] - 2020-03-02\r\nAdded traversal algorithm for build array.\r\n\r\n## [0.1.9] - 2020-2-25\r\nAdded \"Request Data.vi\" \r\n\r\n## [0.1.8] - 2020-2-24\r\nadded all of the \"bind to\" types and added register for multiple messages. Also now i\'m flashing both the source and sink of the data.\r\n\r\n## [0.1.7] - 2020-2-23\r\nMade custom searching injectable.\r\nadded some test code.\r\ncan detect arrays of strings passed into for loops.\r\n\r\nneed to add other mva functions.\r\nfilter out stuff from the mva framework\r\nmaybe handle ccat.\r\n\r\n## [0.1.6] - 2020-02-21\r\nAdded object highlighting when you double click on a broadcaster or receiver. \r\n\r\n-Added cache regeneration if unflattening the cache fails. \r\n\r\n## [0.1.1] - 2020-02-10\r\n-Something was messed up with the suppored LabVIEW Version.\r\n\r\n## [0.1.0] - 2020-02-10\r\n-Initial alpha prelease. ', '@cs/variant (^1.0.1)'),
(563, 140, '', 'GPM', '0.1.14', '2020-03-16 13:31:17', '## [0.1.14] - 2020-03-16\r\nDoubble clicking on an actor navigates to that actor in the LabVIEW project.\r\n\r\n## [0.1.13] - 2020-03-14\r\nFixed a bug where if you double click on empty space in a broadcaster or receier list, the program errors out.\r\nAdded the Actor Centric View.\r\nAdded the Broadcasting Actor to the message centric view.\r\n\r\n## [0.1.12] - 2020-03-04\r\nAdding support for vims. \r\n\r\n## [0.1.11] - 2020-03-02\r\nAdding control terminal as source in list.\r\n\r\n## [0.1.10] - 2020-03-02\r\nAdded traversal algorithm for build array.\r\n\r\n## [0.1.9] - 2020-2-25\r\nAdded \"Request Data.vi\" \r\n\r\n## [0.1.8] - 2020-2-24\r\nadded all of the \"bind to\" types and added register for multiple messages. Also now i\'m flashing both the source and sink of the data.\r\n\r\n## [0.1.7] - 2020-2-23\r\nMade custom searching injectable.\r\nadded some test code.\r\ncan detect arrays of strings passed into for loops.\r\n\r\nneed to add other mva functions.\r\nfilter out stuff from the mva framework\r\nmaybe handle ccat.\r\n\r\n## [0.1.6] - 2020-02-21\r\nAdded object highlighting when you double click on a broadcaster or receiver. \r\n\r\n-Added cache regeneration if unflattening the cache fails. \r\n\r\n## [0.1.1] - 2020-02-10\r\n-Something was messed up with the suppored LabVIEW Version.\r\n\r\n## [0.1.0] - 2020-02-10\r\n-Initial alpha prelease. ', '@cs/variant (^1.0.1)'),
(564, 140, '', 'GPM', '0.1.15', '2020-03-16 19:05:51', '## [0.1.15] - 2020-03-16\r\nAdding ability to navigate to a vi in the project. Also added a warning if the lvlib is in dependencies vs explicitliy added to the project. \r\n\r\n## [0.1.14] - 2020-03-16\r\nDoubble clicking on an actor navigates to that actor in the LabVIEW project.\r\n\r\n## [0.1.13] - 2020-03-14\r\nFixed a bug where if you double click on empty space in a broadcaster or receier list, the program errors out.\r\nAdded the Actor Centric View.\r\nAdded the Broadcasting Actor to the message centric view.\r\n\r\n## [0.1.12] - 2020-03-04\r\nAdding support for vims. \r\n\r\n## [0.1.11] - 2020-03-02\r\nAdding control terminal as source in list.\r\n\r\n## [0.1.10] - 2020-03-02\r\nAdded traversal algorithm for build array.\r\n\r\n## [0.1.9] - 2020-2-25\r\nAdded \"Request Data.vi\" \r\n\r\n## [0.1.8] - 2020-2-24\r\nadded all of the \"bind to\" types and added register for multiple messages. Also now i\'m flashing both the source and sink of the data.\r\n\r\n## [0.1.7] - 2020-2-23\r\nMade custom searching injectable.\r\nadded some test code.\r\ncan detect arrays of strings passed into for loops.\r\n\r\nneed to add other mva functions.\r\nfilter out stuff from the mva framework\r\nmaybe handle ccat.\r\n\r\n## [0.1.6] - 2020-02-21\r\nAdded object highlighting when you double click on a broadcaster or receiver. \r\n\r\n-Added cache regeneration if unflattening the cache fails. \r\n\r\n## [0.1.1] - 2020-02-10\r\n-Something was messed up with the suppored LabVIEW Version.\r\n\r\n## [0.1.0] - 2020-02-10\r\n-Initial alpha prelease. ', '@cs/variant (^1.0.1)'),
(565, 140, '', 'GPM', '0.1.16', '2020-03-27 23:09:35', '## [0.1.16] - 2020-03-27\r\nfixed a bug were the dialog saying that a library wasn\'t explictily in the project was popping up incorrectly.\r\n\r\n## [0.1.15] - 2020-03-16\r\nAdding ability to navigate to a vi in the project. Also added a warning if the lvlib is in dependencies vs explicitliy added to the project. \r\n\r\n## [0.1.14] - 2020-03-16\r\nDoubble clicking on an actor navigates to that actor in the LabVIEW project.\r\n\r\n## [0.1.13] - 2020-03-14\r\nFixed a bug where if you double click on empty space in a broadcaster or receier list, the program errors out.\r\nAdded the Actor Centric View.\r\nAdded the Broadcasting Actor to the message centric view.\r\n\r\n## [0.1.12] - 2020-03-04\r\nAdding support for vims. \r\n\r\n## [0.1.11] - 2020-03-02\r\nAdding control terminal as source in list.\r\n\r\n## [0.1.10] - 2020-03-02\r\nAdded traversal algorithm for build array.\r\n\r\n## [0.1.9] - 2020-2-25\r\nAdded \"Request Data.vi\" \r\n\r\n## [0.1.8] - 2020-2-24\r\nadded all of the \"bind to\" types and added register for multiple messages. Also now i\'m flashing both the source and sink of the data.\r\n\r\n## [0.1.7] - 2020-2-23\r\nMade custom searching injectable.\r\nadded some test code.\r\ncan detect arrays of strings passed into for loops.\r\n\r\nneed to add other mva functions.\r\nfilter out stuff from the mva framework\r\nmaybe handle ccat.\r\n\r\n## [0.1.6] - 2020-02-21\r\nAdded object highlighting when you double click on a broadcaster or receiver. \r\n\r\n-Added cache regeneration if unflattening the cache fails. \r\n\r\n## [0.1.1] - 2020-02-10\r\n-Something was messed up with the suppored LabVIEW Version.\r\n\r\n## [0.1.0] - 2020-02-10\r\n-Initial alpha prelease. ', '@cs/variant (^1.0.1)'),
(566, 141, 'https://bitbucket.org/composedsystems/mva-viewable/src', 'GPM', '0.1.0', '2020-01-24 15:33:04', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.1.0] - 2020-01-22\r\n### Added\r\n- Initial release of mva viewable components as stand-alone package\r\n### Removed\r\n- IDialogBox removed from this release', '@cs/mva-core (^0.1.1)'),
(567, 141, 'https://bitbucket.org/composedsystems/mva-viewable/src', 'GPM', '0.1.1', '2020-04-03 21:22:56', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.1.1] - 2020-04-03\r\n### Fixed\r\n- Wrong conditional disable flags (and conditionally broken code) in ViewModel. (See Readme for valid conditional flags.)\r\n\r\n## [0.1.0] - 2020-01-22\r\n### Added\r\n- Initial release of mva viewable components as stand-alone package\r\n### Removed\r\n- IDialogBox removed from this release', '@cs/mva-core (^0.2.1)'),
(568, 141, 'https://bitbucket.org/composedsystems/mva-viewable/src', 'GPM', '0.1.2', '2020-05-02 15:09:36', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.1.2] - 2020-05-02\r\n### Changed\r\n- Depends on **mva-core 0.2.2** or greater (empty string mediator and API improvements)\r\n### Removed\r\n- Previously deprecated ***Publish ViewModel Data.vi***.\r\n- Unclaimed and non-functioning actor auto-registration code (old stuff)\r\n\r\n## [0.1.1] - 2020-04-03\r\n### Fixed\r\n- Wrong conditional disable flags (and conditionally broken code) in ViewModel. (See Readme for valid conditional flags.)\r\n\r\n## [0.1.0] - 2020-01-22\r\n### Added\r\n- Initial release of mva viewable components as stand-alone package\r\n### Removed\r\n- IDialogBox removed from this release', '@cs/mva-core (^0.2.2)'),
(569, 141, 'https://bitbucket.org/composedsystems/mva-viewable/src', 'GPM', '0.1.3', '2020-06-23 16:04:17', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.1.3] - 2020-06-22\r\n### Changed\r\n- Depends on **mva-core 0.3.0** or greater (Observe API updates, minor logging updates)\r\n\r\n## [0.1.2] - 2020-05-02\r\n### Changed\r\n- Depends on **mva-core 0.2.2** or greater (empty string mediator and API improvements)\r\n### Removed\r\n- Previously deprecated ***Publish ViewModel Data.vi***.\r\n- Unclaimed and non-functioning actor auto-registration code (old stuff)\r\n\r\n## [0.1.1] - 2020-04-03\r\n### Fixed\r\n- Wrong conditional disable flags (and conditionally broken code) in ViewModel. (See Readme for valid conditional flags.)\r\n\r\n## [0.1.0] - 2020-01-22\r\n### Added\r\n- Initial release of mva viewable components as stand-alone package\r\n### Removed\r\n- IDialogBox removed from this release', '@cs/mva-core (^0.3.0)'),
(570, 141, 'https://bitbucket.org/composedsystems/mva-viewable/src', 'GPM', '0.1.4', '2020-06-26 18:45:48', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.1.4] - 2020-06-26\r\n### Changed\r\n- Depends on **mva-core 0.4.0** or greater (bus monitor improvements)\r\n\r\n## [0.1.3] - 2020-06-22\r\n### Changed\r\n- Depends on **mva-core 0.3.0** or greater (Observe API updates, minor logging updates)\r\n\r\n## [0.1.2] - 2020-05-02\r\n### Changed\r\n- Depends on **mva-core 0.2.2** or greater (empty string mediator and API improvements)\r\n### Removed\r\n- Previously deprecated ***Publish ViewModel Data.vi***.\r\n- Unclaimed and non-functioning actor auto-registration code (old stuff)\r\n\r\n## [0.1.1] - 2020-04-03\r\n### Fixed\r\n- Wrong conditional disable flags (and conditionally broken code) in ViewModel. (See Readme for valid conditional flags.)\r\n\r\n## [0.1.0] - 2020-01-22\r\n### Added\r\n- Initial release of mva viewable components as stand-alone package\r\n### Removed\r\n- IDialogBox removed from this release', '@cs/mva-core (^0.4.0)'),
(571, 142, 'https://bitbucket.org/composedsystems/composed-mva-viewmanager-extension', 'GPM', '0.0.1-Beta', '2020-03-31 20:23:10', '##[0.0.1] - 2020-03-31\r\n- Initial release', '@cs/listbox (^1.0.1),@cs/lookup-table (^0.1.0),@cs/mva-viewable (^0.1.0)'),
(572, 142, 'https://bitbucket.org/composedsystems/composed-mva-viewmanager-extension', 'GPM', '0.0.2-Beta', '2020-04-07 02:29:19', '##[0.0.2] - 2020-04-06\r\n- ##[0.0.1] - 2020-03-31\r\n- Built against MVA Viewable v0.1.1\r\n\r\n##[0.0.1] - 2020-03-31\r\n- Initial release', '@cs/listbox (^1.0.1),@cs/lookup-table (^0.1.0),@cs/mva-viewable (^0.1.1)'),
(573, 142, 'https://bitbucket.org/composedsystems/composed-mva-viewmanager-extension', 'GPM', '0.0.3-Beta', '2020-04-07 02:30:04', '##[0.0.3] - 2020-04-06\r\n- Updated changelog\r\n\r\n##[0.0.2] - 2020-04-06\r\n- Built against MVA Viewable v0.1.1\r\n\r\n##[0.0.1] - 2020-03-31\r\n- Initial release', '@cs/listbox (^1.0.1),@cs/lookup-table (^0.1.0),@cs/mva-viewable (^0.1.1)'),
(574, 143, 'https://bitbucket.org/composedsystems/composed-network-sink', 'GPM', '0.1.0', '2020-01-21 15:28:15', '# Changelog\r\nAll noteable changes to this project will be documented in this file. \r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.0.0] - 2020-01-21\r\n### Added\r\n- Everything (Initial publication)', '@cs/event-logger (^0.7.1)'),
(575, 143, 'https://bitbucket.org/composedsystems/composed-network-sink', 'GPM', '0.1.1', '2020-02-21 15:12:32', '# Changelog\r\nAll noteable changes to this project will be documented in this file. \r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.1.1] - 2020-02-21\r\n### Removed\r\n- Stale example code with bad linkages\r\n\r\n\r\n## [0.1.0] - 2020-01-21\r\n### Added\r\n- Everything (Initial publication)', '@cs/event-logger (^0.7.1)'),
(576, 144, '', 'GPM', '1.3.3', '2018-09-18 15:01:48', '## v1.2.3\r\n- Removed Error Case Structure from Device Send VI so that error cluster infromation can be sent automatically as intended.\r\n- Corrected syslog_Hostname to return the host name of the local device.\r\n\r\nIncompatible Packages\r\n- Added NI Syslog Library (ni_lib_syslog) as an incompatible library, preventing the installation of these two identical libraries with different package names.\r\n\r\n## v1.3.0\r\n- Removed extraneous function palette\r\n\r\n## v1.3.1\r\n- Discussion Forum Suggestion: Updated  syslog_Hostname.vi to cache the hostname on the first call, and return the cached name on subsequent calls to improve performance. (Improvement suggested by user LeifS. Thank you.)\r\n\r\n## v1.3.2\r\n- Discussion Forum Suggestion: Expose the Client Port setting to the user to allow multiple Syslog clients (devices) on one machine.\r\n\r\n## v1.3.3\r\n- Discussion Forum Suggestion: Modify Device Engine Function so that the user specified Client Port is always used for the local port, not just in the case that the Server/Collector is running on the same machine. \r\n\r\n- The default client port is 515, which is different from the default server/collector port (514). So using the default values will work in any case where you only have one client per machine. If you want to use multiple clients on one machine, you must specify unique client ports on all but one of them.', NULL),
(577, 144, '', 'GPM', '1.3.4', '2018-09-18 15:04:03', '## v1.2.3\r\n- Removed Error Case Structure from Device Send VI so that error cluster infromation can be sent automatically as intended.\r\n- Corrected syslog_Hostname to return the host name of the local device.\r\n\r\nIncompatible Packages\r\n- Added NI Syslog Library (ni_lib_syslog) as an incompatible library, preventing the installation of these two identical libraries with different package names.\r\n\r\n## v1.3.0\r\n- Removed extraneous function palette\r\n\r\n## v1.3.1\r\n- Discussion Forum Suggestion: Updated  syslog_Hostname.vi to cache the hostname on the first call, and return the cached name on subsequent calls to improve performance. (Improvement suggested by user LeifS. Thank you.)\r\n\r\n## v1.3.2\r\n- Discussion Forum Suggestion: Expose the Client Port setting to the user to allow multiple Syslog clients (devices) on one machine.\r\n\r\n## v1.3.3\r\n- Discussion Forum Suggestion: Modify Device Engine Function so that the user specified Client Port is always used for the local port, not just in the case that the Server/Collector is running on the same machine. \r\n\r\n- The default client port is 515, which is different from the default server/collector port (514). So using the default values will work in any case where you only have one client per machine. If you want to use multiple clients on one machine, you must specify unique client ports on all but one of them.', NULL),
(578, 145, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=ni_goop_wizard-1.0-1.ogp', 'VIPM', '1', '2020-05-16 12:50:01', '', NULL),
(579, 146, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=nilib_rectangle-1.0-1.ogp', 'VIPM', '1', '2020-05-16 12:50:32', '', 'dynamicpalette >= 2.0'),
(580, 147, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=nilib_rectangle-1.1-1.ogp', 'VIPM', '1', '2020-05-16 12:50:32', '', 'dynamicpalette >= 2.0'),
(581, 148, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=nilib_rectangle-1.2-1.ogp', 'VIPM', '1', '2020-05-16 12:50:32', '', 'ogrsc_dynamicpalette >= 0.2'),
(582, 149, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=nirsc_html_help_common-1.0-1.ogp', 'VIPM', '1', '2020-05-16 12:50:32', '', NULL),
(583, 150, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=nirsc_html_help_common-2.0-1.ogp', 'VIPM', '1', '2020-05-16 12:50:32', '', NULL),
(584, 151, 'https://gitlab.com/mgi/gpm-packages/odbc-database', 'GPM', '0.1.0', '2018-09-05 00:37:47', '## 0.1.0\r\n\r\nInitial Release', '@mgi/database-interface (^0.1.0)'),
(585, 151, 'https://gitlab.com/mgi/gpm-packages/odbc-database', 'GPM', '0.1.1', '2018-11-21 23:43:28', '## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release', '@mgi/database-interface (^0.1.0)'),
(586, 152, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogctl_buttons-2.1-1.ogp', 'VIPM', '1', '2020-05-16 12:50:32', '', 'ogrsc_dynamicpalette >= 0.6'),
(587, 153, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogctl_buttons-2.2-1.ogp', 'VIPM', '1', '2020-05-16 12:50:32', '', 'ogrsc_dynamicpalette >= 0.6'),
(588, 154, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogctl_buttons-2.3-1.ogp', 'VIPM', '1', '2020-05-16 12:50:32', '', 'ogrsc_dynamicpalette>=0.6'),
(589, 155, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogedit_birds_eye_view-1.6-1.ogp', 'VIPM', '1', '2020-05-16 12:50:32', '', NULL),
(590, 156, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogedit_birds_eye_view-1.7-2.ogp', 'VIPM', '2', '2007-03-22 01:27:23', '', NULL),
(591, 157, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogedit_file_locate_in_project-1.0.0.3-1.ogp', 'VIPM', '1', '2007-09-15 22:46:31', '', NULL),
(592, 158, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogfwk_opengoop-0.10-1.ogp', 'VIPM', '1', '2007-09-15 22:46:31', '', NULL),
(593, 159, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogfwk_opengoop-0.8-1.ogp', 'VIPM', '1', '2007-09-15 22:46:31', '', NULL),
(594, 160, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogfwk_opengoop-0.9-1.ogp', 'VIPM', '1', '2007-09-15 22:46:31', '', NULL),
(595, 161, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_appcontrol-2.0-2.ogp', 'VIPM', '2', '2011-06-26 00:41:06', '', 'ogrsc_dynamicpalette >= 0.2, oglib_file >= 2.0, oglib_error >= 2.0'),
(596, 161, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_appcontrol-2.0-1.ogp', 'VIPM', '1', '2011-06-26 00:41:06', '', 'ogrsc_dynamicpalette >= 0.2, oglib_file >= 2.0, oglib_error >= 2.0'),
(597, 162, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_appcontrol-2.1-1.ogp', 'VIPM', '1', '2011-06-26 00:41:06', '', 'ogrsc_dynamicpalette >= 0.2, oglib_file >= 2.0, oglib_error >= 2.0'),
(598, 163, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_appcontrol-2.10-1.ogp', 'VIPM', '1', '2008-03-14 00:05:33', '', 'ogrsc_dynamicpalette>=0.2,oglib_file>=2.0,oglib_error>=2.0,oglib_lvdata>=2.0'),
(599, 164, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_appcontrol-2.2-1.ogp', 'VIPM', '1', '2008-03-14 00:05:33', '', 'ogrsc_dynamicpalette >= 0.2, oglib_file >= 2.0, oglib_error >= 2.0'),
(600, 165, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_appcontrol-2.3-1.ogp', 'VIPM', '1', '2008-03-14 00:05:33', '', 'ogrsc_dynamicpalette >= 0.2, oglib_file >= 2.0, oglib_error >= 2.0'),
(601, 166, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_appcontrol-2.4-1.ogp', 'VIPM', '1', '2008-03-14 00:05:33', '', 'ogrsc_dynamicpalette >= 0.2, oglib_file >= 2.0, oglib_error >= 2.0'),
(602, 167, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_appcontrol-2.5-1.ogp', 'VIPM', '1', '2008-03-14 00:05:33', '', 'ogrsc_dynamicpalette >= 0.2, oglib_file >= 2.0, oglib_error >= 2.0'),
(603, 168, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_appcontrol-2.6-1.ogp', 'VIPM', '1', '2008-03-14 00:05:33', '', 'ogrsc_dynamicpalette >= 0.2, oglib_file >= 2.0, oglib_error >= 2.0'),
(604, 169, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_appcontrol-2.7-1.ogp', 'VIPM', '1', '2008-03-14 00:05:33', '', 'ogrsc_dynamicpalette >= 0.2, oglib_file >= 2.0, oglib_error >= 2.0'),
(605, 170, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_appcontrol-2.8-1.ogp', 'VIPM', '1', '2008-03-14 00:05:33', '', 'ogrsc_dynamicpalette >= 0.2, oglib_file >= 2.0, oglib_error >= 2.0'),
(606, 171, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_appcontrol-2.9-1.ogp', 'VIPM', '1', '2007-01-08 03:05:35', '', 'ogrsc_dynamicpalette>=0.2,oglib_file>=2.0,oglib_error>=2.0,oglib_lvdata>=2.0'),
(607, 172, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_array-2.0-1.ogp', 'VIPM', '1', '2011-06-26 00:41:06', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0, oglib_string >= 2.0, oglib_lvdata >= 2.0'),
(608, 173, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_array-2.1-1.ogp', 'VIPM', '1', '2011-06-26 00:41:06', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0, oglib_string >= 2.0, oglib_lvdata >= 2.0'),
(609, 174, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_array-2.2-1.ogp', 'VIPM', '1', '2011-06-26 00:41:06', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0, oglib_string >= 2.0, oglib_lvdata >= 2.0'),
(610, 175, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_array-2.3-1.ogp', 'VIPM', '1', '2011-06-26 00:41:06', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0, oglib_string >= 2.0, oglib_lvdata >= 2.0'),
(611, 176, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_array-2.4-2.ogp', 'VIPM', '2', '2011-06-26 00:41:06', '', 'ogrsc_dynamicpalette >= 0.2, oglib_error >= 2.0, oglib_string >= 2.0, oglib_lvdata >= 2.0'),
(612, 176, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_array-2.4-1.ogp', 'VIPM', '1', '2011-06-26 00:41:06', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0, oglib_string >= 2.0, oglib_lvdata >= 2.0'),
(613, 177, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_array-2.5-1.ogp', 'VIPM', '1', '2007-02-25 02:24:32', '', 'ogrsc_dynamicpalette>=0.2,nirsc_html_help_common>=1.0,oglib_error>=2.0,oglib_string>=2.0,oglib_lvdata>=2.0'),
(614, 178, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_array-2.6-1.ogp', 'VIPM', '1', '2007-03-28 21:33:38', '', 'ogrsc_dynamicpalette>=0.2,nirsc_html_help_common>=1.0,oglib_error>=2.0,oglib_string>=2.0,oglib_lvdata>=2.0'),
(615, 179, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_array-2.7-1.ogp', 'VIPM', '1', '2007-04-08 23:36:06', '', 'ogrsc_dynamicpalette>=0.2,nirsc_html_help_common>=1.0,oglib_error>=2.0,oglib_string>=2.0,oglib_lvdata>=2.0'),
(616, 180, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_array-3.0.0-1.ogp', 'VIPM', '1', '2009-07-18 18:16:52', '', 'ogrsc_dynamicpalette>=0.2,nirsc_html_help_common>=1.0,oglib_error>=2.0,oglib_string>=2.0,oglib_lvdata>=2.0'),
(617, 181, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_boolean-2.0-1.ogp', 'VIPM', '1', '2018-03-02 19:50:38', '', 'ogrsc_dynamicpalette >= 2.0'),
(618, 182, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_boolean-2.1-1.ogp', 'VIPM', '1', '2018-03-02 19:50:38', '', 'ogrsc_dynamicpalette >= 2.0'),
(619, 183, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_boolean-2.2-1.ogp', 'VIPM', '1', '2018-03-02 19:50:38', '', 'ogrsc_dynamicpalette >= 2.0'),
(620, 184, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_boolean-2.3-3.ogp', 'VIPM', '3', '2018-03-02 19:50:38', '', 'ogrsc_dynamicpalette>=0.2'),
(621, 184, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_boolean-2.3-2.ogp', 'VIPM', '2', '2018-03-02 19:50:38', '', 'ogrsc_dynamicpalette>=2.0'),
(622, 184, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_boolean-2.3-1.ogp', 'VIPM', '1', '2018-03-02 19:50:38', '', 'ogrsc_dynamicpalette>=2.0'),
(623, 185, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_comparison-2.0-1.ogp', 'VIPM', '1', '2018-03-02 19:50:46', '', 'ogrsc_palette >= 2.0'),
(624, 186, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_comparison-2.1-2.ogp', 'VIPM', '2', '2018-03-02 19:50:46', '', 'ogrsc_dynamicpalette >= 2.0'),
(625, 186, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_comparison-2.1-1.ogp', 'VIPM', '1', '2018-03-02 19:50:46', '', 'ogrsc_palette >= 2.0'),
(626, 187, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_comparison-2.2-1.ogp', 'VIPM', '1', '2018-03-02 19:50:46', '', 'ogrsc_dynamicpalette >= 2.0'),
(627, 188, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_comparison-2.3-1.ogp', 'VIPM', '1', '2007-01-01 03:14:15', '', 'ogrsc_dynamicpalette>=2.0'),
(628, 188, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_comparison-2.3-2.ogp', 'VIPM', '2', '2018-03-02 19:50:46', '', 'ogrsc_dynamicpalette>=0.2'),
(629, 189, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_dictionary-1.0-1.ogp', 'VIPM', '1', '2018-03-02 19:50:54', '', 'ogrsc_dynamicpalette>=2.0,nirsc_html_help_common>=1.0'),
(630, 190, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_dictionary-1.1-1.ogp', 'VIPM', '1', '2006-12-14 22:01:22', '', 'ogrsc_dynamicpalette>=2.0,nirsc_html_help_common>=1.0'),
(631, 190, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_dictionary-1.1-2.ogp', 'VIPM', '2', '2018-03-02 19:50:54', '', 'ogrsc_dynamicpalette>=0.2,nirsc_html_help_common>=1.0'),
(632, 191, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_error-2.0-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette >= 2.0');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(633, 192, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_error-2.1-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette >= 2.0'),
(634, 193, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_error-2.2-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette >= 2.0'),
(635, 194, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_error-2.3-2.ogp', 'VIPM', '2', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette>=0.2'),
(636, 194, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_error-2.3-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette>=2.0'),
(637, 195, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_file-2.0-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette >= 2.0, oglib_string >= 2.0, oglib_array >= 2.0, oglib_appcontrol >= 2.0, oglib_error >= 2.0'),
(638, 196, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_file-2.1-2.ogp', 'VIPM', '2', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette >= 2.0, oglib_string >= 2.0, oglib_array >= 2.0, oglib_appcontrol >= 2.0, oglib_error >= 2.0'),
(639, 196, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_file-2.1-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette >= 2.0, oglib_string >= 2.0, oglib_array >= 2.0, oglib_appcontrol >= 2.0, oglib_error >= 2.0'),
(640, 197, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_file-2.2-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette >= 2.0, oglib_string >= 2.0, oglib_array >= 2.0, oglib_appcontrol >= 2.0, oglib_error >= 2.0'),
(641, 198, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_file-2.3-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette >= 2.0, oglib_string >= 2.0, oglib_array >= 2.0, oglib_appcontrol >= 2.0, oglib_error >= 2.0'),
(642, 199, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_file-2.4-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette >= 2.0, oglib_string >= 2.0, oglib_array >= 2.0, oglib_appcontrol >= 2.0, oglib_error >= 2.0'),
(643, 200, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_file-2.5-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette >= 2.0, oglib_string >= 2.0, oglib_array >= 2.0, oglib_appcontrol >= 2.0, oglib_error >= 2.0'),
(644, 201, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_file-2.6-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette >= 2.0, oglib_string >= 2.0, oglib_array >= 2.0, oglib_appcontrol >= 2.0, oglib_error >= 2.0'),
(645, 202, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_file-2.7-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette>=2.0,oglib_string>=2.0,oglib_array>=2.0,oglib_appcontrol>=2.0,oglib_error>=2.0'),
(646, 203, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_file-2.8-1.ogp', 'VIPM', '1', '2007-01-01 08:05:08', '', 'ogrsc_dynamicpalette>=2.0,oglib_string>=2.0,oglib_array>=2.0,oglib_appcontrol>=2.0,oglib_error>=2.0'),
(647, 203, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_file-2.8-2.ogp', 'VIPM', '2', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette>=0.2,oglib_string>=2.0,oglib_array>=2.0,oglib_appcontrol>=2.0,oglib_error>=2.0'),
(648, 204, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_file-3.0.1-1.ogp', 'VIPM', '1', '2010-02-19 14:39:04', '', 'ogrsc_dynamicpalette>=0.2,oglib_string>=2.0,oglib_array>=2.0,oglib_appcontrol>=2.0,oglib_error>=2.0'),
(649, 205, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_largefile-1.0-1.ogp', 'VIPM', '1', '2018-03-02 19:51:16', '', 'error >= 1.0'),
(650, 206, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_largefile-1.1-1.ogp', 'VIPM', '1', '2018-03-02 19:51:16', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0'),
(651, 207, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_largefile-1.2-1.ogp', 'VIPM', '1', '2018-03-02 19:51:16', '', 'oglib_error >= 2.0, ogrsc_dynamicpalette>=2.0'),
(652, 208, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_largefile-1.3-1.ogp', 'VIPM', '1', '2018-03-02 19:51:16', '', 'oglib_error >= 2.0, ogrsc_dynamicpalette>=2.0'),
(653, 209, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_largefile-1.4-1.ogp', 'VIPM', '1', '2007-01-09 21:29:57', '', 'oglib_error>=2.0,ogrsc_dynamicpalette>=0.2'),
(654, 210, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvdata-2.0-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0'),
(655, 211, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvdata-2.1-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0'),
(656, 212, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvdata-2.2-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0'),
(657, 213, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvdata-2.3-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0'),
(658, 214, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvdata-2.4-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0'),
(659, 215, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvdata-2.5-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette>=2.0,oglib_error>=2.0'),
(660, 216, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvdata-2.6-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette>=2.0,oglib_error>=2.0'),
(661, 217, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvdata-2.7-2.ogp', 'VIPM', '2', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette>=0.2,oglib_error>=2.0'),
(662, 217, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvdata-2.7-1.ogp', 'VIPM', '1', '2011-06-26 00:41:08', '', 'ogrsc_dynamicpalette>=2.0,oglib_error>=2.0'),
(663, 218, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvdata-2.8-1.ogp', 'VIPM', '1', '2007-06-26 08:26:24', '', 'ogrsc_dynamicpalette>=0.2,oglib_error>=2.0'),
(664, 219, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvdata-2.9-1.ogp', 'VIPM', '1', '2008-05-01 03:55:57', '', 'ogrsc_dynamicpalette>=0.2,oglib_error>=2.0'),
(665, 220, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvzip-2.0-2.ogp', 'VIPM', '2', '2008-05-01 03:55:57', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0, oglib_array >= 2.0, oglib_file >= 2.0'),
(666, 220, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvzip-2.0-1.ogp', 'VIPM', '1', '2008-05-01 03:55:57', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0, oglib_array >= 2.0, oglib_file >= 2.0'),
(667, 221, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvzip-2.1-1.ogp', 'VIPM', '1', '2008-05-01 03:55:57', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0, oglib_array >= 2.0, oglib_file >= 2.0'),
(668, 222, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvzip-2.2-1.ogp', 'VIPM', '1', '2008-05-01 03:55:57', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0, oglib_array >= 2.0, oglib_file >= 2.0'),
(669, 223, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvzip-2.3-2.ogp', 'VIPM', '2', '2008-05-01 03:55:57', '', 'ogrsc_dynamicpalette>=0.2,oglib_error>=2.0,oglib_array>=2.0,oglib_file>=2.5'),
(670, 223, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvzip-2.3-1.ogp', 'VIPM', '1', '2008-05-01 03:55:57', '', 'ogrsc_dynamicpalette>=2.0,oglib_error>=2.0,oglib_array>=2.0,oglib_file>=2.5'),
(671, 224, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvzip-2.4-1.ogp', 'VIPM', '1', '2009-01-02 22:19:25', '', 'ogrsc_dynamicpalette>=0.2,oglib_error>=2.0,oglib_file>=2.5'),
(672, 225, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvzip-2.5-1.ogp', 'VIPM', '1', '2009-04-28 01:09:39', '', 'ogrsc_dynamicpalette>=0.2,oglib_error>=2.0,oglib_file>=2.5'),
(673, 226, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvzip-2.5.1-1.ogp', 'VIPM', '1', '2009-09-05 16:58:01', '', 'ogrsc_dynamicpalette>=0.2,oglib_error>=2.0,oglib_file>=2.5'),
(674, 226, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvzip-2.5.1-2.ogp', 'VIPM', '2', '2009-09-16 00:51:07', '', 'ogrsc_dynamicpalette>=0.2,oglib_error>=2.0,oglib_file>=2.5'),
(675, 227, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_md5-1.2-1.ogp', 'VIPM', '1', '2011-06-26 00:41:09', '', NULL),
(676, 228, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_md5-1.3-1.ogp', 'VIPM', '1', '2011-06-26 00:41:09', '', NULL),
(677, 229, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_md5-1.4-1.ogp', 'VIPM', '1', '2011-06-26 00:41:09', '', NULL),
(678, 230, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_md5-1.5-1.ogp', 'VIPM', '1', '2011-06-26 00:41:09', '', NULL),
(679, 231, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_md5-1.6-1.ogp', 'VIPM', '1', '2007-01-09 22:58:54', '', 'ogrsc_dynamicpalette>=0.2'),
(680, 232, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_msgqueue-2.0-1.ogp', 'VIPM', '1', '2018-03-02 19:52:10', '', NULL),
(681, 233, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_msgqueue-2.1-1.ogp', 'VIPM', '1', '2018-03-02 19:52:10', '', NULL),
(682, 234, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_msgqueue-2.2-1.ogp', 'VIPM', '1', '2018-03-02 19:52:10', '', NULL),
(683, 235, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_msgqueue-2.3-1.ogp', 'VIPM', '1', '2007-01-02 10:52:15', '', 'ogrsc_dynamicpalette>=0.2,nirsc_html_help_common>=1.0'),
(684, 236, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_msgqueue-3.0-1.ogp', 'VIPM', '1', '2008-05-27 01:53:14', '', 'ogrsc_dynamicpalette>=0.2,nirsc_html_help_common>=1.0'),
(685, 237, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_numeric-2.0-1.ogp', 'VIPM', '1', '2011-06-26 00:41:09', '', 'ogrsc_dynamicpalette >= 2.0'),
(686, 238, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_numeric-2.1-1.ogp', 'VIPM', '1', '2011-06-26 00:41:09', '', 'ogrsc_dynamicpalette >= 2.0'),
(687, 239, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_numeric-2.2-1.ogp', 'VIPM', '1', '2011-06-26 00:41:09', '', 'ogrsc_dynamicpalette >= 2.0'),
(688, 240, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_numeric-2.3-1.ogp', 'VIPM', '1', '2007-01-02 04:37:50', '', 'ogrsc_dynamicpalette>=2.0'),
(689, 240, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_numeric-2.3-2.ogp', 'VIPM', '2', '2011-06-26 00:41:09', '', 'ogrsc_dynamicpalette>=0.2'),
(690, 241, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_picture-2.0-1.ogp', 'VIPM', '1', '2018-03-02 19:52:19', '', 'palette >= 2.0, file >= 2.0'),
(691, 242, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_picture-2.1-1.ogp', 'VIPM', '1', '2018-03-02 19:52:19', '', 'palette >= 2.0, file >= 2.0'),
(692, 243, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_picture-2.2-1.ogp', 'VIPM', '1', '2007-01-02 07:20:50', '', 'ogrsc_dynamicpalette>=0.2,oglib_file>=2.0,oglib_error>=2.0'),
(693, 244, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_portio-1.0-1.ogp', 'VIPM', '1', '2007-01-02 07:20:50', '', NULL),
(694, 245, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_portio-1.1-1.ogp', 'VIPM', '1', '2007-01-02 07:20:50', '', NULL),
(695, 246, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_portio-1.2-1.ogp', 'VIPM', '1', '2008-11-18 00:59:39', '', NULL),
(696, 247, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_string-2.0-1.ogp', 'VIPM', '1', '2011-06-26 00:41:09', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0, oglib_array >= 2.0, oglib_lvdata >= 2.0'),
(697, 248, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_string-2.1-1.ogp', 'VIPM', '1', '2011-06-26 00:41:09', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0, oglib_array >= 2.0, oglib_lvdata >= 2.0'),
(698, 249, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_string-2.2-1.ogp', 'VIPM', '1', '2011-06-26 00:41:09', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0, oglib_array >= 2.0, oglib_lvdata >= 2.0'),
(699, 250, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_string-2.3-1.ogp', 'VIPM', '1', '2011-06-26 00:41:09', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0, oglib_array >= 2.0, oglib_lvdata >= 2.0'),
(700, 251, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_string-2.4-1.ogp', 'VIPM', '1', '2011-06-26 00:41:09', '', 'ogrsc_dynamicpalette >= 2.0, oglib_error >= 2.0, oglib_array >= 2.0, oglib_lvdata >= 2.0'),
(701, 252, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_string-2.5-1.ogp', 'VIPM', '1', '2011-06-26 00:41:09', '', 'ogrsc_dynamicpalette>=2.0,oglib_error>=2.0,oglib_array>=2.0,oglib_lvdata>=2.0'),
(702, 253, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_string-2.6-1.ogp', 'VIPM', '1', '2007-01-25 09:27:24', '', 'ogrsc_dynamicpalette>=0.2,oglib_error>=2.0,oglib_array>=2.0,oglib_lvdata>=2.0'),
(703, 254, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_time-2.0-1.ogp', 'VIPM', '1', '2011-06-26 00:41:10', '', 'ogrsc_dynamicpalette >= 2.0'),
(704, 255, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_time-2.1-1.ogp', 'VIPM', '1', '2011-06-26 00:41:10', '', 'ogrsc_dynamicpalette >= 2.0'),
(705, 256, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_time-2.2-1.ogp', 'VIPM', '1', '2011-06-26 00:41:10', '', 'ogrsc_dynamicpalette >= 2.0'),
(706, 257, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_time-2.3-2.ogp', 'VIPM', '2', '2011-06-26 00:41:10', '', 'ogrsc_dynamicpalette>=0.2'),
(707, 257, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_time-2.3-1.ogp', 'VIPM', '1', '2011-06-26 00:41:10', '', 'ogrsc_dynamicpalette>=2.0'),
(708, 258, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_variantconfig-2.0-1.ogp', 'VIPM', '1', '2018-03-02 19:52:46', '', 'ogrsc_dynamicpalette >= 0.2, oglib_lvdata >= 2.0, oglib_error >= 2.0'),
(709, 259, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_variantconfig-2.1-1.ogp', 'VIPM', '1', '2018-03-02 19:52:46', '', 'ogrsc_dynamicpalette >= 0.2, oglib_lvdata >= 2.0, oglib_error >= 2.0'),
(710, 260, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_variantconfig-2.2-1.ogp', 'VIPM', '1', '2018-03-02 19:52:46', '', 'ogrsc_dynamicpalette >= 0.2, oglib_lvdata >= 2.0, oglib_error >= 2.0'),
(711, 261, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_variantconfig-2.3-1.ogp', 'VIPM', '1', '2018-03-02 19:52:46', '', 'ogrsc_dynamicpalette >= 0.2, oglib_lvdata >= 2.0, oglib_error >= 2.0'),
(712, 262, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_variantconfig-2.4-1.ogp', 'VIPM', '1', '2018-03-02 19:52:46', '', 'ogrsc_dynamicpalette >= 0.2, oglib_lvdata >= 2.0, oglib_error >= 2.0'),
(713, 263, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_variantconfig-2.5-1.ogp', 'VIPM', '1', '2018-03-02 19:52:46', '', 'ogrsc_dynamicpalette >= 0.2, oglib_lvdata >= 2.0, oglib_error >= 2.0'),
(714, 264, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_variantconfig-2.6-1.ogp', 'VIPM', '1', '2018-03-02 19:52:46', '', 'ogrsc_dynamicpalette>=0.2,oglib_lvdata>=2.0,oglib_error>=2.0'),
(715, 265, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_variantconfig-2.7-2.ogp', 'VIPM', '2', '2018-03-02 19:52:46', '', 'ogrsc_dynamicpalette>=0.2,oglib_lvdata>=2.0,oglib_string>=2.0,oglib_error>=2.0'),
(716, 265, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_variantconfig-2.7-1.ogp', 'VIPM', '1', '2018-03-02 19:52:46', '', 'ogrsc_dynamicpalette>=0.2,oglib_lvdata>=2.0,oglib_error>=2.0'),
(717, 266, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogmnu_appcontrol_plus-0.1-1.ogp', 'VIPM', '1', '2018-03-02 19:52:46', '', 'ogrsc_dynamicpalette >= 0.2'),
(718, 267, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogmnu_appcontrol_plus-0.2-1.ogp', 'VIPM', '1', '2018-03-02 19:52:46', '', 'ogrsc_dynamicpalette >= 0.2'),
(719, 268, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogmnu_appcontrol_plus-0.3-1.ogp', 'VIPM', '1', '2018-03-02 19:52:46', '', 'ogrsc_dynamicpalette >= 0.2'),
(720, 269, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogmnu_classic_sync-2.0-1.ogp', 'VIPM', '1', '2018-03-02 19:52:46', '', 'ogrsc_dynamicpalette >= 2.0'),
(721, 270, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogmnu_classic_sync-2.1-1.ogp', 'VIPM', '1', '2018-03-02 19:52:46', '', 'ogrsc_dynamicpalette >= 2.0'),
(722, 271, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogmnu_classic_sync-2.2-1.ogp', 'VIPM', '1', '2018-03-02 19:52:46', '', 'ogrsc_dynamicpalette >= 2.0'),
(723, 272, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogmnu_classic_sync-2.3-1.ogp', 'VIPM', '1', '2018-03-02 19:52:46', '', 'ogrsc_dynamicpalette >= 2.0'),
(724, 273, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogmnu_classic_sync-2.4-1.ogp', 'VIPM', '1', '2018-03-02 19:52:46', '', 'ogrsc_dynamicpalette >= 2.0'),
(725, 274, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogmnu_classic_sync-2.5-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', 'ogrsc_dynamicpalette>=0.2'),
(726, 275, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogpatch_librarian_bugfix-1.0-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', NULL),
(727, 276, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=ogpatch_ni_motion6x_bugfix-1.0-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', 'oglib_file>=2.5,oglib_array>=2.3,oglib_error>=2.0'),
(728, 277, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=ogpatch_ni_motion7x_bugfix-1.0-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', 'oglib_file>=2.5,oglib_array>=2.3,oglib_error>=2.0'),
(729, 278, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogpatch_notifier_bugfix-1.0-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', NULL),
(730, 279, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=ogpatch_template_bugfix-1.0-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', NULL),
(731, 280, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogab/ogrsc_builder-1.0.0alpha-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', NULL),
(732, 281, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogab/ogrsc_builder-1.0.0alpha12-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', NULL),
(733, 282, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogab/ogrsc_builder-1.0.0alpha2-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', NULL),
(734, 283, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogab/ogrsc_builder-1.0.0alpha3-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', NULL),
(735, 284, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogab/ogrsc_builder-1.0.0alpha4-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', NULL),
(736, 285, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogab/ogrsc_builder-1.0.0alpha6-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', NULL),
(737, 286, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogab/ogrsc_builder-1.0.0alpha8-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', NULL),
(738, 287, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogab/ogrsc_builder-1.0.0alpha9-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', NULL),
(739, 288, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogab/ogrsc_builder-1.0.0beta01-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', NULL),
(740, 289, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogab/ogrsc_builder-1.0.0beta02-2.ogp', 'VIPM', '2', '2007-03-06 11:44:34', '', NULL),
(741, 290, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogab/ogrsc_builder-1.0.0beta03-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', NULL),
(742, 291, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogab/ogrsc_builder-1.0.0beta04-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', NULL),
(743, 292, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogab/ogrsc_builder-1.0.0beta05-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', NULL),
(744, 293, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogab/ogrsc_builder-1.0.0beta07-1.ogp', 'VIPM', '1', '2007-03-06 11:44:34', '', NULL),
(745, 294, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_builder-2.0.0.399-1.ogp', 'VIPM', '1', '2008-06-12 01:36:56', '', NULL),
(746, 295, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_builder-3.0.0.9-1.ogp', 'VIPM', '1', '2010-01-15 18:39:25', '', NULL),
(747, 296, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_compare_vi_to_disk-1.0-1.ogp', 'VIPM', '1', '2011-11-22 04:23:13', '', NULL),
(748, 297, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_compare_vi_to_disk-1.1-1.ogp', 'VIPM', '1', '2011-11-22 04:23:13', '', NULL),
(749, 298, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_deab-0.10-1.ogp', 'VIPM', '1', '2011-11-22 04:23:13', '', NULL),
(750, 299, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_deab-0.9-1.ogp', 'VIPM', '1', '2011-11-22 04:23:13', '', NULL),
(751, 300, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_dynamicpalette-0.10-1.ogp', 'VIPM', '1', '2011-11-22 04:23:13', '', NULL),
(752, 301, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_dynamicpalette-0.11-1.ogp', 'VIPM', '1', '2011-11-22 04:23:13', '', NULL),
(753, 302, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_dynamicpalette-0.12-1.ogp', 'VIPM', '1', '2011-11-22 04:23:13', '', NULL),
(754, 303, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_dynamicpalette-0.13-1.ogp', 'VIPM', '1', '2011-11-22 04:23:13', '', NULL),
(755, 304, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_dynamicpalette-0.14-1.ogp', 'VIPM', '1', '2011-11-22 04:23:13', '', NULL),
(756, 305, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_dynamicpalette-0.15-1.ogp', 'VIPM', '1', '2011-11-22 04:23:13', '', NULL),
(757, 306, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_dynamicpalette-0.16-1.ogp', 'VIPM', '1', '2007-03-19 20:11:03', '', NULL),
(758, 307, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_dynamicpalette-0.17-1.ogp', 'VIPM', '1', '2008-02-19 01:16:05', '', NULL),
(759, 308, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_dynamicpalette-0.18-1.ogp', 'VIPM', '1', '2009-02-10 09:22:15', '', NULL),
(760, 309, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_dynamicpalette-0.19-1.ogp', 'VIPM', '1', '2010-02-18 04:35:16', '', NULL),
(761, 310, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_dynamicpalette-0.2-1.ogp', 'VIPM', '1', '2010-02-18 04:35:16', '', NULL),
(762, 311, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_dynamicpalette-0.4-1.ogp', 'VIPM', '1', '2010-02-18 04:35:16', '', NULL),
(763, 312, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_dynamicpalette-0.5-1.ogp', 'VIPM', '1', '2010-02-18 04:35:16', '', NULL),
(764, 313, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_dynamicpalette-0.6-1.ogp', 'VIPM', '1', '2010-02-18 04:35:16', '', NULL),
(765, 314, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_dynamicpalette-0.7-1.ogp', 'VIPM', '1', '2010-02-18 04:35:16', '', NULL),
(766, 315, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_dynamicpalette-0.8-1.ogp', 'VIPM', '1', '2010-02-18 04:35:16', '', NULL),
(767, 316, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_dynamicpalette-0.9-1.ogp', 'VIPM', '1', '2010-02-18 04:35:16', '', NULL),
(768, 317, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogab/ogrsc_msi_builder-1.0.0alpha1-1.ogp', 'VIPM', '1', '2010-02-18 04:35:16', '', NULL),
(769, 318, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogab/ogrsc_msi_builder-1.0.0alpha2-1.ogp', 'VIPM', '1', '2010-02-18 04:35:16', '', NULL),
(770, 319, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogpm/ogrsc_package_builder-0.1.0alpha1-1.ogp', 'VIPM', '1', '2010-02-18 04:35:16', '', 'oglib_file>=2.4,oglib_string>=2.3,oglib_appcontrol>=2.7'),
(771, 320, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogpm/ogrsc_package_builder-0.1.0alpha3-1.ogp', 'VIPM', '1', '2010-02-18 04:35:16', '', 'oglib_file>=2.4,oglib_string>=2.3,oglib_appcontrol>=2.7'),
(772, 321, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogpm/ogrsc_package_builder-0.1.0alpha5-1.ogp', 'VIPM', '1', '2010-02-18 04:35:16', '', NULL),
(773, 322, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://ogpm/ogrsc_package_builder-0.1.0alpha6-1.ogp', 'VIPM', '1', '2010-02-18 04:35:16', '', NULL),
(774, 323, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_rename_folder_of_vis-1.4-1.ogp', 'VIPM', '1', '2011-11-22 04:23:35', '', NULL),
(775, 324, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_rename_folder_of_vis-1.5-1.ogp', 'VIPM', '1', '2011-11-22 04:23:35', '', NULL),
(776, 325, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_rename_folder_of_vis-1.6-1.ogp', 'VIPM', '1', '2007-02-17 07:50:58', '', NULL),
(777, 326, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_restart-1.0-1.ogp', 'VIPM', '1', '2007-02-17 07:50:58', '', NULL),
(778, 327, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_restart-1.1-1.ogp', 'VIPM', '1', '2007-02-17 07:50:58', '', NULL),
(779, 328, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_restart-1.2-1.ogp', 'VIPM', '1', '2007-02-17 07:50:58', '', NULL),
(780, 329, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_restart-1.3-1.ogp', 'VIPM', '1', '2007-02-17 07:50:58', '', NULL),
(781, 330, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_appcontrol-4.0.0.5.vip', 'VIPM', '4.0.0.5', '2011-06-26 00:41:06', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2010\n[FIX] 1962840 - Missing description in OpenG Application Control Tools\n[FIX] 3139605 - Add Polymorphic Selector Names of various VIs', 'oglib_error>=2.0,oglib_lvdata>=2.0'),
(782, 330, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_appcontrol/oglib_appcontrol-4.1.0.7.vip', 'VIPM', '4.1.0.7', '2018-03-02 19:45:36', '[FIX] 3275377 - Memory Leak from \"Current VIs Parents Ref.vi\"\n[FIX] 275359 - \'Set Control Value {Variant}\' function returns error', 'oglib_error>=2.0,oglib_lvdata>=2.0'),
(783, 331, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_array-4.0.0.9.vip', 'VIPM', '4.0.0.9', '2011-06-26 00:41:06', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2010\n[FIX] 2824056 - array library URL is wrong', 'oglib_error>=2.0,oglib_lvdata>=2.0,oglib_string>=2.6'),
(784, 331, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_array-4.1.0.13.vip', 'VIPM', '4.1.0.13', '2011-10-08 10:56:32', '[FIX] 3390029 - \'Delete elements from 2D array.vi\' outputs incorrect result', 'oglib_error>=2.0,oglib_lvdata>=2.0,oglib_string>=2.6'),
(785, 331, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_array/oglib_array-4.1.1.14.vip', 'VIPM', '4.1.1.14', '2018-03-09 12:13:43', 'Package build with VIPM 2013\n[FIX] 126 - File Library Fix for QuickDrop and Shortcut Palettes: Add (OpenG) Suffix to OpenG VIs that conflict with built-ins', 'oglib_error>=2.0,oglib_lvdata>=2.0,oglib_string>=2.6'),
(786, 332, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_boolean/oglib_boolean-4.0.0.7.vip', 'VIPM', '4.0.0.7', '2018-03-02 19:50:38', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2010', NULL),
(787, 333, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_builder-3.0.1-2.ogp', 'VIPM', '2', '2011-06-26 00:41:10', '', NULL),
(788, 334, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_buttons/oglib_buttons-4.0.0.7.vip', 'VIPM', '4.0.0.7', '2018-03-02 19:50:42', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2010', NULL),
(789, 335, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_compare_vi_to_disk-4.0.0.9.vip', 'VIPM', '4.0.0.9', '2011-11-22 04:23:13', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2011\n[FIX] 3275738 - ogrsc_compare_vi_to_disk does not work for LV8.2 or later', NULL),
(790, 336, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_comparison/oglib_comparison-4.0.0.3.vip', 'VIPM', '4.0.0.3', '2018-03-02 19:50:46', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2010', NULL),
(791, 337, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_dictionary/oglib_dictionary-4.0.0.4.vip', 'VIPM', '4.0.0.4', '2018-03-02 19:50:54', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2010', NULL),
(792, 338, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_error-4.0.0.12.vip', 'VIPM', '4.0.0.12', '2011-06-26 00:41:08', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater).\nPackage build with VIPM 2010\n[FIX] 2468528 - OpenG Error toolkit should use brown as color instead of pink', NULL),
(793, 338, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_error-4.1.0.13.vip', 'VIPM', '4.1.0.13', '2011-10-08 10:56:33', '[FIX] 3410309 - Add Error Constant to Palette', NULL),
(794, 338, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_error/oglib_error-4.2.0.23.vip', 'VIPM', '4.2.0.23', '2018-03-02 19:51:02', '[NEW] 3426051 - Add new \'Filter Error Codes\" API', NULL),
(795, 339, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_file-4.0.0.20.vip', 'VIPM', '4.0.0.20', '2011-06-26 00:41:08', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2010\n[FIX] 3127080 - Remove OpenG Tags label from FP of all VIs\n[FIX] 3127078 - Make \"Append Path to Root if Relative\" into Poly VI\n[FIX] 3127076 - Use type for poly Selector Names of various VIs\n[FIX] 3123509 - \"Compare Two Paths\" does not work with relative path inputs\n[FIX] 2819187 - List Recursive eliminates errors on an empty path\n[FIX] 1962835 - Missing description in OpenG File\n[FIX] 1815370 - \"Compare Two Paths\" should handle arrays (poly VI)\n[FIX] 1815368 - \"File Exists\" should also handle arrays (be poly VI)', 'oglib_appcontrol>=2.10,oglib_array>=3.0.0,oglib_error>=2.3,oglib_string>=2.6'),
(796, 339, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_file/oglib_file-4.0.1.22.vip', 'VIPM', '4.0.1.22', '2018-03-02 19:51:05', 'Package build with VIPM 2013\n[FIX] 125 - File Library Fix for QuickDrop and Shortcut Palettes: Add (OpenG) Suffix to OpenG VIs that conflict with built-ins', 'oglib_appcontrol>=2.10,oglib_array>=3.0.0,oglib_error>=2.3,oglib_string>=2.6'),
(797, 340, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_labpython-4.0.0.4.vip', 'VIPM', '4.0.0.4', '2011-12-20 22:02:08', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2011', NULL),
(798, 341, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvdata-4.0.0.7.vip', 'VIPM', '4.0.0.7', '2011-06-26 00:41:08', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2010\n[FIX] 1962359 - Wrong description in OpenG LabVIEW Data Tools\n[FIX] 1962300 - Missing VI descriptions in lvdata VIs\n[FIX] 1962287 - Wrong description for Reshape 1D Array\n[FIX] 1962279 - Wrong description for Replace Array Elements\n[FIX] 3283242 - Remove Typedefs from Variant was not working in 2009', 'oglib_error>=2.0'),
(799, 341, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_lvdata-4.1.0.16.vip', 'VIPM', '4.1.0.16', '2011-10-08 10:56:33', '[FIX] 3386531 - Get Array Element Default Data does not support Timestamp\n[FIX] 3252254 - \"Set Variant Name.vi\" Kills Attributes\n[FIX] 3386530 - Create new Waveform and Refnum TD subtype VIs\n[FIX] 3386538 - Update Variant Constant to LabVIEW 2009 appearance\n[FIX] 3411109 - Recursive VIs should use native recursion (lvdata)\n[FIX] 3411324 - New VI: \"Get Default Data from Variant\"', 'oglib_error>=2.0'),
(800, 341, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_lvdata/oglib_lvdata-4.2.0.21.vip', 'VIPM', '4.2.0.21', '2018-03-02 19:51:22', '[NEW] 3275738 - New LVOOP Data Functions', 'oglib_error>=4.2.0.23'),
(801, 342, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_lvzip/oglib_lvzip-4.0.0-2.ogp', 'VIPM', '2', '2018-03-02 19:51:34', '', 'oglib_error>=2.0,oglib_file>=2.5'),
(802, 343, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_largefile/oglib_largefile-4.0.0.3.vip', 'VIPM', '4.0.0.3', '2018-03-02 19:51:16', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2010\n[FIX] 1960157 - Missing VI descriptions in oglib_largefile 1.4-1\n[FIX] 3140190 - Add Polymorphic Selector Names of various VIs', 'oglib_error>=2.0'),
(803, 344, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogedit_file_locate_in_project-4.0.0.7.vip', 'VIPM', '4.0.0.7', '2011-11-22 04:22:31', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2011', NULL),
(804, 345, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_md5-4.0.0.5.vip', 'VIPM', '4.0.0.5', '2011-06-26 00:41:09', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2010', NULL),
(805, 345, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_md5-4.1.0.8.vip', 'VIPM', '4.1.0.8', '2011-10-08 10:56:33', '[FIX] 3410441 - Add \'MD5 Hash\' candidate to package\n[FIX] 3410442 - Add Hexadecimal String output to MD5 Digest', NULL),
(806, 345, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_md5/oglib_md5-4.1.1.10.vip', 'VIPM', '4.1.1.10', '2018-03-02 19:52:06', '[MOD] 3421698 - Message Digest Polymorphic VI should show instance icons', NULL),
(807, 346, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_msgqueue/oglib_msgqueue-4.0.0.15.vip', 'VIPM', '4.0.0.15', '2018-03-02 19:52:10', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2010', NULL),
(808, 347, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_numeric-4.0.0.5.vip', 'VIPM', '4.0.0.5', '2011-06-26 00:41:09', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2010', NULL),
(809, 347, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_numeric/oglib_numeric-4.1.0.8.vip', 'VIPM', '4.1.0.8', '2018-03-02 19:52:16', '[MOD] 3419758 - Create new Random Number Within Range - I32 VI\n[NEW] 3422921 - Add Timestamp Constant', NULL),
(810, 348, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_picture/oglib_picture-4.0.0.13.vip', 'VIPM', '4.0.0.13', '2018-03-02 19:52:19', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2010\n[FIX] 1913964 - Path input of \"Draw Image from File\" should not say \"BMP\"\n[NEW] 3277276 - Added support for GIF files to \"Draw Image from File\"', 'oglib_error>=2.0,oglib_file>=2.1'),
(811, 349, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_portio/oglib_portio-4.0.0-2.ogp', 'VIPM', '2', '2018-03-02 19:52:25', '', NULL),
(812, 350, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/ogrsc_rename_folder_of_vis-4.0.0.15.vip', 'VIPM', '4.0.0.15', '2011-11-22 04:23:35', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2011', NULL),
(813, 351, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_string-4.0.0.6.vip', 'VIPM', '4.0.0.6', '2011-06-26 00:41:09', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2010', 'oglib_lvdata>=2.9,oglib_error>=2.3'),
(814, 351, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_string/oglib_string-4.1.0.12.vip', 'VIPM', '4.1.0.12', '2018-03-02 19:52:37', '[MOD] 3303663 - Format Variant Into String__ogtk.vi doesn\'t handle Timestamp\r\n[MOD] 3292424 - Update Trim Whitespace with Fast Trim\r\n[FIX] 3275381 - \"Slice String__ogtk.vi\" has Input or RHS of Connector Pane\r\n[FIX] 1958939 - \"Scan Variant from String\" missing description\n[MOD] 3275249 - Update OpenG Comment\r\n[FIX] 3386135 - OpenG Comment not Merge VI in palette\r\n[MOD] 1914597 - Format Variant Into String missing DAQ, DAQmx, and VISA type\r\n[MOD] 921506 - \"Format Variant Into String\" should accept RefNums\r\n[NEW] 3419755 - Create new String To Character Array VI', 'oglib_error>=4.2.0.23,oglib_lvdata>=4.1.0.16'),
(815, 352, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/oglib_time-4.0.0.2.vip', 'VIPM', '4.0.0.2', '2011-06-26 00:41:10', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2010', NULL),
(816, 352, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_time/oglib_time-4.0.1.3.vip', 'VIPM', '4.0.1.3', '2018-03-02 19:52:43', 'Package build with VIPM 2013\n[FIX] 127 - Time Library Fix for QuickDrop and Shortcut Palettes: Add (OpenG) Suffix to OpenG VIs that conflict with built-ins', NULL),
(817, 353, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/openg.org_lib_openg_toolkit-4.0.0.6.vip', 'VIPM', '4.0.0.6', '2011-06-26 00:41:11', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2010', 'oglib_appcontrol>=4.0.0.5,oglib_array>=4.0.0.9,oglib_boolean>=4.0.0.7,oglib_buttons>=4.0.0.7,oglib_comparison>=4.0.0.3,oglib_dictionary>=4.0.0.4,oglib_error>=4.0.0.12,oglib_file>=4.0.0.20,oglib_largefile>=4.0.0.3,oglib_lvzip>=4.0.0,oglib_md5>=4.0.0.5,oglib_msgqueue>=4.0.0.15,oglib_numeric>=4.0.0.5,oglib_picture>=4.0.0.13,oglib_portio>=4.0.0,oglib_string>=4.0.0.6,oglib_time>=4.0.0.2,oglib_variantconfig>=4.0.0.5'),
(818, 353, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/sf://opengtoolkit/openg.org_lib_openg_toolkit-4.0.1.9.vip', 'VIPM', '4.0.1.9', '2011-08-12 01:03:30', '[FIX] 3386109 - LabVIEW Data Library missing as dependency', 'oglib_appcontrol>=4.0.0.5,oglib_array>=4.0.0.9,oglib_boolean>=4.0.0.7,oglib_buttons>=4.0.0.7,oglib_comparison>=4.0.0.3,oglib_dictionary>=4.0.0.4,oglib_error>=4.0.0.12,oglib_file>=4.0.0.20,oglib_largefile>=4.0.0.3,oglib_lvdata>=4.0.0.7,oglib_lvzip>=4.0.0,oglib_md5>=4.0.0.5,oglib_msgqueue>=4.0.0.15,oglib_numeric>=4.0.0.5,oglib_picture>=4.0.0.13,oglib_portio>=4.0.0,oglib_string>=4.0.0.6,oglib_time>=4.0.0.2,oglib_variantconfig>=4.0.0.5'),
(819, 354, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/oglib_variantconfig/oglib_variantconfig-4.0.0.5.vip', 'VIPM', '4.0.0.5', '2018-03-02 19:52:46', 'Package sources upgraded to LabVIEW 2009 (package now compatible with LV2009 or greater)\nPackage build with VIPM 2010\n[FIX] 1960078 - Missing description in \"Read/Write Panel to INI\"\n[FIX] 3004519 - Use Custom Decimal sign\n[FIX] 3004524 - Replace deprecated methods', 'oglib_error>=2.3,oglib_lvdata>=2.9,oglib_string>=2.6'),
(820, 355, 'https://gitlab.com/mgi/gpm-packages/panel-actor-error-reporter', 'GPM', '0.1.1', '2018-11-27 19:37:54', '## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/detailed-error (^0.1.0),@mgi/error-reporter-core (^0.1.0),@mgi/panel-actors (^3.0.3)'),
(821, 355, 'https://gitlab.com/mgi/gpm-packages/panel-actor-error-reporter', 'GPM', '0.1.2', '2020-10-12 19:11:44', '## 0.1.2\r\n\r\nAdd optional parameter for error throttling interval to prevent multiple pop ups from overwhelming user.\r\n\r\n## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/detailed-error (^0.1.0),@mgi/error-reporter-core (^0.1.0),@mgi/panel-actors (^3.0.3)'),
(822, 355, 'https://gitlab.com/mgi/gpm-packages/panel-actor-error-reporter', 'GPM', '0.1.3', '2020-10-12 22:37:10', '## 0.1.3\r\n\r\nFix wire datatype issue\r\n\r\n## 0.1.2\r\n\r\nAdd optional parameter for error throttling interval to prevent multiple pop ups from overwhelming user.\r\n\r\n## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/detailed-error (^0.1.0),@mgi/error-reporter-core (^0.1.0),@mgi/panel-actors (^3.0.3)'),
(823, 356, 'https://gitlab.com/mgi/gpm-packages/panel-actors', 'GPM', '3.0.5', '2018-11-27 19:36:12', '## 3.0.5\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n# 3.0.4\r\n\r\n* Fixed VI Descriptions.\r\n* Moved dependency on Monitored Actor to a dev dependancy.\r\n\r\n# 3.0.3\r\n\r\nFixed missing connector pane item.\r\n\r\n# 3.0.2\r\n\r\nRemoved final references to VIPM.\r\n\r\n# 3.0.1\r\n\r\nPort from VIPM.', '@mgi/monitored-actor-core (^3.0.2),@mgi/panel-manager (^2.0.0)'),
(824, 356, 'https://gitlab.com/mgi/gpm-packages/panel-actors', 'GPM', '3.1.0', '2019-02-14 17:02:55', '## 3.1.0\r\n\r\nAdded `Replaced VI` output to `Add Panel Tier.vi`\r\n\r\n## 3.0.5\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n# 3.0.4\r\n\r\n* Fixed VI Descriptions.\r\n* Moved dependency on Monitored Actor to a dev dependancy.\r\n\r\n# 3.0.3\r\n\r\nFixed missing connector pane item.\r\n\r\n# 3.0.2\r\n\r\nRemoved final references to VIPM.\r\n\r\n# 3.0.1\r\n\r\nPort from VIPM.', '@mgi/monitored-actor-core (^3.0.2),@mgi/panel-manager (^2.0.0)'),
(825, 356, 'https://gitlab.com/mgi/gpm-packages/panel-actors', 'GPM', '3.1.1', '2019-06-20 15:40:05', '## 3.1.1\r\n\r\nAdded `Panel Helper` output to `Register for Events.vi`\r\n\r\n## 3.1.0\r\n\r\nAdded `Replaced VI` output to `Add Panel Tier.vi`\r\n\r\n## 3.0.5\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n# 3.0.4\r\n\r\n* Fixed VI Descriptions.\r\n* Moved dependency on Monitored Actor to a dev dependancy.\r\n\r\n# 3.0.3\r\n\r\nFixed missing connector pane item.\r\n\r\n# 3.0.2\r\n\r\nRemoved final references to VIPM.\r\n\r\n# 3.0.1\r\n\r\nPort from VIPM.', '@mgi/monitored-actor-core (^3.0.2),@mgi/panel-manager (^2.0.0)'),
(826, 357, 'https://gitlab.com/mgi/gpm-packages/panel-manager', 'GPM', '2.0.1', '2018-11-27 19:29:07', '## 2.0.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n# 2.0.0\r\n\r\nPort from VIPM Version', NULL),
(827, 357, 'https://gitlab.com/mgi/gpm-packages/panel-manager', 'GPM', '2.0.2', '2019-07-17 16:34:41', '## 2.0.2\r\n\r\nFixed issue where init waiter would never return in there was an error wired into `Initialize.vi`\r\n\r\n## 2.0.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n# 2.0.0\r\n\r\nPort from VIPM Version\r\n', NULL),
(828, 357, 'https://gitlab.com/mgi/gpm-packages/panel-manager', 'GPM', '2.0.3', '2020-05-12 17:26:41', '## 2.0.3\r\n\r\nFixed a possible race condition when persistent window position is written to file.\r\n\r\nWindows with persistent position now save position before hiding the window (not just before closing it).\r\n\r\n## 2.0.2\r\n\r\nFixed issue where init waiter would never return in there was an error wired into `Initialize.vi`\r\n\r\n## 2.0.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n# 2.0.0\r\n\r\nPort from VIPM Version\r\n', NULL),
(829, 358, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_panerelief/jki_lib_panerelief-2.0.0.5.vip', 'VIPM', '2.0.0.5', '2020-02-12 15:06:37', 'Second release version of the PaneRelief Quick Drop Shortcut tool.\n*Includes ability to change size of splitters and to apply settings to multiple panes/splitters at once', 'mgi_lib_mgi_panel_manager>=1.0.1.4,mgi_lib_monitored_actor>=2.0.0.23,oglib_array>=4.1.1.14,oglib_md5>=4.1.1.10'),
(830, 358, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_panerelief/jki_lib_panerelief-2.0.1.12.vip', 'VIPM', '2.0.1.12', '2020-05-29 14:28:12', 'Second release version of the PaneRelief Quick Drop Shortcut tool.\r\n*Includes ability to change size of splitters and to apply settings to multiple panes/splitters at once\n*Bug Fix: changing splitter size in class method no longer removes class membership', 'mgi_lib_mgi_panel_manager>=1.0.1.4,mgi_lib_monitored_actor>=2.0.0.23,oglib_array>=4.1.1.14,oglib_md5>=4.1.1.10');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(831, 358, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_panerelief/jki_lib_panerelief-2.0.2.18.vip', 'VIPM', '2.0.2.18', '2020-06-02 13:28:24', '* You can now launch PaneRelief from the Tools menu of VIs by selecting \"Tools>>PaneRelief... \"', 'mgi_lib_mgi_panel_manager>=1.0.1.4,mgi_lib_monitored_actor>=2.0.0.23,oglib_array>=4.1.1.14,oglib_md5>=4.1.1.10'),
(832, 358, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_panerelief/jki_lib_panerelief-2.0.3.1.vip', 'VIPM', '2.0.3.1', '2020-07-30 18:44:37', '* New button to set minimum pane size to current size!', 'mgi_lib_mgi_panel_manager>=1.0.1.4,mgi_lib_monitored_actor>=2.0.0.23,oglib_array>=4.1.1.14,oglib_md5>=4.1.1.10'),
(833, 359, 'https://bitbucket.org/composedsystems/composed-persistence', 'GPM', '0.0.1-Beta', '2020-05-02 20:58:07', '## [0.0.1] - 2020-05-02-Beta\r\n- Initial release\r\n- No readme in place yet\r\n- No testing in place', NULL),
(834, 359, 'https://bitbucket.org/composedsystems/composed-persistence', 'GPM', '0.0.2-Beta', '2020-05-02 21:09:46', '## [0.0.2] - 2020-05-02-Beta\r\n- Added Name Spacing\r\n\r\n## [0.0.1] - 2020-05-02-Beta\r\n- Initial release\r\n- No readme in place yet\r\n- No testing in place', NULL),
(835, 359, 'https://bitbucket.org/composedsystems/composed-persistence', 'GPM', '0.0.3-Beta', '2020-05-03 02:39:49', '## [0.0.3] - 2020-05-02-Beta\r\n- Depends on Data Type Serializer\r\n- Created CAML for Custom Attributes\r\n\r\n## [0.0.2] - 2020-05-02-Beta\r\n- Added Name Spacing\r\n\r\n## [0.0.1] - 2020-05-02-Beta\r\n- Initial release\r\n- No readme in place yet\r\n- No testing in place', '@cs/data-type-serializer (^0.0.1)'),
(836, 359, 'https://bitbucket.org/composedsystems/composed-persistence', 'GPM', '0.0.4-Beta', '2020-05-04 01:29:07', '## [0.0.4] - 2020-05-03-Beta\r\n- Created CAML for Custom Attributes\r\n\r\n## [0.0.3] - 2020-05-02-Beta\r\n- Depends on Data Type Serializer\r\n\r\n## [0.0.2] - 2020-05-02-Beta\r\n- Added Name Spacing\r\n\r\n## [0.0.1] - 2020-05-02-Beta\r\n- Initial release\r\n- No readme in place yet\r\n- No testing in place', '@cs/data-type-serializer (^0.0.1)'),
(837, 359, 'https://bitbucket.org/composedsystems/composed-persistence', 'GPM', '0.0.5-Beta', '2020-05-04 03:37:27', '## [0.0.5] - 2020-05-03-Beta\r\n- Built against Data Type Serializer v0.0.2\r\n\r\n## [0.0.4] - 2020-05-03-Beta\r\n- Created CAML for Custom Attributes\r\n\r\n## [0.0.3] - 2020-05-02-Beta\r\n- Depends on Data Type Serializer\r\n\r\n## [0.0.2] - 2020-05-02-Beta\r\n- Added Name Spacing\r\n\r\n## [0.0.1] - 2020-05-02-Beta\r\n- Initial release\r\n- No readme in place yet\r\n- No testing in place', '@cs/data-type-serializer (^0.0.2)'),
(838, 359, 'https://bitbucket.org/composedsystems/composed-persistence', 'GPM', '0.0.6-Beta', '2020-05-05 21:23:34', '## [0.0.6] - 2020-05-05-Beta\r\n- Built against Data Type Serializer v0.0.3\r\n\r\n## [0.0.5] - 2020-05-03-Beta\r\n- Built against Data Type Serializer v0.0.2\r\n\r\n## [0.0.4] - 2020-05-03-Beta\r\n- Created CAML for Custom Attributes\r\n\r\n## [0.0.3] - 2020-05-02-Beta\r\n- Depends on Data Type Serializer\r\n\r\n## [0.0.2] - 2020-05-02-Beta\r\n- Added Name Spacing\r\n\r\n## [0.0.1] - 2020-05-02-Beta\r\n- Initial release\r\n- No readme in place yet\r\n- No testing in place', '@cs/data-type-serializer (^0.0.3-Beta)'),
(839, 359, 'https://bitbucket.org/composedsystems/composed-persistence', 'GPM', '0.0.7-Beta', '2020-05-10 01:31:29', '## [0.0.7] - 2020-05-05-Beta\r\n- Built against Data Type Serializer v0.0.6\r\n\r\n## [0.0.6] - 2020-05-05-Beta\r\n- Built against Data Type Serializer v0.0.3\r\n\r\n## [0.0.5] - 2020-05-03-Beta\r\n- Built against Data Type Serializer v0.0.2\r\n\r\n## [0.0.4] - 2020-05-03-Beta\r\n- Created CAML for Custom Attributes\r\n\r\n## [0.0.3] - 2020-05-02-Beta\r\n- Depends on Data Type Serializer\r\n\r\n## [0.0.2] - 2020-05-02-Beta\r\n- Added Name Spacing\r\n\r\n## [0.0.1] - 2020-05-02-Beta\r\n- Initial release\r\n- No readme in place yet\r\n- No testing in place', '@cs/data-type-serializer (^0.0.6-Beta)'),
(840, 359, 'https://bitbucket.org/composedsystems/composed-persistence', 'GPM', '0.0.8-Beta', '2020-05-10 17:43:02', '## [0.0.8] - 2020-05-10-Beta\r\n- Built against Data Type Serializer v0.0.7\r\n\r\n## [0.0.7] - 2020-05-05-Beta\r\n- Built against Data Type Serializer v0.0.6\r\n\r\n## [0.0.6] - 2020-05-05-Beta\r\n- Built against Data Type Serializer v0.0.3\r\n\r\n## [0.0.5] - 2020-05-03-Beta\r\n- Built against Data Type Serializer v0.0.2\r\n\r\n## [0.0.4] - 2020-05-03-Beta\r\n- Created CAML for Custom Attributes\r\n\r\n## [0.0.3] - 2020-05-02-Beta\r\n- Depends on Data Type Serializer\r\n\r\n## [0.0.2] - 2020-05-02-Beta\r\n- Added Name Spacing\r\n\r\n## [0.0.1] - 2020-05-02-Beta\r\n- Initial release\r\n- No readme in place yet\r\n- No testing in place', '@cs/data-type-serializer (^0.0.7-Beta)'),
(841, 359, 'https://bitbucket.org/composedsystems/composed-persistence', 'GPM', '0.0.9-Beta', '2020-05-11 10:56:32', '## [0.0.9] - 2020-05-11-Beta\r\n- Updated to handle edge case of pointers as string type\r\n\r\n## [0.0.8] - 2020-05-10-Beta\r\n- Built against Data Type Serializer v0.0.7\r\n\r\n## [0.0.7] - 2020-05-05-Beta\r\n- Built against Data Type Serializer v0.0.6\r\n\r\n## [0.0.6] - 2020-05-05-Beta\r\n- Built against Data Type Serializer v0.0.3\r\n\r\n## [0.0.5] - 2020-05-03-Beta\r\n- Built against Data Type Serializer v0.0.2\r\n\r\n## [0.0.4] - 2020-05-03-Beta\r\n- Created CAML for Custom Attributes\r\n\r\n## [0.0.3] - 2020-05-02-Beta\r\n- Depends on Data Type Serializer\r\n\r\n## [0.0.2] - 2020-05-02-Beta\r\n- Added Name Spacing\r\n\r\n## [0.0.1] - 2020-05-02-Beta\r\n- Initial release\r\n- No readme in place yet\r\n- No testing in place', '@cs/data-type-serializer (^0.0.7-Beta)'),
(842, 360, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/download.php?file=picture3d-1.0-2.ogp', 'VIPM', '2', '2011-06-26 00:41:11', '', NULL),
(843, 361, 'https://bitbucket.org/composedsystems/composed-popup-viewmanager-mva-extension/src', 'GPM', '0.0.1-Beta', '2019-11-07 12:01:18', '## [0.0.1] - 2019-11-07\r\n- Initial release', '@cs/mva-framework (^2.2.3)'),
(844, 361, 'https://bitbucket.org/composedsystems/composed-popup-viewmanager-mva-extension/src', 'GPM', '1.0.0', '2020-03-26 13:39:13', '## [1.0.0] - 2020-03-26\r\n- Major release\r\n- Updated to depend on MVA-Core, MVA-Viewable, and MVA-DialogBox\r\n\r\n## [0.0.1] - 2019-11-07\r\n- Initial release', '@cs/mva-dialogbox (^0.0.2-Beta),@cs/mva-viewable (^0.1.0)'),
(845, 361, 'https://bitbucket.org/composedsystems/composed-popup-viewmanager-mva-extension/src', 'GPM', '1.1.0', '2020-03-31 13:36:36', '## [1.1.0] - 2020-03-31\r\n- Built Against MVA-DialogBox v0.1.0\r\n\r\n## [1.0.0] - 2020-03-26\r\n- Major release\r\n- Updated to depend on MVA-Core, MVA-Viewable, and MVA-DialogBox\r\n\r\n## [0.0.1] - 2019-11-07\r\n- Initial release', '@cs/mva-dialogbox (^0.1.0-Beta),@cs/mva-viewable (^0.1.0)'),
(846, 361, 'https://bitbucket.org/composedsystems/composed-popup-viewmanager-mva-extension/src', 'GPM', '1.1.1', '2020-04-07 02:49:25', '## [1.1.1] - 2020-04-06\r\n- Built Against MVA-DialogBox v0.1.1\r\n- Built Against MVA-Viewable v0.1.1\r\n\r\n## [1.1.0] - 2020-03-31\r\n- Built Against MVA-DialogBox v0.1.0\r\n\r\n## [1.0.0] - 2020-03-26\r\n- Major release\r\n- Updated to depend on MVA-Core, MVA-Viewable, and MVA-DialogBox\r\n\r\n## [0.0.1] - 2019-11-07\r\n- Initial release', '@cs/mva-dialogbox (^0.1.1-Beta),@cs/mva-viewable (^0.1.1)'),
(847, 362, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jdp_science_postgresql/jdp_science_postgresql-0.1.1.9.vip', 'VIPM', '0.1.1.9', '2020-06-25 13:24:58', 'Allow clusters of parameters to include subcluster structure (which is flattened away before binding) as a conveniance.\nAdd user and password fields to connection string of examples', NULL),
(848, 363, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/test_company_lib_product_name/test_company_lib_product_name-1.0.0.4.vip', 'VIPM', '1.0.0.4', '2018-05-09 12:00:45', '', NULL),
(849, 364, 'https://gitlab.com/mgi/gpm-packages/progress-bar', 'GPM', '0.1.0', '2018-09-05 00:37:55', '## 0.1.0\r\n\r\nInitial Release', NULL),
(850, 364, 'https://gitlab.com/mgi/gpm-packages/progress-bar', 'GPM', '0.1.1', '2018-11-21 23:42:11', '## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release', NULL),
(851, 365, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/thelvlab_lib_promview/thelvlab_lib_promview-1.0.0.10.vip', 'VIPM', '1.0.0.10', '2020-06-29 15:53:12', '', 'ni_tool_esf>=2.4.0.25'),
(852, 366, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/qsi_format_toolbar/qsi_format_toolbar-1.1.0.13.vip', 'VIPM', '1.1.0.13', '2020-10-16 12:37:29', 'Fixed Sizing problem.\r\nNow in LabVIEW 2018.\r\nSet to close if only thing running.', NULL),
(853, 367, 'https://gitlab.com/mgi/gpm-packages/query-builder', 'GPM', '0.1.0', '2018-09-05 00:38:02', '## 0.1.0\r\n\r\nInitial Release', '@mgi/database-interface (^0.1.0)'),
(854, 367, 'https://gitlab.com/mgi/gpm-packages/query-builder', 'GPM', '0.1.1', '2018-11-21 23:43:58', '## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release', '@mgi/database-interface (^0.1.0)'),
(855, 367, 'https://gitlab.com/mgi/gpm-packages/query-builder', 'GPM', '0.1.2', '2019-06-24 20:57:13', '## 0.1.2\r\n\r\nRemoved test files from package.\r\n\r\n## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release', '@mgi/database-interface (^0.1.0)'),
(856, 367, 'https://gitlab.com/mgi/gpm-packages/query-builder', 'GPM', '0.2.0', '2019-11-12 19:01:53', '## 0.2.0\r\n\r\n* Refactored Query Builder.lvclass to store the active connection\r\n* Added transactions to Query Builder  class\r\n* Chanaged `Query.vi` and `Select.vi` to malleable VIs\r\n\r\n## 0.1.2\r\n\r\nRemoved test files from package.\r\n\r\n## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release', '@mgi/database-interface (^0.1.0)'),
(857, 368, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/mnprojects_lib_quickdrop_addlabels/mnprojects_lib_quickdrop_addlabels-1.1.1.5.vip', 'VIPM', '1.1.1.5', '2020-05-16 12:49:33', 'Change error handling', NULL),
(858, 368, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/mnprojects_lib_quickdrop_addlabels/mnprojects_lib_quickdrop_addlabels-1.2.0.7.vip', 'VIPM', '1.2.0.7', '2020-09-03 16:11:24', 'Add function to directly add text from combo box to Subdiagram labels.', NULL),
(859, 368, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/mnprojects_lib_quickdrop_addlabels/mnprojects_lib_quickdrop_addlabels-1.3.0.8.vip', 'VIPM', '1.3.0.8', '2020-09-09 14:33:49', 'Add support for showing and hiding labels for all node types.\nAdd support for showing and hiding labels of frontpanel controls.', NULL),
(860, 369, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/mnprojects_lib_quickdrop_alignelements/mnprojects_lib_quickdrop_alignelements-1.0.2.2.vip', 'VIPM', '1.0.2.2', '2020-05-16 12:50:01', 'Change error handling for undo operation\nAdd link to help', NULL),
(861, 369, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/mnprojects_lib_quickdrop_alignelements/mnprojects_lib_quickdrop_alignelements-1.1.0.3.vip', 'VIPM', '1.1.0.3', '2020-09-02 17:14:35', 'Add LVConfig option for disable hiding of IncDec during alignment.\nFix bug that enables all available IncDec after alignment.', NULL),
(862, 370, 'https://gitlab.com/mgi/gpm-packages/restful', 'GPM', '0.1.0', '2018-09-05 00:38:10', '## 0.1.0\r\n\r\nInitial Release', '@mgi/json (^0.1.0)'),
(863, 370, 'https://gitlab.com/mgi/gpm-packages/restful', 'GPM', '0.1.1', '2018-09-06 14:42:40', '## 0.1.1\r\n\r\nRemoved test code from package\r\n\r\n## 0.1.0\r\n\r\nInitial Release', '@mgi/json (^0.1.0)'),
(864, 370, 'https://gitlab.com/mgi/gpm-packages/restful', 'GPM', '0.1.2', '2018-09-07 20:17:29', '## 0.1.2\r\n\r\nRemoved headers from redirected requests\r\n\r\n## 0.1.1\r\n\r\nRemoved test code from package\r\n\r\n## 0.1.0\r\n\r\nInitial Release', '@mgi/json (^0.1.0)'),
(865, 370, 'https://gitlab.com/mgi/gpm-packages/restful', 'GPM', '0.1.3', '2018-11-21 23:46:16', '## 0.1.3\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.2\r\n\r\nRemoved headers from redirected requests\r\n\r\n## 0.1.1\r\n\r\nRemoved test code from package\r\n\r\n## 0.1.0\r\n\r\nInitial Release', '@mgi/json (^0.1.0)'),
(866, 370, 'https://gitlab.com/mgi/gpm-packages/restful', 'GPM', '0.2.1', '2020-01-20 19:58:42', '## 0.2.1\r\n\r\nAdded ability to disable URL escaping when setting URL Segments/Parameters value\r\n\r\n## 0.1.3\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.2\r\n\r\nRemoved headers from redirected requests\r\n\r\n## 0.1.1\r\n\r\nRemoved test code from package\r\n\r\n## 0.1.0\r\n\r\nInitial Release', '@mgi/json (^0.1.0)'),
(867, 371, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/lava_lib_robust_csv/lava_lib_robust_csv-1.1.0.4.vip', 'VIPM', '1.1.0.4', '2020-08-19 14:57:46', 'Built package for VIPM.\nMoved to LAVA palette.\nRemoved LAVA namespacing since VIs are linked to LVLIB.', 'lava_rsc_lava_palette>=1.0.0.1'),
(868, 372, '', 'GPM', '0.1.0', '2019-02-27 23:59:17', '## 0.1.0\r\nInitial release.', '@endigit/exitimer (^1.0.0)'),
(869, 372, '', 'GPM', '0.2.0', '2019-02-28 00:15:58', '## 0.1.0\r\nInitial release.\r\n\r\n## 0.2.0\r\nRemoving bad example and organizing multi-panel folder.', '@endigit/exitimer (^1.0.0)'),
(870, 372, '', 'GPM', '0.3.0', '2019-03-25 22:03:57', '## 0.1.0\r\nInitial release.\r\n\r\n## 0.2.0\r\nRemoving bad example and organizing multi-panel folder.\r\n\r\n## 0.3.0\r\nCorrecting a race condition in the multi-panel implementation that would cause panels to not load correctly.', '@endigit/exitimer (^1.0.0)'),
(871, 372, '', 'GPM', '0.4.0', '2019-03-26 02:49:13', '## 0.1.0\r\nInitial release.\r\n\r\n## 0.2.0\r\nRemoving bad example and organizing multi-panel folder.\r\n\r\n## 0.3.0\r\nCorrecting a race condition in the multi-panel implementation that would cause panels to not load correctly.\r\n\r\n## 0.4.0\r\nCorrecting how clone VI references are compared to make sure VIs are removed from subpanels before loaded into new ones.', '@endigit/exitimer (^1.0.0)'),
(872, 372, '', 'GPM', '0.5.0', '2019-03-29 19:57:49', '## 0.1.0\r\nInitial release.\r\n\r\n## 0.2.0\r\nRemoving bad example and organizing multi-panel folder.\r\n\r\n## 0.3.0\r\nCorrecting a race condition in the multi-panel implementation that would cause panels to not load correctly.\r\n\r\n## 0.4.0\r\nCorrecting how clone VI references are compared to make sure VIs are removed from subpanels before loaded into new ones.\r\n\r\n## 0.5.0\r\nCleaned up reference leaks. Switched to a more perspicuous way of changing panels in the containers. Improved flashing while panels load by deferring panel updates.', '@endigit/exitimer (^1.0.0)'),
(873, 373, '', 'GPM', '0.0.1-Beta', '2019-04-29 17:57:46', '', NULL),
(874, 373, '', 'GPM', '0.0.2-Beta', '2019-07-19 14:57:26', '', NULL),
(875, 373, 'https://bitbucket.org/composedsystems/composed-run-time-assertions/src/master/', 'GPM', '1.0.0', '2019-07-19 16:10:31', '## [1.0.0] - 2019-7-19\r\n- Initial release', NULL),
(876, 373, 'https://bitbucket.org/composedsystems/composed-run-time-assertions/src/master/', 'GPM', '1.0.1', '2019-07-19 16:50:15', '## [1.0.1] - 2019-7-19\r\n- Fixed an issue with where the Run Time Assertion lvlib was being stored on disk.\r\n\r\n## [1.0.0] - 2019-7-19\r\n- Initial release', NULL),
(877, 374, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/hse_lib_s7netcom/hse_lib_s7netcom-0.5.5.29.vip', 'VIPM', '0.5.5.29', '2020-09-18 11:51:37', 'v0.5.5\r\n[FIX] add \"Not for production\" notice\n\r\nv0.5.4\r\n[FIX] separate compiled code from source in source distribution\r\n\r\nv0.5.3\r\n[FIX] recreate original file structure which was broken after v0.5.1 and still broken after v0.5.2\r\n\r\nv0.5.2\r\n[FIX] recreate original file structure which was broken after v0.5.1\r\n\r\nv0.5.1\r\n[FIX] remove missing license and readme files from VI Package\r\n\r\nv0.5.0\r\n[FEATURE] multiple minor fixes and optimisations', NULL),
(878, 375, 'https://gitlab.com/mgi/gpm-packages/semver', 'GPM', '0.1.0', '2018-09-05 00:38:18', '## 0.1.0\r\n\r\nInitial Release', NULL),
(879, 375, 'https://gitlab.com/mgi/gpm-packages/semver', 'GPM', '0.1.1', '2018-11-21 23:42:27', '## 0.1.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n## 0.1.0\r\n\r\nInitial Release', NULL),
(880, 376, 'https://bitbucket.org/composedsystems/composed-session', 'GPM', '0.1.0', '2020-03-27 15:04:46', '##[0.1.0] - 2020-03-27\r\n- Initial Release', '@cs/actor-framework-messages (^0.2.0),@cs/configuration (^1.2.1),@cs/event-logger (^0.7.1)'),
(881, 376, 'https://bitbucket.org/composedsystems/composed-session', 'GPM', '0.1.1', '2020-04-16 20:49:34', '##[0.1.1] - 2020-04-16\r\n- Added session ref type input to \"Open Session Reference.vi\"\r\n- Added log instance read accessor to ISession\r\n- Added Ack Msg to ISession to get confirmation of request\r\n- Made ISession.lvclass:Open Connection.vi reentrant\r\n- Renamed ISession.lvclass:Open Connection.vi -> ISession.lvclass:Initialize.vi to make it less hardware centric\r\n- Added Synchronized Session Reference class to fix a community scoping issue with Wait on Synchronous Notification.\r\n\r\n##[0.1.0] - 2020-03-27\r\n- Initial Release', '@cs/actor-framework-messages (^0.2.0),@cs/configuration (^1.2.1),@cs/event-logger (^0.7.1)'),
(882, 376, 'https://bitbucket.org/composedsystems/composed-session', 'GPM', '0.2.0', '2020-04-21 11:42:34', '##[0.2.0] - 2020-04-21\r\n- Added return notifier to synchronous requests so that data can make its way back to the by-ref layer\r\n\r\n##[0.1.1] - 2020-04-16\r\n- Added session ref type input to \"Open Session Reference.vi\"\r\n- Added log instance read accessor to ISession\r\n- Added Ack Msg to ISession to get confirmation of request\r\n- Made ISession.lvclass:Open Connection.vi reentrant\r\n- Renamed ISession.lvclass:Open Connection.vi -> ISession.lvclass:Initialize.vi to make it less hardware centric\r\n- Added Synchronized Session Reference class to fix a community scoping issue with Wait on Synchronous Notification.\r\n\r\n##[0.1.0] - 2020-03-27\r\n- Initial Release', '@cs/actor-framework-messages (^0.2.0),@cs/configuration (^1.2.1),@cs/event-logger (^0.7.1)'),
(883, 376, 'https://bitbucket.org/composedsystems/composed-session', 'GPM', '0.2.1', '2020-04-21 12:28:14', '##[0.2.1] - 2020-04-21\r\n- Updated all Return Data to be of type notifier\r\n\r\n##[0.2.0] - 2020-04-21\r\n- Added return notifier to synchronous requests so that data can make its way back to the by-ref layer\r\n\r\n##[0.1.1] - 2020-04-16\r\n- Added session ref type input to \"Open Session Reference.vi\"\r\n- Added log instance read accessor to ISession\r\n- Added Ack Msg to ISession to get confirmation of request\r\n- Made ISession.lvclass:Open Connection.vi reentrant\r\n- Renamed ISession.lvclass:Open Connection.vi -> ISession.lvclass:Initialize.vi to make it less hardware centric\r\n- Added Synchronized Session Reference class to fix a community scoping issue with Wait on Synchronous Notification.\r\n\r\n##[0.1.0] - 2020-03-27\r\n- Initial Release', '@cs/actor-framework-messages (^0.2.0),@cs/configuration (^1.2.1),@cs/event-logger (^0.7.1)'),
(884, 377, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/university_of_leeds_lib_sha256/university_of_leeds_lib_sha256-1.1.2.7.vip', 'VIPM', '1.1.2.7', '2020-04-11 15:12:30', 'v1.1.2 Workaround a bug with Preallocated Buffer Read from Binary File.vi', NULL),
(885, 378, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/nicolas_bats_lib_simple_progress_bar/nicolas_bats_lib_simple_progress_bar-1.0.0.3.vip', 'VIPM', '1.0.0.3', '2020-05-16 12:50:32', 'First release\nExamples', NULL),
(886, 379, 'https://gitlab.com/mgi/gpm-packages/standard-windows-error-reporter', 'GPM', '0.1.0', '2018-11-27 19:44:32', '## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/error-history-panel (^0.1.1),@mgi/markdown-error-log (^0.1.1),@mgi/markdown-error-logger-panel (^0.1.2),@mgi/multi-panel-error-reporter (^0.1.1)'),
(887, 379, 'https://gitlab.com/mgi/gpm-packages/standard-windows-error-reporter', 'GPM', '0.1.1', '2018-12-17 21:01:34', '## 0.1.1\r\n\r\nUpdated dependencies.\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/error-history-panel (^0.1.1),@mgi/markdown-error-log (^0.1.2),@mgi/markdown-error-logger-panel (^0.1.3),@mgi/multi-panel-error-reporter (^0.1.2)'),
(888, 379, 'https://gitlab.com/mgi/gpm-packages/standard-windows-error-reporter', 'GPM', '0.1.2', '2020-10-12 21:44:32', '## 0.1.2\r\n\r\nAdd optional parameter for error throttling interval to prevent multiple pop ups from overwhelming user.\r\n\r\n## 0.1.1\r\n\r\nUpdated dependencies.\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/error-history-panel (^0.1.1),@mgi/markdown-error-log (^0.1.2),@mgi/markdown-error-logger-panel (^0.1.3),@mgi/multi-panel-error-reporter (^0.1.3)'),
(889, 379, 'https://gitlab.com/mgi/gpm-packages/standard-windows-error-reporter', 'GPM', '0.1.3', '2020-10-12 23:00:20', '## 0.1.3\r\n\r\nUse newer dependency (panel-actor-error-reporter 0.1.3)\r\n\r\n## 0.1.2\r\n\r\nAdd optional parameter for error throttling interval to prevent multiple pop ups from overwhelming user.\r\n\r\n## 0.1.1\r\n\r\nUpdated dependencies.\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/error-history-panel (^0.1.1),@mgi/markdown-error-log (^0.1.2),@mgi/markdown-error-logger-panel (^0.1.3),@mgi/multi-panel-error-reporter (^0.1.4)'),
(890, 379, 'https://gitlab.com/mgi/gpm-packages/standard-windows-error-reporter', 'GPM', '0.1.4', '2020-10-12 23:49:07', '## 0.1.4\r\n\r\nAdd optional parameter for error throttling interval to Create VI.\r\n\r\n## 0.1.3\r\n\r\nUse newer dependency (panel-actor-error-reporter 0.1.3)\r\n\r\n## 0.1.2\r\n\r\nAdd optional parameter for error throttling interval to prevent multiple pop ups from overwhelming user.\r\n\r\n## 0.1.1\r\n\r\nUpdated dependencies.\r\n\r\n## 0.1.0\r\n\r\nInitial Release.\r\n', '@mgi/error-history-panel (^0.1.1),@mgi/markdown-error-log (^0.1.2),@mgi/markdown-error-logger-panel (^0.1.3),@mgi/multi-panel-error-reporter (^0.1.4)'),
(891, 380, 'https://gitlab.com/mgi/gpm-packages/tab-panels', 'GPM', '2.0.1', '2018-11-27 19:34:05', '## 2.0.1\r\n\r\nUpdated Readme and Relinked VIs\r\n\r\n# 2.0.0\r\n\r\nPort from VIPM', '@mgi/panel-manager (^2.0.0)'),
(892, 381, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/caraya_tdd_project_template/caraya_tdd_project_template-1.0.0.5.vip', 'VIPM', '1.0.0.5', '2016-03-15 18:20:58', 'Initial release for creating TDD focused projects using Caraya.', 'jki_lib_caraya>=0.2.1.19'),
(893, 381, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/caraya_tdd_project_template/caraya_tdd_project_template-1.0.0.7.vip', 'VIPM', '1.0.0.7', '2016-07-15 11:38:00', 'Added Pre-Build support for autodiscovering Caraya tests in project.', 'jki_lib_caraya>=0.4.1.22'),
(894, 382, '', 'GPM', '0.0.1-Beta', '2019-03-28 14:25:32', '', '@cs/linked-list (^0.0.7-Beta)'),
(895, 382, '', 'GPM', '0.0.2-Beta', '2019-03-28 19:10:32', '', '@cs/linked-list (^0.0.7-Beta)'),
(896, 382, '', 'GPM', '0.0.3-Beta', '2019-03-29 14:51:10', '', '@cs/linked-list (^0.0.8-Beta)'),
(897, 382, '', 'GPM', '0.0.4-Beta', '2019-03-29 15:23:29', '', '@cs/linked-list (^0.0.8-Beta)'),
(898, 382, '', 'GPM', '0.0.5-Beta', '2019-03-29 15:45:03', '', '@cs/linked-list (^0.0.8-Beta)'),
(899, 382, '', 'GPM', '0.0.6-Beta', '2019-04-16 03:26:37', '', '@cs/linked-list (^0.0.12-Beta)'),
(900, 382, '', 'GPM', '0.0.7-Beta', '2019-04-16 15:47:50', '', '@cs/linked-list (^0.0.12-Beta)'),
(901, 382, '', 'GPM', '0.0.8-Beta', '2019-04-16 18:26:11', '', '@cs/linked-list (^0.0.13-Beta)'),
(902, 382, '', 'GPM', '0.0.9-Beta', '2019-04-17 13:54:45', '', '@cs/linked-list (^0.0.14-Beta)'),
(903, 382, '', 'GPM', '0.0.10-Beta', '2019-04-22 18:56:36', '', '@cs/linked-list (^0.0.16-Beta)'),
(904, 382, '', 'GPM', '0.0.11-Beta', '2019-04-23 16:47:35', '', '@cs/linked-list (^0.0.17-Beta)'),
(905, 382, '', 'GPM', '0.0.12-Beta', '2019-04-25 13:34:25', '', '@cs/linked-list (^0.0.18-Beta)'),
(906, 382, '', 'GPM', '0.0.13-Beta', '2019-04-26 18:14:49', '', '@cs/linked-list (^0.0.20-Beta)'),
(907, 382, '', 'GPM', '0.0.14-Beta', '2019-05-03 15:10:36', '', '@cs/linked-list (^0.0.23-Beta),@cs/run-time-assertions (^0.0.1-Beta)'),
(908, 382, '', 'GPM', '0.0.15-Beta', '2019-05-13 13:57:22', '', '@cs/linked-list (^0.0.24-Beta),@cs/run-time-assertions (^0.0.1-Beta)'),
(909, 382, '', 'GPM', '0.0.16-Beta', '2019-05-13 15:13:47', '', '@cs/linked-list (^0.0.25-Beta),@cs/run-time-assertions (^0.0.1-Beta)'),
(910, 382, '', 'GPM', '0.0.17-Beta', '2019-05-13 15:30:06', '', '@cs/linked-list (^0.0.26-Beta),@cs/run-time-assertions (^0.0.1-Beta)'),
(911, 382, '', 'GPM', '0.0.18-Beta', '2019-05-13 15:40:42', '', '@cs/linked-list (^0.0.26-Beta),@cs/run-time-assertions (^0.0.1-Beta)'),
(912, 382, '', 'GPM', '0.0.19-Beta', '2019-05-13 16:11:26', '', '@cs/linked-list (^0.0.26-Beta),@cs/run-time-assertions (^0.0.1-Beta)'),
(913, 382, '', 'GPM', '0.0.20-Beta', '2019-05-15 14:34:58', '', '@cs/linked-list (^0.0.26-Beta),@cs/run-time-assertions (^0.0.1-Beta)'),
(914, 382, '', 'GPM', '0.0.21-Beta', '2019-05-17 14:04:40', '', '@cs/linked-list (^0.0.27-Beta),@cs/run-time-assertions (^0.0.1-Beta)'),
(915, 382, '', 'GPM', '0.0.22-Beta', '2019-05-20 14:33:11', '', '@cs/linked-list (^0.0.29-Beta),@cs/run-time-assertions (^0.0.1-Beta)'),
(916, 382, '', 'GPM', '0.0.23-Beta', '2019-05-30 02:49:05', '', '@cs/linked-list (^0.0.35-Beta),@cs/run-time-assertions (^0.0.1-Beta)'),
(917, 382, '', 'GPM', '0.0.24-Beta', '2019-06-06 13:42:22', '', '@cs/linked-list (^0.0.36-Beta),@cs/run-time-assertions (^0.0.1-Beta)'),
(918, 382, '', 'GPM', '0.0.25-Beta', '2019-06-14 19:12:55', '', '@cs/linked-list (^0.0.36-Beta),@cs/run-time-assertions (^0.0.1-Beta)'),
(919, 382, '', 'GPM', '0.0.26-Beta', '2019-06-17 17:17:34', '', '@cs/linked-list (^0.0.36-Beta),@cs/run-time-assertions (^0.0.1-Beta)'),
(920, 382, '', 'GPM', '0.0.27-Beta', '2019-07-09 01:42:43', '', '@cs/linked-list (^0.0.37-Beta),@cs/run-time-assertions (^0.0.1-Beta)'),
(921, 382, '', 'GPM', '0.0.28-Beta', '2019-07-10 13:37:16', '', '@cs/linked-list (^0.0.37-Beta),@cs/run-time-assertions (^0.0.1-Beta)'),
(922, 382, '', 'GPM', '0.0.29-Beta', '2019-07-16 13:05:37', '', '@cs/linked-list (^0.0.37-Beta),@cs/run-time-assertions (^0.0.1-Beta)'),
(923, 382, '', 'GPM', '0.0.30-Beta', '2019-07-16 19:02:40', '', '@cs/linked-list (^0.0.37-Beta),@cs/run-time-assertions (^0.0.1-Beta)'),
(924, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '0.0.32-Beta', '2019-07-19 17:01:55', '## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.0.0),@cs/run-time-assertions (^1.0.1)'),
(925, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '0.0.33-Beta', '2019-07-24 18:48:56', '## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.0.0),@cs/run-time-assertions (^1.0.1)'),
(926, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '0.0.34-Beta', '2019-07-24 18:52:30', '## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.0.1),@cs/run-time-assertions (^1.0.1)'),
(927, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '0.0.35-Beta', '2019-07-25 19:39:47', '## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.0.1),@cs/run-time-assertions (^1.0.1)'),
(928, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '0.0.36-Beta', '2019-07-29 17:36:32', '## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.0.1),@cs/run-time-assertions (^1.0.1)'),
(929, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '0.0.37-Beta', '2019-07-30 16:12:12', '## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.0.2),@cs/run-time-assertions (^1.0.1)'),
(930, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '0.0.38-Beta', '2019-07-30 19:59:10', '## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.0.3),@cs/run-time-assertions (^1.0.1)'),
(931, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '0.0.39-Beta', '2019-08-01 01:25:56', '## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.0.3),@cs/run-time-assertions (^1.0.1)'),
(932, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '0.0.40-Beta', '2019-08-01 14:07:16', '## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.0.4),@cs/run-time-assertions (^1.0.1)'),
(933, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '0.0.41-Beta', '2019-08-01 14:56:33', '## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.0.5),@cs/run-time-assertions (^1.0.1)'),
(934, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '0.0.42-Beta', '2019-08-01 16:54:05', '## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.0.6),@cs/run-time-assertions (^1.0.1)'),
(935, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '0.0.43-Beta', '2019-08-20 03:05:04', '## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.0.6),@cs/run-time-assertions (^1.0.1)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(936, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '0.0.44-Beta', '2019-08-20 14:54:03', '## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.0.8),@cs/run-time-assertions (^1.0.1)'),
(937, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '0.0.45-Beta', '2019-08-20 17:09:09', '## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.0.9),@cs/run-time-assertions (^1.0.1)'),
(938, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '0.0.46-Beta', '2019-08-21 02:32:32', '## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.0.9),@cs/run-time-assertions (^1.0.1)'),
(939, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '0.0.47-Beta', '2019-08-26 19:55:26', '## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.1.2),@cs/run-time-assertions (^1.0.1)'),
(940, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.0.0', '2019-09-05 14:55:30', '## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.1.4),@cs/run-time-assertions (^1.0.1)'),
(941, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.0.1', '2019-09-09 14:40:12', '## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.1.4),@cs/run-time-assertions (^1.0.1)'),
(942, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.1.0', '2019-09-09 16:23:21', '## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.2.1),@cs/run-time-assertions (^1.0.1)'),
(943, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.2.0', '2019-09-13 04:09:14', '## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.2.1),@cs/run-time-assertions (^1.0.1)'),
(944, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.2.1', '2019-09-13 05:11:35', '## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.2.1),@cs/run-time-assertions (^1.0.1)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(945, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.3.0', '2019-09-15 20:02:44', '## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.2.2),@cs/run-time-assertions (^1.0.1)'),
(946, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.3.1', '2019-10-03 17:54:57', '## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.3.0),@cs/run-time-assertions (^1.0.1)'),
(947, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.4.0', '2019-10-04 17:45:24', '## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.4.0),@cs/run-time-assertions (^1.0.1)'),
(948, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.4.1', '2019-10-07 14:04:59', '## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.4.1),@cs/run-time-assertions (^1.0.1)'),
(949, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.4.2', '2019-10-07 16:49:22', '## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.4.4),@cs/run-time-assertions (^1.0.1)'),
(950, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.4.3', '2019-10-09 03:33:26', '## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.4.5),@cs/run-time-assertions (^1.0.1)'),
(951, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.4.4', '2019-10-22 18:45:28', '## [1.4.4] - 2019-10-08\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.5.4),@cs/run-time-assertions (^1.0.1)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(952, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.4.5', '2019-10-23 17:48:40', '## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.5.4),@cs/run-time-assertions (^1.0.1)'),
(953, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.4.6', '2019-10-24 16:34:35', '## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.5.5),@cs/run-time-assertions (^1.0.1)'),
(954, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.4.7', '2019-10-24 17:56:58', '## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.5.6),@cs/run-time-assertions (^1.0.1)'),
(955, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.4.8', '2019-10-28 14:22:07', '## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.5.7),@cs/run-time-assertions (^1.0.1)'),
(956, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.4.9', '2019-10-28 19:10:00', '## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.5.7),@cs/run-time-assertions (^1.0.1)'),
(957, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.4.10', '2019-10-29 02:38:32', '## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.5.8),@cs/run-time-assertions (^1.0.1)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(958, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.4.11', '2019-10-29 04:00:30', '## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.5.8),@cs/run-time-assertions (^1.0.1)'),
(959, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.4.12', '2019-10-30 01:20:59', '## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.5.9),@cs/run-time-assertions (^1.0.1)'),
(960, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.5.0', '2019-10-30 14:19:50', '## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.5.9),@cs/run-time-assertions (^1.0.1)'),
(961, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.5.1', '2019-12-02 17:42:37', '## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.5.10),@cs/run-time-assertions (^1.0.1)'),
(962, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.5.2', '2019-12-04 14:54:17', '## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.5.10),@cs/run-time-assertions (^1.0.1)'),
(963, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.5.3', '2019-12-20 15:37:12', '## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.5.11),@cs/run-time-assertions (^1.0.1)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(964, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.6.0', '2020-01-06 19:40:57', '## [1.6.0] - 2020-01-06\r\n- Created a new flow control type called \"Case Structure\".  The \"Case Structure\" allows for stacked IF ELSE statements, meaning that the developer can run through a chain of assertions on different variable inputs until one passes, which will cause the Conditional Branch associated with that assertion/variable pairing to execute.  There is an always include input on the Insert Case Structure method that requires that an \"Else Conditional Branch\" must be passed in, the \"Else Conditional Branch\" will run if all assertions fail.  The main difference between the Case Structure and the Conditional Structure is that the Conditional only allows for one assertion to be evaluated while the Case Structure allows for an uncapped array of assertions to be evaluated.\r\n\r\n## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.5.11),@cs/run-time-assertions (^1.0.1)'),
(965, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.6.1', '2020-01-07 20:10:55', '## [1.6.1] - 2020-01-07\r\n- Mass compile.\r\n\r\n## [1.6.0] - 2020-01-06\r\n- Created a new flow control type called \"Case Structure\".  The \"Case Structure\" allows for stacked IF ELSE statements, meaning that the developer can run through a chain of assertions on different variable inputs until one passes, which will cause the Conditional Branch associated with that assertion/variable pairing to execute.  There is an always include input on the Insert Case Structure method that requires that an \"Else Conditional Branch\" must be passed in, the \"Else Conditional Branch\" will run if all assertions fail.  The main difference between the Case Structure and the Conditional Structure is that the Conditional only allows for one assertion to be evaluated while the Case Structure allows for an uncapped array of assertions to be evaluated.\r\n\r\n## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.5.11),@cs/run-time-assertions (^1.0.1)'),
(966, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.6.2', '2020-02-19 17:37:46', '## [1.6.2] - 2020-02-19\r\n- Fixed a bug in Case Structures that were causing them to exit when an executed conditional branch contained a subroutine.\r\n- Added an improvement to how subroutines are loaded into calling routines.  If a subroutines interface changes after being inserted into a calling routine, on the next load of that calling routine the interface updates will be loaded with the subroutine.\r\n\r\n## [1.6.1] - 2020-01-07\r\n- Mass compile.\r\n\r\n## [1.6.0] - 2020-01-06\r\n- Created a new flow control type called \"Case Structure\".  The \"Case Structure\" allows for stacked IF ELSE statements, meaning that the developer can run through a chain of assertions on different variable inputs until one passes, which will cause the Conditional Branch associated with that assertion/variable pairing to execute.  There is an always include input on the Insert Case Structure method that requires that an \"Else Conditional Branch\" must be passed in, the \"Else Conditional Branch\" will run if all assertions fail.  The main difference between the Case Structure and the Conditional Structure is that the Conditional only allows for one assertion to be evaluated while the Case Structure allows for an uncapped array of assertions to be evaluated.\r\n\r\n## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.5.11),@cs/run-time-assertions (^1.0.1)'),
(967, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.7.0', '2020-03-18 02:23:35', '## [1.7.0] - 2020-03-17\r\n- Built against Linked List 1.6.0\r\n- Added ability to Save As with new GUIDs for the new copy.\r\n\r\n## [1.6.2] - 2020-02-19\r\n- Fixed a bug in Case Structures that were causing them to exit when an executed conditional branch contained a subroutine.\r\n- Added an improvement to how subroutines are loaded into calling routines.  If a subroutines interface changes after being inserted into a calling routine, on the next load of that calling routine the interface updates will be loaded with the subroutine.\r\n\r\n## [1.6.1] - 2020-01-07\r\n- Mass compile.\r\n\r\n## [1.6.0] - 2020-01-06\r\n- Created a new flow control type called \"Case Structure\".  The \"Case Structure\" allows for stacked IF ELSE statements, meaning that the developer can run through a chain of assertions on different variable inputs until one passes, which will cause the Conditional Branch associated with that assertion/variable pairing to execute.  There is an always include input on the Insert Case Structure method that requires that an \"Else Conditional Branch\" must be passed in, the \"Else Conditional Branch\" will run if all assertions fail.  The main difference between the Case Structure and the Conditional Structure is that the Conditional only allows for one assertion to be evaluated while the Case Structure allows for an uncapped array of assertions to be evaluated.\r\n\r\n## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.6.0),@cs/run-time-assertions (^1.0.1)'),
(968, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.7.1', '2020-03-18 16:25:04', '## [1.7.1] - 2020-03-18\r\n- Quick patch to update Test Exec Version in API\r\n\r\n## [1.7.0] - 2020-03-17\r\n- Built against Linked List 1.6.0\r\n- Added ability to Save As with new GUIDs for the new copy.\r\n\r\n## [1.6.2] - 2020-02-19\r\n- Fixed a bug in Case Structures that were causing them to exit when an executed conditional branch contained a subroutine.\r\n- Added an improvement to how subroutines are loaded into calling routines.  If a subroutines interface changes after being inserted into a calling routine, on the next load of that calling routine the interface updates will be loaded with the subroutine.\r\n\r\n## [1.6.1] - 2020-01-07\r\n- Mass compile.\r\n\r\n## [1.6.0] - 2020-01-06\r\n- Created a new flow control type called \"Case Structure\".  The \"Case Structure\" allows for stacked IF ELSE statements, meaning that the developer can run through a chain of assertions on different variable inputs until one passes, which will cause the Conditional Branch associated with that assertion/variable pairing to execute.  There is an always include input on the Insert Case Structure method that requires that an \"Else Conditional Branch\" must be passed in, the \"Else Conditional Branch\" will run if all assertions fail.  The main difference between the Case Structure and the Conditional Structure is that the Conditional only allows for one assertion to be evaluated while the Case Structure allows for an uncapped array of assertions to be evaluated.\r\n\r\n## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.6.0),@cs/run-time-assertions (^1.0.1)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(969, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.8.0', '2020-03-19 12:21:52', '## [1.8.0] - 2020-03-19\r\n- Added new flow control type, \"Halt\".  Calling a \"Halt\" will cause the active namespace to stop executing.  This means that if a Halt is executed in a running subroutine, the subroutine will stop and the calling routine will continue.  If a Halt is called in a top level routine, the test executive will stop executing.\r\n\r\n## [1.7.1] - 2020-03-18\r\n- Quick patch to update Test Exec Version in API\r\n\r\n## [1.7.0] - 2020-03-17\r\n- Built against Linked List 1.6.0\r\n- Added ability to Save As with new GUIDs for the new copy.\r\n\r\n## [1.6.2] - 2020-02-19\r\n- Fixed a bug in Case Structures that were causing them to exit when an executed conditional branch contained a subroutine.\r\n- Added an improvement to how subroutines are loaded into calling routines.  If a subroutines interface changes after being inserted into a calling routine, on the next load of that calling routine the interface updates will be loaded with the subroutine.\r\n\r\n## [1.6.1] - 2020-01-07\r\n- Mass compile.\r\n\r\n## [1.6.0] - 2020-01-06\r\n- Created a new flow control type called \"Case Structure\".  The \"Case Structure\" allows for stacked IF ELSE statements, meaning that the developer can run through a chain of assertions on different variable inputs until one passes, which will cause the Conditional Branch associated with that assertion/variable pairing to execute.  There is an always include input on the Insert Case Structure method that requires that an \"Else Conditional Branch\" must be passed in, the \"Else Conditional Branch\" will run if all assertions fail.  The main difference between the Case Structure and the Conditional Structure is that the Conditional only allows for one assertion to be evaluated while the Case Structure allows for an uncapped array of assertions to be evaluated.\r\n\r\n## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.6.0),@cs/run-time-assertions (^1.0.1)'),
(970, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.8.1', '2020-04-02 01:52:10', '## [1.8.1] - 2020-04-01\r\n- Fixed a bug in Insert Subroutine.  The \"Read From Text File\" call had \"Convert EOL\" set, which interfered with the binary string formatting for attributes.  When we make the move to Test Exec v2.x.x I will separate the concern of reading from and writing to file from the test executive all together.\r\n\r\n## [1.8.0] - 2020-03-19\r\n- Added new flow control type, \"Halt\".  Calling a \"Halt\" will cause the active namespace to stop executing.  This means that if a Halt is executed in a running subroutine, the subroutine will stop and the calling routine will continue.  If a Halt is called in a top level routine, the test executive will stop executing.\r\n\r\n## [1.7.1] - 2020-03-18\r\n- Quick patch to update Test Exec Version in API\r\n\r\n## [1.7.0] - 2020-03-17\r\n- Built against Linked List 1.6.0\r\n- Added ability to Save As with new GUIDs for the new copy.\r\n\r\n## [1.6.2] - 2020-02-19\r\n- Fixed a bug in Case Structures that were causing them to exit when an executed conditional branch contained a subroutine.\r\n- Added an improvement to how subroutines are loaded into calling routines.  If a subroutines interface changes after being inserted into a calling routine, on the next load of that calling routine the interface updates will be loaded with the subroutine.\r\n\r\n## [1.6.1] - 2020-01-07\r\n- Mass compile.\r\n\r\n## [1.6.0] - 2020-01-06\r\n- Created a new flow control type called \"Case Structure\".  The \"Case Structure\" allows for stacked IF ELSE statements, meaning that the developer can run through a chain of assertions on different variable inputs until one passes, which will cause the Conditional Branch associated with that assertion/variable pairing to execute.  There is an always include input on the Insert Case Structure method that requires that an \"Else Conditional Branch\" must be passed in, the \"Else Conditional Branch\" will run if all assertions fail.  The main difference between the Case Structure and the Conditional Structure is that the Conditional only allows for one assertion to be evaluated while the Case Structure allows for an uncapped array of assertions to be evaluated.\r\n\r\n## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.6.0),@cs/run-time-assertions (^1.0.1)'),
(971, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.8.2', '2020-04-07 01:58:39', '## [1.8.2] - 2020-04-06\r\n- Refactored how the flow control classes set their execution status flags in their Get Next Override.  This was done to fix a bug where calling Halt inside a loop would stop the loop but not Halt the name space (The loop types were treating Halt just like the Stop Loop flow control type).\r\n\r\n## [1.8.1] - 2020-04-01\r\n- Fixed a bug in Insert Subroutine.  The \"Read From Text File\" call had \"Convert EOL\" set, which interfered with the binary string formatting for attributes.  When we make the move to Test Exec v2.x.x I will separate the concern of reading from and writing to file from the test executive all together.\r\n\r\n## [1.8.0] - 2020-03-19\r\n- Added new flow control type, \"Halt\".  Calling a \"Halt\" will cause the active namespace to stop executing.  This means that if a Halt is executed in a running subroutine, the subroutine will stop and the calling routine will continue.  If a Halt is called in a top level routine, the test executive will stop executing.\r\n\r\n## [1.7.1] - 2020-03-18\r\n- Quick patch to update Test Exec Version in API\r\n\r\n## [1.7.0] - 2020-03-17\r\n- Built against Linked List 1.6.0\r\n- Added ability to Save As with new GUIDs for the new copy.\r\n\r\n## [1.6.2] - 2020-02-19\r\n- Fixed a bug in Case Structures that were causing them to exit when an executed conditional branch contained a subroutine.\r\n- Added an improvement to how subroutines are loaded into calling routines.  If a subroutines interface changes after being inserted into a calling routine, on the next load of that calling routine the interface updates will be loaded with the subroutine.\r\n\r\n## [1.6.1] - 2020-01-07\r\n- Mass compile.\r\n\r\n## [1.6.0] - 2020-01-06\r\n- Created a new flow control type called \"Case Structure\".  The \"Case Structure\" allows for stacked IF ELSE statements, meaning that the developer can run through a chain of assertions on different variable inputs until one passes, which will cause the Conditional Branch associated with that assertion/variable pairing to execute.  There is an always include input on the Insert Case Structure method that requires that an \"Else Conditional Branch\" must be passed in, the \"Else Conditional Branch\" will run if all assertions fail.  The main difference between the Case Structure and the Conditional Structure is that the Conditional only allows for one assertion to be evaluated while the Case Structure allows for an uncapped array of assertions to be evaluated.\r\n\r\n## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.6.0),@cs/run-time-assertions (^1.0.1)'),
(972, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.9.0', '2020-05-04 11:09:26', '## [1.9.0] - 2020-05-04\r\n- Built against Linked List v1.7.0, which includes a new dependency on a persistence G Package (it used to be bundled up inside the Linked List package but I pulled it out).  This new Persistence package depends on a new Data Type Serialization package, which enables the consumer to use a custom type system with CAML persistence.\r\n\r\n## [1.8.2] - 2020-04-06\r\n- Refactored how the flow control classes set their execution status flags in their Get Next Override.  This was done to fix a bug where calling Halt inside a loop would stop the loop but not Halt the name space (The loop types were treating Halt just like the Stop Loop flow control type).\r\n\r\n## [1.8.1] - 2020-04-01\r\n- Fixed a bug in Insert Subroutine.  The \"Read From Text File\" call had \"Convert EOL\" set, which interfered with the binary string formatting for attributes.  When we make the move to Test Exec v2.x.x I will separate the concern of reading from and writing to file from the test executive all together.\r\n\r\n## [1.8.0] - 2020-03-19\r\n- Added new flow control type, \"Halt\".  Calling a \"Halt\" will cause the active namespace to stop executing.  This means that if a Halt is executed in a running subroutine, the subroutine will stop and the calling routine will continue.  If a Halt is called in a top level routine, the test executive will stop executing.\r\n\r\n## [1.7.1] - 2020-03-18\r\n- Quick patch to update Test Exec Version in API\r\n\r\n## [1.7.0] - 2020-03-17\r\n- Built against Linked List 1.6.0\r\n- Added ability to Save As with new GUIDs for the new copy.\r\n\r\n## [1.6.2] - 2020-02-19\r\n- Fixed a bug in Case Structures that were causing them to exit when an executed conditional branch contained a subroutine.\r\n- Added an improvement to how subroutines are loaded into calling routines.  If a subroutines interface changes after being inserted into a calling routine, on the next load of that calling routine the interface updates will be loaded with the subroutine.\r\n\r\n## [1.6.1] - 2020-01-07\r\n- Mass compile.\r\n\r\n## [1.6.0] - 2020-01-06\r\n- Created a new flow control type called \"Case Structure\".  The \"Case Structure\" allows for stacked IF ELSE statements, meaning that the developer can run through a chain of assertions on different variable inputs until one passes, which will cause the Conditional Branch associated with that assertion/variable pairing to execute.  There is an always include input on the Insert Case Structure method that requires that an \"Else Conditional Branch\" must be passed in, the \"Else Conditional Branch\" will run if all assertions fail.  The main difference between the Case Structure and the Conditional Structure is that the Conditional only allows for one assertion to be evaluated while the Case Structure allows for an uncapped array of assertions to be evaluated.\r\n\r\n## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.7.0),@cs/run-time-assertions (^1.0.1)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(973, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.9.1', '2020-05-04 13:57:06', '## [1.9.1] - 2020-05-04\r\n- Fixed a linking issue against the old persistence type in the paramterization methods.\r\n\r\n## [1.9.0] - 2020-05-04\r\n- Built against Linked List v1.7.0, which includes a new dependency on a persistence G Package (it used to be bundled up inside the Linked List package but I pulled it out).  This new Persistence package depends on a new Data Type Serialization package, which enables the consumer to use a custom type system with CAML persistence.\r\n\r\n## [1.8.2] - 2020-04-06\r\n- Refactored how the flow control classes set their execution status flags in their Get Next Override.  This was done to fix a bug where calling Halt inside a loop would stop the loop but not Halt the name space (The loop types were treating Halt just like the Stop Loop flow control type).\r\n\r\n## [1.8.1] - 2020-04-01\r\n- Fixed a bug in Insert Subroutine.  The \"Read From Text File\" call had \"Convert EOL\" set, which interfered with the binary string formatting for attributes.  When we make the move to Test Exec v2.x.x I will separate the concern of reading from and writing to file from the test executive all together.\r\n\r\n## [1.8.0] - 2020-03-19\r\n- Added new flow control type, \"Halt\".  Calling a \"Halt\" will cause the active namespace to stop executing.  This means that if a Halt is executed in a running subroutine, the subroutine will stop and the calling routine will continue.  If a Halt is called in a top level routine, the test executive will stop executing.\r\n\r\n## [1.7.1] - 2020-03-18\r\n- Quick patch to update Test Exec Version in API\r\n\r\n## [1.7.0] - 2020-03-17\r\n- Built against Linked List 1.6.0\r\n- Added ability to Save As with new GUIDs for the new copy.\r\n\r\n## [1.6.2] - 2020-02-19\r\n- Fixed a bug in Case Structures that were causing them to exit when an executed conditional branch contained a subroutine.\r\n- Added an improvement to how subroutines are loaded into calling routines.  If a subroutines interface changes after being inserted into a calling routine, on the next load of that calling routine the interface updates will be loaded with the subroutine.\r\n\r\n## [1.6.1] - 2020-01-07\r\n- Mass compile.\r\n\r\n## [1.6.0] - 2020-01-06\r\n- Created a new flow control type called \"Case Structure\".  The \"Case Structure\" allows for stacked IF ELSE statements, meaning that the developer can run through a chain of assertions on different variable inputs until one passes, which will cause the Conditional Branch associated with that assertion/variable pairing to execute.  There is an always include input on the Insert Case Structure method that requires that an \"Else Conditional Branch\" must be passed in, the \"Else Conditional Branch\" will run if all assertions fail.  The main difference between the Case Structure and the Conditional Structure is that the Conditional only allows for one assertion to be evaluated while the Case Structure allows for an uncapped array of assertions to be evaluated.\r\n\r\n## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.7.0),@cs/run-time-assertions (^1.0.1)'),
(974, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.9.2', '2020-05-04 14:49:40', '## [1.9.2] - 2020-05-04\r\n- Fixed a linking issue against the old persistence type in the paramterization methods.\r\n\r\n## [1.9.1] - 2020-05-04\r\n- Fixed a linking issue against the old persistence type in the paramterization methods.\r\n\r\n## [1.9.0] - 2020-05-04\r\n- Built against Linked List v1.7.0, which includes a new dependency on a persistence G Package (it used to be bundled up inside the Linked List package but I pulled it out).  This new Persistence package depends on a new Data Type Serialization package, which enables the consumer to use a custom type system with CAML persistence.\r\n\r\n## [1.8.2] - 2020-04-06\r\n- Refactored how the flow control classes set their execution status flags in their Get Next Override.  This was done to fix a bug where calling Halt inside a loop would stop the loop but not Halt the name space (The loop types were treating Halt just like the Stop Loop flow control type).\r\n\r\n## [1.8.1] - 2020-04-01\r\n- Fixed a bug in Insert Subroutine.  The \"Read From Text File\" call had \"Convert EOL\" set, which interfered with the binary string formatting for attributes.  When we make the move to Test Exec v2.x.x I will separate the concern of reading from and writing to file from the test executive all together.\r\n\r\n## [1.8.0] - 2020-03-19\r\n- Added new flow control type, \"Halt\".  Calling a \"Halt\" will cause the active namespace to stop executing.  This means that if a Halt is executed in a running subroutine, the subroutine will stop and the calling routine will continue.  If a Halt is called in a top level routine, the test executive will stop executing.\r\n\r\n## [1.7.1] - 2020-03-18\r\n- Quick patch to update Test Exec Version in API\r\n\r\n## [1.7.0] - 2020-03-17\r\n- Built against Linked List 1.6.0\r\n- Added ability to Save As with new GUIDs for the new copy.\r\n\r\n## [1.6.2] - 2020-02-19\r\n- Fixed a bug in Case Structures that were causing them to exit when an executed conditional branch contained a subroutine.\r\n- Added an improvement to how subroutines are loaded into calling routines.  If a subroutines interface changes after being inserted into a calling routine, on the next load of that calling routine the interface updates will be loaded with the subroutine.\r\n\r\n## [1.6.1] - 2020-01-07\r\n- Mass compile.\r\n\r\n## [1.6.0] - 2020-01-06\r\n- Created a new flow control type called \"Case Structure\".  The \"Case Structure\" allows for stacked IF ELSE statements, meaning that the developer can run through a chain of assertions on different variable inputs until one passes, which will cause the Conditional Branch associated with that assertion/variable pairing to execute.  There is an always include input on the Insert Case Structure method that requires that an \"Else Conditional Branch\" must be passed in, the \"Else Conditional Branch\" will run if all assertions fail.  The main difference between the Case Structure and the Conditional Structure is that the Conditional only allows for one assertion to be evaluated while the Case Structure allows for an uncapped array of assertions to be evaluated.\r\n\r\n## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.7.0),@cs/run-time-assertions (^1.0.1)'),
(975, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.9.3', '2020-05-05 00:58:08', '## [1.9.3] - 2020-05-04\r\n- Added a new method for relinking top level routines to subroutines.\r\n\r\n## [1.9.2] - 2020-05-04\r\n- Fixed a linking issue against the old persistence type in the paramterization methods.\r\n\r\n## [1.9.1] - 2020-05-04\r\n- Fixed a linking issue against the old persistence type in the paramterization methods.\r\n\r\n## [1.9.0] - 2020-05-04\r\n- Built against Linked List v1.7.0, which includes a new dependency on a persistence G Package (it used to be bundled up inside the Linked List package but I pulled it out).  This new Persistence package depends on a new Data Type Serialization package, which enables the consumer to use a custom type system with CAML persistence.\r\n\r\n## [1.8.2] - 2020-04-06\r\n- Refactored how the flow control classes set their execution status flags in their Get Next Override.  This was done to fix a bug where calling Halt inside a loop would stop the loop but not Halt the name space (The loop types were treating Halt just like the Stop Loop flow control type).\r\n\r\n## [1.8.1] - 2020-04-01\r\n- Fixed a bug in Insert Subroutine.  The \"Read From Text File\" call had \"Convert EOL\" set, which interfered with the binary string formatting for attributes.  When we make the move to Test Exec v2.x.x I will separate the concern of reading from and writing to file from the test executive all together.\r\n\r\n## [1.8.0] - 2020-03-19\r\n- Added new flow control type, \"Halt\".  Calling a \"Halt\" will cause the active namespace to stop executing.  This means that if a Halt is executed in a running subroutine, the subroutine will stop and the calling routine will continue.  If a Halt is called in a top level routine, the test executive will stop executing.\r\n\r\n## [1.7.1] - 2020-03-18\r\n- Quick patch to update Test Exec Version in API\r\n\r\n## [1.7.0] - 2020-03-17\r\n- Built against Linked List 1.6.0\r\n- Added ability to Save As with new GUIDs for the new copy.\r\n\r\n## [1.6.2] - 2020-02-19\r\n- Fixed a bug in Case Structures that were causing them to exit when an executed conditional branch contained a subroutine.\r\n- Added an improvement to how subroutines are loaded into calling routines.  If a subroutines interface changes after being inserted into a calling routine, on the next load of that calling routine the interface updates will be loaded with the subroutine.\r\n\r\n## [1.6.1] - 2020-01-07\r\n- Mass compile.\r\n\r\n## [1.6.0] - 2020-01-06\r\n- Created a new flow control type called \"Case Structure\".  The \"Case Structure\" allows for stacked IF ELSE statements, meaning that the developer can run through a chain of assertions on different variable inputs until one passes, which will cause the Conditional Branch associated with that assertion/variable pairing to execute.  There is an always include input on the Insert Case Structure method that requires that an \"Else Conditional Branch\" must be passed in, the \"Else Conditional Branch\" will run if all assertions fail.  The main difference between the Case Structure and the Conditional Structure is that the Conditional only allows for one assertion to be evaluated while the Case Structure allows for an uncapped array of assertions to be evaluated.\r\n\r\n## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.7.0),@cs/run-time-assertions (^1.0.1)'),
(976, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.9.4', '2020-05-05 22:04:22', '## [1.9.4] - 2020-05-05\r\n- Depends on Linked List v1.7.1.\r\n\r\n## [1.9.3] - 2020-05-04\r\n- Added a new method for relinking top level routines to subroutines.\r\n\r\n## [1.9.2] - 2020-05-04\r\n- Fixed a linking issue against the old persistence type in the paramterization methods.\r\n\r\n## [1.9.1] - 2020-05-04\r\n- Fixed a linking issue against the old persistence type in the paramterization methods.\r\n\r\n## [1.9.0] - 2020-05-04\r\n- Built against Linked List v1.7.0, which includes a new dependency on a persistence G Package (it used to be bundled up inside the Linked List package but I pulled it out).  This new Persistence package depends on a new Data Type Serialization package, which enables the consumer to use a custom type system with CAML persistence.\r\n\r\n## [1.8.2] - 2020-04-06\r\n- Refactored how the flow control classes set their execution status flags in their Get Next Override.  This was done to fix a bug where calling Halt inside a loop would stop the loop but not Halt the name space (The loop types were treating Halt just like the Stop Loop flow control type).\r\n\r\n## [1.8.1] - 2020-04-01\r\n- Fixed a bug in Insert Subroutine.  The \"Read From Text File\" call had \"Convert EOL\" set, which interfered with the binary string formatting for attributes.  When we make the move to Test Exec v2.x.x I will separate the concern of reading from and writing to file from the test executive all together.\r\n\r\n## [1.8.0] - 2020-03-19\r\n- Added new flow control type, \"Halt\".  Calling a \"Halt\" will cause the active namespace to stop executing.  This means that if a Halt is executed in a running subroutine, the subroutine will stop and the calling routine will continue.  If a Halt is called in a top level routine, the test executive will stop executing.\r\n\r\n## [1.7.1] - 2020-03-18\r\n- Quick patch to update Test Exec Version in API\r\n\r\n## [1.7.0] - 2020-03-17\r\n- Built against Linked List 1.6.0\r\n- Added ability to Save As with new GUIDs for the new copy.\r\n\r\n## [1.6.2] - 2020-02-19\r\n- Fixed a bug in Case Structures that were causing them to exit when an executed conditional branch contained a subroutine.\r\n- Added an improvement to how subroutines are loaded into calling routines.  If a subroutines interface changes after being inserted into a calling routine, on the next load of that calling routine the interface updates will be loaded with the subroutine.\r\n\r\n## [1.6.1] - 2020-01-07\r\n- Mass compile.\r\n\r\n## [1.6.0] - 2020-01-06\r\n- Created a new flow control type called \"Case Structure\".  The \"Case Structure\" allows for stacked IF ELSE statements, meaning that the developer can run through a chain of assertions on different variable inputs until one passes, which will cause the Conditional Branch associated with that assertion/variable pairing to execute.  There is an always include input on the Insert Case Structure method that requires that an \"Else Conditional Branch\" must be passed in, the \"Else Conditional Branch\" will run if all assertions fail.  The main difference between the Case Structure and the Conditional Structure is that the Conditional only allows for one assertion to be evaluated while the Case Structure allows for an uncapped array of assertions to be evaluated.\r\n\r\n## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.7.1),@cs/run-time-assertions (^1.0.1)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(977, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.9.5', '2020-05-11 11:24:08', '## [1.9.5] - 2020-05-11\r\n- Depends on Linked List v1.7.4.\r\n\r\n## [1.9.4] - 2020-05-05\r\n- Depends on Linked List v1.7.1.\r\n\r\n## [1.9.3] - 2020-05-04\r\n- Added a new method for relinking top level routines to subroutines.\r\n\r\n## [1.9.2] - 2020-05-04\r\n- Fixed a linking issue against the old persistence type in the paramterization methods.\r\n\r\n## [1.9.1] - 2020-05-04\r\n- Fixed a linking issue against the old persistence type in the paramterization methods.\r\n\r\n## [1.9.0] - 2020-05-04\r\n- Built against Linked List v1.7.0, which includes a new dependency on a persistence G Package (it used to be bundled up inside the Linked List package but I pulled it out).  This new Persistence package depends on a new Data Type Serialization package, which enables the consumer to use a custom type system with CAML persistence.\r\n\r\n## [1.8.2] - 2020-04-06\r\n- Refactored how the flow control classes set their execution status flags in their Get Next Override.  This was done to fix a bug where calling Halt inside a loop would stop the loop but not Halt the name space (The loop types were treating Halt just like the Stop Loop flow control type).\r\n\r\n## [1.8.1] - 2020-04-01\r\n- Fixed a bug in Insert Subroutine.  The \"Read From Text File\" call had \"Convert EOL\" set, which interfered with the binary string formatting for attributes.  When we make the move to Test Exec v2.x.x I will separate the concern of reading from and writing to file from the test executive all together.\r\n\r\n## [1.8.0] - 2020-03-19\r\n- Added new flow control type, \"Halt\".  Calling a \"Halt\" will cause the active namespace to stop executing.  This means that if a Halt is executed in a running subroutine, the subroutine will stop and the calling routine will continue.  If a Halt is called in a top level routine, the test executive will stop executing.\r\n\r\n## [1.7.1] - 2020-03-18\r\n- Quick patch to update Test Exec Version in API\r\n\r\n## [1.7.0] - 2020-03-17\r\n- Built against Linked List 1.6.0\r\n- Added ability to Save As with new GUIDs for the new copy.\r\n\r\n## [1.6.2] - 2020-02-19\r\n- Fixed a bug in Case Structures that were causing them to exit when an executed conditional branch contained a subroutine.\r\n- Added an improvement to how subroutines are loaded into calling routines.  If a subroutines interface changes after being inserted into a calling routine, on the next load of that calling routine the interface updates will be loaded with the subroutine.\r\n\r\n## [1.6.1] - 2020-01-07\r\n- Mass compile.\r\n\r\n## [1.6.0] - 2020-01-06\r\n- Created a new flow control type called \"Case Structure\".  The \"Case Structure\" allows for stacked IF ELSE statements, meaning that the developer can run through a chain of assertions on different variable inputs until one passes, which will cause the Conditional Branch associated with that assertion/variable pairing to execute.  There is an always include input on the Insert Case Structure method that requires that an \"Else Conditional Branch\" must be passed in, the \"Else Conditional Branch\" will run if all assertions fail.  The main difference between the Case Structure and the Conditional Structure is that the Conditional only allows for one assertion to be evaluated while the Case Structure allows for an uncapped array of assertions to be evaluated.\r\n\r\n## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.7.4)'),
(978, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.9.6', '2020-05-12 19:42:56', '## [1.9.6] - 2020-05-12\r\n- Depends on Linked List v1.7.5.\r\n\r\n## [1.9.5] - 2020-05-11\r\n- Depends on Linked List v1.7.4.\r\n\r\n## [1.9.4] - 2020-05-05\r\n- Depends on Linked List v1.7.1.\r\n\r\n## [1.9.3] - 2020-05-04\r\n- Added a new method for relinking top level routines to subroutines.\r\n\r\n## [1.9.2] - 2020-05-04\r\n- Fixed a linking issue against the old persistence type in the paramterization methods.\r\n\r\n## [1.9.1] - 2020-05-04\r\n- Fixed a linking issue against the old persistence type in the paramterization methods.\r\n\r\n## [1.9.0] - 2020-05-04\r\n- Built against Linked List v1.7.0, which includes a new dependency on a persistence G Package (it used to be bundled up inside the Linked List package but I pulled it out).  This new Persistence package depends on a new Data Type Serialization package, which enables the consumer to use a custom type system with CAML persistence.\r\n\r\n## [1.8.2] - 2020-04-06\r\n- Refactored how the flow control classes set their execution status flags in their Get Next Override.  This was done to fix a bug where calling Halt inside a loop would stop the loop but not Halt the name space (The loop types were treating Halt just like the Stop Loop flow control type).\r\n\r\n## [1.8.1] - 2020-04-01\r\n- Fixed a bug in Insert Subroutine.  The \"Read From Text File\" call had \"Convert EOL\" set, which interfered with the binary string formatting for attributes.  When we make the move to Test Exec v2.x.x I will separate the concern of reading from and writing to file from the test executive all together.\r\n\r\n## [1.8.0] - 2020-03-19\r\n- Added new flow control type, \"Halt\".  Calling a \"Halt\" will cause the active namespace to stop executing.  This means that if a Halt is executed in a running subroutine, the subroutine will stop and the calling routine will continue.  If a Halt is called in a top level routine, the test executive will stop executing.\r\n\r\n## [1.7.1] - 2020-03-18\r\n- Quick patch to update Test Exec Version in API\r\n\r\n## [1.7.0] - 2020-03-17\r\n- Built against Linked List 1.6.0\r\n- Added ability to Save As with new GUIDs for the new copy.\r\n\r\n## [1.6.2] - 2020-02-19\r\n- Fixed a bug in Case Structures that were causing them to exit when an executed conditional branch contained a subroutine.\r\n- Added an improvement to how subroutines are loaded into calling routines.  If a subroutines interface changes after being inserted into a calling routine, on the next load of that calling routine the interface updates will be loaded with the subroutine.\r\n\r\n## [1.6.1] - 2020-01-07\r\n- Mass compile.\r\n\r\n## [1.6.0] - 2020-01-06\r\n- Created a new flow control type called \"Case Structure\".  The \"Case Structure\" allows for stacked IF ELSE statements, meaning that the developer can run through a chain of assertions on different variable inputs until one passes, which will cause the Conditional Branch associated with that assertion/variable pairing to execute.  There is an always include input on the Insert Case Structure method that requires that an \"Else Conditional Branch\" must be passed in, the \"Else Conditional Branch\" will run if all assertions fail.  The main difference between the Case Structure and the Conditional Structure is that the Conditional only allows for one assertion to be evaluated while the Case Structure allows for an uncapped array of assertions to be evaluated.\r\n\r\n## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.7.5)'),
(979, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.10.0', '2020-06-24 02:48:35', '## [1.10.0] - 2020-06-23\r\n- Adding Parallel flow control type.\r\n\r\n## [1.9.6] - 2020-05-12\r\n- Depends on Linked List v1.7.5.\r\n\r\n## [1.9.5] - 2020-05-11\r\n- Depends on Linked List v1.7.4.\r\n\r\n## [1.9.4] - 2020-05-05\r\n- Depends on Linked List v1.7.1.\r\n\r\n## [1.9.3] - 2020-05-04\r\n- Added a new method for relinking top level routines to subroutines.\r\n\r\n## [1.9.2] - 2020-05-04\r\n- Fixed a linking issue against the old persistence type in the paramterization methods.\r\n\r\n## [1.9.1] - 2020-05-04\r\n- Fixed a linking issue against the old persistence type in the paramterization methods.\r\n\r\n## [1.9.0] - 2020-05-04\r\n- Built against Linked List v1.7.0, which includes a new dependency on a persistence G Package (it used to be bundled up inside the Linked List package but I pulled it out).  This new Persistence package depends on a new Data Type Serialization package, which enables the consumer to use a custom type system with CAML persistence.\r\n\r\n## [1.8.2] - 2020-04-06\r\n- Refactored how the flow control classes set their execution status flags in their Get Next Override.  This was done to fix a bug where calling Halt inside a loop would stop the loop but not Halt the name space (The loop types were treating Halt just like the Stop Loop flow control type).\r\n\r\n## [1.8.1] - 2020-04-01\r\n- Fixed a bug in Insert Subroutine.  The \"Read From Text File\" call had \"Convert EOL\" set, which interfered with the binary string formatting for attributes.  When we make the move to Test Exec v2.x.x I will separate the concern of reading from and writing to file from the test executive all together.\r\n\r\n## [1.8.0] - 2020-03-19\r\n- Added new flow control type, \"Halt\".  Calling a \"Halt\" will cause the active namespace to stop executing.  This means that if a Halt is executed in a running subroutine, the subroutine will stop and the calling routine will continue.  If a Halt is called in a top level routine, the test executive will stop executing.\r\n\r\n## [1.7.1] - 2020-03-18\r\n- Quick patch to update Test Exec Version in API\r\n\r\n## [1.7.0] - 2020-03-17\r\n- Built against Linked List 1.6.0\r\n- Added ability to Save As with new GUIDs for the new copy.\r\n\r\n## [1.6.2] - 2020-02-19\r\n- Fixed a bug in Case Structures that were causing them to exit when an executed conditional branch contained a subroutine.\r\n- Added an improvement to how subroutines are loaded into calling routines.  If a subroutines interface changes after being inserted into a calling routine, on the next load of that calling routine the interface updates will be loaded with the subroutine.\r\n\r\n## [1.6.1] - 2020-01-07\r\n- Mass compile.\r\n\r\n## [1.6.0] - 2020-01-06\r\n- Created a new flow control type called \"Case Structure\".  The \"Case Structure\" allows for stacked IF ELSE statements, meaning that the developer can run through a chain of assertions on different variable inputs until one passes, which will cause the Conditional Branch associated with that assertion/variable pairing to execute.  There is an always include input on the Insert Case Structure method that requires that an \"Else Conditional Branch\" must be passed in, the \"Else Conditional Branch\" will run if all assertions fail.  The main difference between the Case Structure and the Conditional Structure is that the Conditional only allows for one assertion to be evaluated while the Case Structure allows for an uncapped array of assertions to be evaluated.\r\n\r\n## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.7.5)'),
(980, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.10.1', '2020-06-24 03:33:15', '## [1.10.1] - 2020-06-23\r\n- GPM is killing me\r\n\r\n## [1.10.0] - 2020-06-23\r\n- Adding Parallel flow control type.\r\n\r\n## [1.9.6] - 2020-05-12\r\n- Depends on Linked List v1.7.5.\r\n\r\n## [1.9.5] - 2020-05-11\r\n- Depends on Linked List v1.7.4.\r\n\r\n## [1.9.4] - 2020-05-05\r\n- Depends on Linked List v1.7.1.\r\n\r\n## [1.9.3] - 2020-05-04\r\n- Added a new method for relinking top level routines to subroutines.\r\n\r\n## [1.9.2] - 2020-05-04\r\n- Fixed a linking issue against the old persistence type in the paramterization methods.\r\n\r\n## [1.9.1] - 2020-05-04\r\n- Fixed a linking issue against the old persistence type in the paramterization methods.\r\n\r\n## [1.9.0] - 2020-05-04\r\n- Built against Linked List v1.7.0, which includes a new dependency on a persistence G Package (it used to be bundled up inside the Linked List package but I pulled it out).  This new Persistence package depends on a new Data Type Serialization package, which enables the consumer to use a custom type system with CAML persistence.\r\n\r\n## [1.8.2] - 2020-04-06\r\n- Refactored how the flow control classes set their execution status flags in their Get Next Override.  This was done to fix a bug where calling Halt inside a loop would stop the loop but not Halt the name space (The loop types were treating Halt just like the Stop Loop flow control type).\r\n\r\n## [1.8.1] - 2020-04-01\r\n- Fixed a bug in Insert Subroutine.  The \"Read From Text File\" call had \"Convert EOL\" set, which interfered with the binary string formatting for attributes.  When we make the move to Test Exec v2.x.x I will separate the concern of reading from and writing to file from the test executive all together.\r\n\r\n## [1.8.0] - 2020-03-19\r\n- Added new flow control type, \"Halt\".  Calling a \"Halt\" will cause the active namespace to stop executing.  This means that if a Halt is executed in a running subroutine, the subroutine will stop and the calling routine will continue.  If a Halt is called in a top level routine, the test executive will stop executing.\r\n\r\n## [1.7.1] - 2020-03-18\r\n- Quick patch to update Test Exec Version in API\r\n\r\n## [1.7.0] - 2020-03-17\r\n- Built against Linked List 1.6.0\r\n- Added ability to Save As with new GUIDs for the new copy.\r\n\r\n## [1.6.2] - 2020-02-19\r\n- Fixed a bug in Case Structures that were causing them to exit when an executed conditional branch contained a subroutine.\r\n- Added an improvement to how subroutines are loaded into calling routines.  If a subroutines interface changes after being inserted into a calling routine, on the next load of that calling routine the interface updates will be loaded with the subroutine.\r\n\r\n## [1.6.1] - 2020-01-07\r\n- Mass compile.\r\n\r\n## [1.6.0] - 2020-01-06\r\n- Created a new flow control type called \"Case Structure\".  The \"Case Structure\" allows for stacked IF ELSE statements, meaning that the developer can run through a chain of assertions on different variable inputs until one passes, which will cause the Conditional Branch associated with that assertion/variable pairing to execute.  There is an always include input on the Insert Case Structure method that requires that an \"Else Conditional Branch\" must be passed in, the \"Else Conditional Branch\" will run if all assertions fail.  The main difference between the Case Structure and the Conditional Structure is that the Conditional only allows for one assertion to be evaluated while the Case Structure allows for an uncapped array of assertions to be evaluated.\r\n\r\n## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.7.5)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(981, 382, 'https://bitbucket.org/composedsystems/composed-test-executive/src/master/', 'GPM', '1.10.2', '2020-08-10 14:56:11', '## [1.10.2] - 2020-08-10\r\n- Moving away form GPM\r\n\r\n## [1.10.1] - 2020-06-23\r\n- GPM is killing me\r\n\r\n## [1.10.0] - 2020-06-23\r\n- Adding Parallel flow control type.\r\n\r\n## [1.9.6] - 2020-05-12\r\n- Depends on Linked List v1.7.5.\r\n\r\n## [1.9.5] - 2020-05-11\r\n- Depends on Linked List v1.7.4.\r\n\r\n## [1.9.4] - 2020-05-05\r\n- Depends on Linked List v1.7.1.\r\n\r\n## [1.9.3] - 2020-05-04\r\n- Added a new method for relinking top level routines to subroutines.\r\n\r\n## [1.9.2] - 2020-05-04\r\n- Fixed a linking issue against the old persistence type in the paramterization methods.\r\n\r\n## [1.9.1] - 2020-05-04\r\n- Fixed a linking issue against the old persistence type in the paramterization methods.\r\n\r\n## [1.9.0] - 2020-05-04\r\n- Built against Linked List v1.7.0, which includes a new dependency on a persistence G Package (it used to be bundled up inside the Linked List package but I pulled it out).  This new Persistence package depends on a new Data Type Serialization package, which enables the consumer to use a custom type system with CAML persistence.\r\n\r\n## [1.8.2] - 2020-04-06\r\n- Refactored how the flow control classes set their execution status flags in their Get Next Override.  This was done to fix a bug where calling Halt inside a loop would stop the loop but not Halt the name space (The loop types were treating Halt just like the Stop Loop flow control type).\r\n\r\n## [1.8.1] - 2020-04-01\r\n- Fixed a bug in Insert Subroutine.  The \"Read From Text File\" call had \"Convert EOL\" set, which interfered with the binary string formatting for attributes.  When we make the move to Test Exec v2.x.x I will separate the concern of reading from and writing to file from the test executive all together.\r\n\r\n## [1.8.0] - 2020-03-19\r\n- Added new flow control type, \"Halt\".  Calling a \"Halt\" will cause the active namespace to stop executing.  This means that if a Halt is executed in a running subroutine, the subroutine will stop and the calling routine will continue.  If a Halt is called in a top level routine, the test executive will stop executing.\r\n\r\n## [1.7.1] - 2020-03-18\r\n- Quick patch to update Test Exec Version in API\r\n\r\n## [1.7.0] - 2020-03-17\r\n- Built against Linked List 1.6.0\r\n- Added ability to Save As with new GUIDs for the new copy.\r\n\r\n## [1.6.2] - 2020-02-19\r\n- Fixed a bug in Case Structures that were causing them to exit when an executed conditional branch contained a subroutine.\r\n- Added an improvement to how subroutines are loaded into calling routines.  If a subroutines interface changes after being inserted into a calling routine, on the next load of that calling routine the interface updates will be loaded with the subroutine.\r\n\r\n## [1.6.1] - 2020-01-07\r\n- Mass compile.\r\n\r\n## [1.6.0] - 2020-01-06\r\n- Created a new flow control type called \"Case Structure\".  The \"Case Structure\" allows for stacked IF ELSE statements, meaning that the developer can run through a chain of assertions on different variable inputs until one passes, which will cause the Conditional Branch associated with that assertion/variable pairing to execute.  There is an always include input on the Insert Case Structure method that requires that an \"Else Conditional Branch\" must be passed in, the \"Else Conditional Branch\" will run if all assertions fail.  The main difference between the Case Structure and the Conditional Structure is that the Conditional only allows for one assertion to be evaluated while the Case Structure allows for an uncapped array of assertions to be evaluated.\r\n\r\n## [1.5.3] - 2019-12-04\r\n- Added a new method for retrieving active element index without needing to draw the tree\r\n\r\n## [1.5.2] - 2019-12-04\r\n- Updated the Draw Tree utility method of the Test Exec Ref class to pass out the active element index, this works regardless of if subroutine is executing or not\r\n\r\n## [1.5.1] - 2019-12-02\r\n- Added ability to remove multiple attributes at once\r\n\r\n## [1.5.0] - 2019-10-30\r\n- Refactored how conditionals treat X and Y variables.  They now need to either be passed in by value, or if passed in as a pointer they need to flagged as pointers\r\n\r\n## [1.4.12] - 2019-10-29\r\n- Built against Linked List v.1.5.9\r\n\r\n## [1.4.11] - 2019-10-29\r\n- Refactored how Test Executive Version is handled, it is now effectively hard coded and will need to be manually revisioned with each package build.\r\n\r\n## [1.4.10] - 2019-10-28\r\n- Added public API methods for reading and writing attribute meta data.\r\n\r\n## [1.4.9] - 2019-10-28\r\n- Updated Test Exec File Version to be a single integer (i.e. v1, v2...).\r\n\r\n## [1.4.8] - 2019-10-24\r\n- Added public API methods for reading and writing meta data.\r\n\r\n## [1.4.7] - 2019-10-24\r\n- Re-link and mass compile.\r\n\r\n## [1.4.6] - 2019-10-23\r\n- Built against linked list v1.5.5\r\n\r\n## [1.4.5] - 2019-10-23\r\n- Added more information to error message being generated by a failure to parse an attribute in the Unflatten method of the Executioner class\r\n\r\n## [1.4.4] - 2019-10-22\r\n- Built against Linked List v1.5.4\r\n\r\n## [1.4.3] - 2019-10-08\r\n- Built against Linked List v1.4.5\r\n\r\n## [1.4.2] - 2019-10-07\r\n- Built against Linked List v1.4.4\r\n\r\n## [1.4.1] - 2019-10-07\r\n- Built against Linked List v1.4.1\r\n\r\n## [1.4.0] - 2019-10-04\r\n- Built against Linked List v1.4.0\r\n- First release of parameterization, includes two new methods: Load Parameterized Test Executive and Create Parameterized Test Executive.\r\n\r\n## [1.3.1] - 2019-10-02\r\n- Building up the ability to parameterize test executives (work in progress)\r\n- Fixed a bug that was preventing parameterized attributes at the namespace level from propagating down into subroutines\r\n\r\n## [1.3.0] - 2019-09-13\r\n- Built against Linked List v1.2.2\r\n- Added public method for retrieving all attributes\r\n- Refactored subroutine attribute handling to allow passing values out of subroutines\r\n\r\n## [1.2.1] - 2019-09-13\r\n- No changes introduced in this build\r\n\r\n## [1.2.0] - 2019-09-13\r\n- Refactored Get Next to pass out an \"Active Test Executive\".  The primary use case for this is subroutines as it allows teststeps to gain access to subroutine data space\r\n- Fixed a bug that was preventing Subroutine (flow control element) from properly gaining the public attributes of the Subroutine (from disk) that it loads and executes\r\n\r\n## [1.1.0] - 2019-09-09\r\n- Built against Linked List v1.2.1\r\n- Refactored Insert Test to pass out a scaler \"Replaced?\" flag instead of a 1D array\r\n\r\n## [1.0.1] - 2019-09-09\r\n- Updated \"Insert\" methods to include a \"replaced?\" flag as an output to notify user that the insert replaced an existing item\r\n\r\n## [1.0.0] - 2019-09-05\r\n- Built against Linked List v1.1.4\r\n- This is a major revision of the Test Executive, it is not backwards compatible with the 0.x.x-Beta versions\r\n- Updated connector panes on public by reference methods to include required inputs where appropriate\r\n- Added file version tracking for saved tests\r\n- Added checksum verification for subroutines\r\n- Added test executive version tracking for saved tests\r\n\r\n## [0.0.47] - 2019-8-26\r\n- Built against Linked List v1.1.2\r\n- Refactored how subroutines are executed.  Subroutines are now given their own execution thread\r\n\r\n## [0.0.46] - 2019-8-20\r\n- Fixed an issue with the Stop Loop executioner not propagating out of a conditional up to a containing loop\r\n- Added a sandbox VI demonstrating stopping a loop with attributes and a conditional structure\r\n\r\n## [0.0.45] - 2019-8-20\r\n- Built against Linked List v1.0.9\r\n\r\n## [0.0.44] - 2019-8-20\r\n- Built against Linked List v1.0.8\r\n\r\n## [0.0.43] - 2019-8-19\r\n- Built against Linked List v1.0.7, which addresses Linked List [issue #4](https://bitbucket.org/composedsystems/composed-linked-lists/issues/4/formatting-of-spaces-when-saving-to-xml), which fixes Test Executive [issue #21](https://bitbucket.org/composedsystems/composed-test-executive/issues/21/executioner-name-is-different-as-a-result). \r\n- This build addresses Test Executive [issue #19](https://bitbucket.org/composedsystems/composed-test-executive/issues/19/create-test-from-object-can-take-in-any)\r\n- This build addresses Test Executive [issue #23](https://bitbucket.org/composedsystems/composed-test-executive/issues/23/test-testexecution_for)\r\n- This build addresses Test Executive [issue #20](https://bitbucket.org/composedsystems/composed-test-executive/issues/20/estapi_replace-executionervi-failure)\r\n\r\n## [0.0.42] - 2019-8-01\r\n- Built against Linked List v1.0.6, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.41] - 2019-8-01\r\n- Built against Linked List v1.0.5, which addresses Linked List [issue #3](https://bitbucket.org/composedsystems/composed-linked-lists/issues/3/build-tree-data-type-is-not-working-with) - Build Tree Data Type is not working with Private Attributes.  This fixes Test Executive [issue #9](https://bitbucket.org/composedsystems/composed-test-executive/issues/9/adding-a-subroutine-creates-an-empty).\r\n\r\n## [0.0.40] - 2019-8-01\r\n- Built against Linked List v1.0.4, which addresses Linked List [issue #2](https://bitbucket.org/composedsystems/composed-linked-lists/issues/2/prevent-the-build-tree-data-type-method) - Prevent the Build Tree Data Type method from showing the contents of a subroutine.  This relates to [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n\r\n## [0.0.39] - 2019-7-31\r\n- Fixes [issue #6: Inserting a subroutine pass out the wrong GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/6/inserting-a-subroutine-passes-out-the).\r\n- Fixes [issue #7: Update Build Tree method to not display entire subroutine](https://bitbucket.org/composedsystems/composed-test-executive/issues/7/update-build-tree-method-to-not-display).\r\n- Fixes [issue #8: Subroutine path is a public attribute](https://bitbucket.org/composedsystems/composed-test-executive/issues/8/subroutine-path-is-a-public-attribute). \r\n\r\n## [0.0.38] - 2019-7-30\r\n- Built against Linked List v1.0.3, which fixes [issue #5: Copying tests does not create a new GUID](https://bitbucket.org/composedsystems/composed-test-executive/issues/5/copying-tests-does-not-create-a-new-guid).  See [Linked List issue #1](https://bitbucket.org/composedsystems/composed-linked-lists/issues/1/copied-linked-list-not-storing-new-guid) for more information.\r\n\r\n## [0.0.37] - 2019-7-30\r\n- Built against Linked List v1.0.2, which fixes issue #4: Copy adding blank attribute to a test\r\n\r\n## [0.0.36] - 2019-7-29\r\n- Fixed a bug reported in issue tracker as issue \"#3: Test Executive is not saving private attributes to file\"\r\n\r\n## [0.0.35] - 2019-7-25\r\n- Fixed a bug in the Insert Conditional method that was causing Conditional Branches not to be moved inside the Conditional Structure.  This bug only impacted the ability to visualize the Conditional Structure as a tree control, it did not impact execuation of the Test Executive.\r\n\r\n## [0.0.34] - 2019-7-24\r\n- Building against Linked List v1.0.1 (I forgot to pull the latest Linked List package before publishing Test Executive v0.0.33).\r\n\r\n## [0.0.33] - 2019-7-24\r\n- Building against Linked List v1.0.1\r\n\r\n## [0.0.32] - 2019-7-19\r\n- Building against latest Linked List and Run Time Assertion packages.', '@cs/linked-list (^1.7.5)'),
(982, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.1-Beta', '2019-08-10 19:57:41', '##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.0.10),@cs/mva-framework (^2.1.3),@cs/test-executive (^0.0.42-Beta)'),
(983, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.2-Beta', '2019-08-20 13:32:33', '##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.0.10),@cs/mva-framework (^2.1.3),@cs/test-executive (^0.0.43-Beta)'),
(984, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.3-Beta', '2019-08-20 14:01:09', '##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.0.10),@cs/mva-framework (^2.1.3),@cs/test-executive (^0.0.43-Beta)'),
(985, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.4-Beta', '2019-08-20 15:17:15', '##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.0.10),@cs/mva-framework (^2.1.3),@cs/test-executive (^0.0.44-Beta)'),
(986, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.5-Beta', '2019-08-20 17:28:48', '##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.0.10),@cs/mva-framework (^2.1.3),@cs/test-executive (^0.0.45-Beta)'),
(987, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.6-Beta', '2019-08-21 02:59:56', '##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.0.10),@cs/mva-framework (^2.1.3),@cs/test-executive (^0.0.46-Beta)'),
(988, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.7-Beta', '2019-09-05 15:53:52', '##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.0.10),@cs/mva-framework (^2.1.3),@cs/test-executive (^1.0.0)'),
(989, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.8-Beta', '2019-09-10 18:55:42', '##[0.0.7] - 2019-09-10\r\n- Built against MVA Framework v2.2.2\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.0.10),@cs/mva-framework (^2.2.2),@cs/test-executive (^1.1.0)'),
(990, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.9-Beta', '2019-09-13 05:25:21', '##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.0.10),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.2.1)'),
(991, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.10-Beta', '2019-09-15 20:47:26', '##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.0.10),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.3.0)'),
(992, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.11-Beta', '2019-09-16 15:51:28', '##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.0),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.3.0)'),
(993, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.12-Beta', '2019-09-18 18:42:27', '##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.0),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.3.0)'),
(994, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.13-Beta', '2019-09-30 18:25:18', '##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.0),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.3.0)'),
(995, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.14-Beta', '2019-10-03 18:20:06', '##[0.0.13] - 2019-10-02\r\n- Built against Test Executive v1.3.1\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.0),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.3.1)'),
(996, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.15-Beta', '2019-10-07 17:15:04', '##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.0),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.4.2)'),
(997, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.16-Beta', '2019-10-07 18:50:55', '##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.0),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.4.2)'),
(998, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.17-Beta', '2019-10-09 02:19:10', '##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.2),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.4.2)'),
(999, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.18-Beta', '2019-10-09 04:16:55', '##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.2),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.4.3)'),
(1000, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.19-Beta', '2019-10-11 16:41:33', '##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.2),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.4.3)'),
(1001, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.20-Beta', '2019-10-16 01:44:10', '##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.2),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.4.3)'),
(1002, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.21-Beta', '2019-10-23 18:16:13', '##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.2),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.4.5)'),
(1003, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.22-Beta', '2019-10-24 03:10:23', '##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.2),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.4.5)'),
(1004, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.23-Beta', '2019-10-24 18:45:42', '##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.2),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.4.7)'),
(1005, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.24-Beta', '2019-10-29 04:31:49', '##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.2),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.4.11)'),
(1006, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.25-Beta', '2019-10-30 02:52:49', '##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.4),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.4.12)'),
(1007, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.26-Beta', '2019-10-30 14:42:20', '##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.4),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.5.0)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(1008, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.27-Beta', '2019-11-01 01:59:56', '##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.4),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.5.0)'),
(1009, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.28-Beta', '2020-01-15 18:43:29', '##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.4),@cs/mva-framework (^2.2.3),@cs/test-executive (^1.6.1)'),
(1010, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.29-Beta', '2020-03-18 03:02:21', '##[0.0.29] - 2020-03-17\r\n- Built against Test Executive v1.7.0\r\n- Save As will now create new GUIDs for the new file\r\n\r\n##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.4),@cs/mva-framework (^2.2.3),@cs/popup-viewmanager (^0.0.1-Beta),@cs/test-executive (^1.7.0)'),
(1011, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.30-Beta', '2020-03-18 17:16:09', '##[0.0.30] - 2020-03-18\r\n- Built against Test Executive v1.7.1\r\n\r\n##[0.0.29] - 2020-03-17\r\n- Built against Test Executive v1.7.0\r\n- Save As will now create new GUIDs for the new file\r\n\r\n##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.4),@cs/mva-framework (^2.2.3),@cs/popup-viewmanager (^0.0.1-Beta),@cs/test-executive (^1.7.1)'),
(1012, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '0.0.31-Beta', '2020-03-19 14:02:34', '##[0.0.31] - 2020-03-19\r\n- Built against Test Executive v1.8.0\r\n- Added ability to Insert a Halt flow control step into a test executive\r\n\r\n##[0.0.30] - 2020-03-18\r\n- Built against Test Executive v1.7.1\r\n\r\n##[0.0.29] - 2020-03-17\r\n- Built against Test Executive v1.7.0\r\n- Save As will now create new GUIDs for the new file\r\n\r\n##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^1.1.4),@cs/mva-framework (^2.2.3),@cs/popup-viewmanager (^0.0.1-Beta),@cs/test-executive (^1.8.0)'),
(1013, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '1.0.0', '2020-03-26 20:37:24', '##[1.0.0] - 2020-03-26\r\n- Built against MVA-Core dependencies\r\n\r\n##[0.0.31] - 2020-03-19\r\n- Built against Test Executive v1.8.0\r\n- Added ability to Insert a Halt flow control step into a test executive\r\n\r\n##[0.0.30] - 2020-03-18\r\n- Built against Test Executive v1.7.1\r\n\r\n##[0.0.29] - 2020-03-17\r\n- Built against Test Executive v1.7.0\r\n- Save As will now create new GUIDs for the new file\r\n\r\n##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^2.0.0),@cs/mva-viewable (^0.1.0),@cs/popup-viewmanager (^1.0.0),@cs/test-executive (^1.8.0)'),
(1014, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '1.1.0', '2020-03-31 13:58:50', '##[1.0.0] - 2020-03-31\r\n- Built against Popup ViewManager v1.1.0\r\n\r\n##[1.0.0] - 2020-03-26\r\n- Built against MVA-Core dependencies\r\n\r\n##[0.0.31] - 2020-03-19\r\n- Built against Test Executive v1.8.0\r\n- Added ability to Insert a Halt flow control step into a test executive\r\n\r\n##[0.0.30] - 2020-03-18\r\n- Built against Test Executive v1.7.1\r\n\r\n##[0.0.29] - 2020-03-17\r\n- Built against Test Executive v1.7.0\r\n- Save As will now create new GUIDs for the new file\r\n\r\n##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^2.0.0),@cs/mva-viewable (^0.1.0),@cs/popup-viewmanager (^1.1.0),@cs/test-executive (^1.8.0)'),
(1015, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '1.1.1', '2020-04-02 02:38:29', '##[1.1.1] - 2020-04-01\r\n- Built against Test Executive v1.8.1\r\n\r\n##[1.1.0] - 2020-03-31\r\n- Built against Popup ViewManager v1.1.0\r\n\r\n##[1.0.0] - 2020-03-26\r\n- Built against MVA-Core dependencies\r\n\r\n##[0.0.31] - 2020-03-19\r\n- Built against Test Executive v1.8.0\r\n- Added ability to Insert a Halt flow control step into a test executive\r\n\r\n##[0.0.30] - 2020-03-18\r\n- Built against Test Executive v1.7.1\r\n\r\n##[0.0.29] - 2020-03-17\r\n- Built against Test Executive v1.7.0\r\n- Save As will now create new GUIDs for the new file\r\n\r\n##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^2.0.0),@cs/mva-viewable (^0.1.0),@cs/popup-viewmanager (^1.1.0),@cs/test-executive (^1.8.1)'),
(1016, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '1.1.2', '2020-04-07 04:42:29', '##[1.1.2] - 2020-04-06\r\n- Built against Test Executive v1.8.2\r\n- Built against MVA Viewable v0.1.1\r\n- Built against MVA Popup ViewManager v1.1.1\r\n- Built against File Explorer Extension v2.0.1\r\n\r\n##[1.1.1] - 2020-04-01\r\n- Built against Test Executive v1.8.1\r\n\r\n##[1.1.0] - 2020-03-31\r\n- Built against Popup ViewManager v1.1.0\r\n\r\n##[1.0.0] - 2020-03-26\r\n- Built against MVA-Core dependencies\r\n\r\n##[0.0.31] - 2020-03-19\r\n- Built against Test Executive v1.8.0\r\n- Added ability to Insert a Halt flow control step into a test executive\r\n\r\n##[0.0.30] - 2020-03-18\r\n- Built against Test Executive v1.7.1\r\n\r\n##[0.0.29] - 2020-03-17\r\n- Built against Test Executive v1.7.0\r\n- Save As will now create new GUIDs for the new file\r\n\r\n##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^2.0.1),@cs/mva-viewable (^0.1.1),@cs/popup-viewmanager (^1.1.1),@cs/test-executive (^1.8.2)'),
(1017, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '1.2.0', '2020-05-05 11:24:40', '##[1.2.0] - 2020-05-05\r\n- Built against Test Executive v1.9.3\r\n- Built against MVA Viewable v0.1.2\r\n- Improved shipping example\r\n- Includes ability to run a Mass Relink on files\r\n\r\n##[1.1.2] - 2020-04-06\r\n- Built against Test Executive v1.8.2\r\n- Built against MVA Viewable v0.1.1\r\n- Built against MVA Popup ViewManager v1.1.1\r\n- Built against File Explorer Extension v2.0.1\r\n\r\n##[1.1.1] - 2020-04-01\r\n- Built against Test Executive v1.8.1\r\n\r\n##[1.1.0] - 2020-03-31\r\n- Built against Popup ViewManager v1.1.0\r\n\r\n##[1.0.0] - 2020-03-26\r\n- Built against MVA-Core dependencies\r\n\r\n##[0.0.31] - 2020-03-19\r\n- Built against Test Executive v1.8.0\r\n- Added ability to Insert a Halt flow control step into a test executive\r\n\r\n##[0.0.30] - 2020-03-18\r\n- Built against Test Executive v1.7.1\r\n\r\n##[0.0.29] - 2020-03-17\r\n- Built against Test Executive v1.7.0\r\n- Save As will now create new GUIDs for the new file\r\n\r\n##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^2.0.1),@cs/mva-viewable (^0.1.2),@cs/popup-viewmanager (^1.1.1),@cs/test-executive (^1.9.3)'),
(1018, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '1.2.1', '2020-05-05 22:29:48', '##[1.2.1] - 2020-05-05\r\n- Built against Test Executive v1.9.4\r\n\r\n##[1.2.0] - 2020-05-05\r\n- Built against Test Executive v1.9.3\r\n- Built against MVA Viewable v0.1.2\r\n- Improved shipping example\r\n- Includes ability to run a Mass Relink on files\r\n\r\n##[1.1.2] - 2020-04-06\r\n- Built against Test Executive v1.8.2\r\n- Built against MVA Viewable v0.1.1\r\n- Built against MVA Popup ViewManager v1.1.1\r\n- Built against File Explorer Extension v2.0.1\r\n\r\n##[1.1.1] - 2020-04-01\r\n- Built against Test Executive v1.8.1\r\n\r\n##[1.1.0] - 2020-03-31\r\n- Built against Popup ViewManager v1.1.0\r\n\r\n##[1.0.0] - 2020-03-26\r\n- Built against MVA-Core dependencies\r\n\r\n##[0.0.31] - 2020-03-19\r\n- Built against Test Executive v1.8.0\r\n- Added ability to Insert a Halt flow control step into a test executive\r\n\r\n##[0.0.30] - 2020-03-18\r\n- Built against Test Executive v1.7.1\r\n\r\n##[0.0.29] - 2020-03-17\r\n- Built against Test Executive v1.7.0\r\n- Save As will now create new GUIDs for the new file\r\n\r\n##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^2.0.1),@cs/mva-viewable (^0.1.2),@cs/popup-viewmanager (^1.1.1)'),
(1019, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '1.2.2', '2020-05-06 00:56:40', '##[1.2.2] - 2020-05-05\r\n- Built against Test Executive v1.9.4\r\n\r\n##[1.2.0] - 2020-05-05\r\n- Built against Test Executive v1.9.3\r\n- Built against MVA Viewable v0.1.2\r\n- Improved shipping example\r\n- Includes ability to run a Mass Relink on files\r\n\r\n##[1.1.2] - 2020-04-06\r\n- Built against Test Executive v1.8.2\r\n- Built against MVA Viewable v0.1.1\r\n- Built against MVA Popup ViewManager v1.1.1\r\n- Built against File Explorer Extension v2.0.1\r\n\r\n##[1.1.1] - 2020-04-01\r\n- Built against Test Executive v1.8.1\r\n\r\n##[1.1.0] - 2020-03-31\r\n- Built against Popup ViewManager v1.1.0\r\n\r\n##[1.0.0] - 2020-03-26\r\n- Built against MVA-Core dependencies\r\n\r\n##[0.0.31] - 2020-03-19\r\n- Built against Test Executive v1.8.0\r\n- Added ability to Insert a Halt flow control step into a test executive\r\n\r\n##[0.0.30] - 2020-03-18\r\n- Built against Test Executive v1.7.1\r\n\r\n##[0.0.29] - 2020-03-17\r\n- Built against Test Executive v1.7.0\r\n- Save As will now create new GUIDs for the new file\r\n\r\n##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^2.0.1),@cs/mva-viewable (^0.1.2),@cs/popup-viewmanager (^1.1.1),@cs/test-executive (^1.9.4)'),
(1020, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '1.2.3', '2020-05-06 09:47:59', '##[1.2.3] - 2020-05-05\r\n- Had to relink an application dependency\r\n\r\n##[1.2.2] - 2020-05-05\r\n- Built against Test Executive v1.9.4\r\n\r\n##[1.2.0] - 2020-05-05\r\n- Built against Test Executive v1.9.3\r\n- Built against MVA Viewable v0.1.2\r\n- Improved shipping example\r\n- Includes ability to run a Mass Relink on files\r\n\r\n##[1.1.2] - 2020-04-06\r\n- Built against Test Executive v1.8.2\r\n- Built against MVA Viewable v0.1.1\r\n- Built against MVA Popup ViewManager v1.1.1\r\n- Built against File Explorer Extension v2.0.1\r\n\r\n##[1.1.1] - 2020-04-01\r\n- Built against Test Executive v1.8.1\r\n\r\n##[1.1.0] - 2020-03-31\r\n- Built against Popup ViewManager v1.1.0\r\n\r\n##[1.0.0] - 2020-03-26\r\n- Built against MVA-Core dependencies\r\n\r\n##[0.0.31] - 2020-03-19\r\n- Built against Test Executive v1.8.0\r\n- Added ability to Insert a Halt flow control step into a test executive\r\n\r\n##[0.0.30] - 2020-03-18\r\n- Built against Test Executive v1.7.1\r\n\r\n##[0.0.29] - 2020-03-17\r\n- Built against Test Executive v1.7.0\r\n- Save As will now create new GUIDs for the new file\r\n\r\n##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^2.0.1),@cs/mva-viewable (^0.1.2),@cs/popup-viewmanager (^1.1.1),@cs/test-executive (^1.9.4)'),
(1021, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '1.2.4', '2020-05-11 12:44:00', '##[1.2.4] - 2020-05-11\r\n- Built against Test Executive v1.9.5\r\n\r\n##[1.2.3] - 2020-05-05\r\n- Had to relink an application dependency\r\n\r\n##[1.2.2] - 2020-05-05\r\n- Built against Test Executive v1.9.4\r\n\r\n##[1.2.0] - 2020-05-05\r\n- Built against Test Executive v1.9.3\r\n- Built against MVA Viewable v0.1.2\r\n- Improved shipping example\r\n- Includes ability to run a Mass Relink on files\r\n\r\n##[1.1.2] - 2020-04-06\r\n- Built against Test Executive v1.8.2\r\n- Built against MVA Viewable v0.1.1\r\n- Built against MVA Popup ViewManager v1.1.1\r\n- Built against File Explorer Extension v2.0.1\r\n\r\n##[1.1.1] - 2020-04-01\r\n- Built against Test Executive v1.8.1\r\n\r\n##[1.1.0] - 2020-03-31\r\n- Built against Popup ViewManager v1.1.0\r\n\r\n##[1.0.0] - 2020-03-26\r\n- Built against MVA-Core dependencies\r\n\r\n##[0.0.31] - 2020-03-19\r\n- Built against Test Executive v1.8.0\r\n- Added ability to Insert a Halt flow control step into a test executive\r\n\r\n##[0.0.30] - 2020-03-18\r\n- Built against Test Executive v1.7.1\r\n\r\n##[0.0.29] - 2020-03-17\r\n- Built against Test Executive v1.7.0\r\n- Save As will now create new GUIDs for the new file\r\n\r\n##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^2.0.1),@cs/mva-viewable (^0.1.2),@cs/popup-viewmanager (^1.1.1),@cs/test-executive (^1.9.5)');
INSERT INTO `package_version` (`id`, `package_id`, `package_url`, `repo_type`, `version`, `release_date`, `release_notes`, `deps_string`) VALUES
(1022, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '1.2.5', '2020-05-11 16:43:00', '##[1.2.5] - 2020-05-11\r\n- Added protected read accessors for dialog type overrides\r\n\r\n##[1.2.4] - 2020-05-11\r\n- Built against Test Executive v1.9.5\r\n\r\n##[1.2.3] - 2020-05-05\r\n- Had to relink an application dependency\r\n\r\n##[1.2.2] - 2020-05-05\r\n- Built against Test Executive v1.9.4\r\n\r\n##[1.2.0] - 2020-05-05\r\n- Built against Test Executive v1.9.3\r\n- Built against MVA Viewable v0.1.2\r\n- Improved shipping example\r\n- Includes ability to run a Mass Relink on files\r\n\r\n##[1.1.2] - 2020-04-06\r\n- Built against Test Executive v1.8.2\r\n- Built against MVA Viewable v0.1.1\r\n- Built against MVA Popup ViewManager v1.1.1\r\n- Built against File Explorer Extension v2.0.1\r\n\r\n##[1.1.1] - 2020-04-01\r\n- Built against Test Executive v1.8.1\r\n\r\n##[1.1.0] - 2020-03-31\r\n- Built against Popup ViewManager v1.1.0\r\n\r\n##[1.0.0] - 2020-03-26\r\n- Built against MVA-Core dependencies\r\n\r\n##[0.0.31] - 2020-03-19\r\n- Built against Test Executive v1.8.0\r\n- Added ability to Insert a Halt flow control step into a test executive\r\n\r\n##[0.0.30] - 2020-03-18\r\n- Built against Test Executive v1.7.1\r\n\r\n##[0.0.29] - 2020-03-17\r\n- Built against Test Executive v1.7.0\r\n- Save As will now create new GUIDs for the new file\r\n\r\n##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^2.0.1),@cs/mva-viewable (^0.1.2),@cs/popup-viewmanager (^1.1.1),@cs/test-executive (^1.9.5)'),
(1023, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '1.2.6', '2020-05-11 21:18:46', '##[1.2.6] - 2020-05-11\r\n- Added protected write accessors for dialog type overrides\r\n\r\n##[1.2.5] - 2020-05-11\r\n- Added protected read accessors for dialog type overrides\r\n\r\n##[1.2.4] - 2020-05-11\r\n- Built against Test Executive v1.9.5\r\n\r\n##[1.2.3] - 2020-05-05\r\n- Had to relink an application dependency\r\n\r\n##[1.2.2] - 2020-05-05\r\n- Built against Test Executive v1.9.4\r\n\r\n##[1.2.0] - 2020-05-05\r\n- Built against Test Executive v1.9.3\r\n- Built against MVA Viewable v0.1.2\r\n- Improved shipping example\r\n- Includes ability to run a Mass Relink on files\r\n\r\n##[1.1.2] - 2020-04-06\r\n- Built against Test Executive v1.8.2\r\n- Built against MVA Viewable v0.1.1\r\n- Built against MVA Popup ViewManager v1.1.1\r\n- Built against File Explorer Extension v2.0.1\r\n\r\n##[1.1.1] - 2020-04-01\r\n- Built against Test Executive v1.8.1\r\n\r\n##[1.1.0] - 2020-03-31\r\n- Built against Popup ViewManager v1.1.0\r\n\r\n##[1.0.0] - 2020-03-26\r\n- Built against MVA-Core dependencies\r\n\r\n##[0.0.31] - 2020-03-19\r\n- Built against Test Executive v1.8.0\r\n- Added ability to Insert a Halt flow control step into a test executive\r\n\r\n##[0.0.30] - 2020-03-18\r\n- Built against Test Executive v1.7.1\r\n\r\n##[0.0.29] - 2020-03-17\r\n- Built against Test Executive v1.7.0\r\n- Save As will now create new GUIDs for the new file\r\n\r\n##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^2.0.1),@cs/mva-viewable (^0.1.2),@cs/popup-viewmanager (^1.1.1),@cs/test-executive (^1.9.5)'),
(1024, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '1.2.7', '2020-05-12 10:29:32', '##[1.2.7] - 2020-05-12\r\n- Updated Test Step Dialog to handle pointers correctly\r\n\r\n##[1.2.6] - 2020-05-11\r\n- Added protected write accessors for dialog type overrides\r\n\r\n##[1.2.5] - 2020-05-11\r\n- Added protected read accessors for dialog type overrides\r\n\r\n##[1.2.4] - 2020-05-11\r\n- Built against Test Executive v1.9.5\r\n\r\n##[1.2.3] - 2020-05-05\r\n- Had to relink an application dependency\r\n\r\n##[1.2.2] - 2020-05-05\r\n- Built against Test Executive v1.9.4\r\n\r\n##[1.2.0] - 2020-05-05\r\n- Built against Test Executive v1.9.3\r\n- Built against MVA Viewable v0.1.2\r\n- Improved shipping example\r\n- Includes ability to run a Mass Relink on files\r\n\r\n##[1.1.2] - 2020-04-06\r\n- Built against Test Executive v1.8.2\r\n- Built against MVA Viewable v0.1.1\r\n- Built against MVA Popup ViewManager v1.1.1\r\n- Built against File Explorer Extension v2.0.1\r\n\r\n##[1.1.1] - 2020-04-01\r\n- Built against Test Executive v1.8.1\r\n\r\n##[1.1.0] - 2020-03-31\r\n- Built against Popup ViewManager v1.1.0\r\n\r\n##[1.0.0] - 2020-03-26\r\n- Built against MVA-Core dependencies\r\n\r\n##[0.0.31] - 2020-03-19\r\n- Built against Test Executive v1.8.0\r\n- Added ability to Insert a Halt flow control step into a test executive\r\n\r\n##[0.0.30] - 2020-03-18\r\n- Built against Test Executive v1.7.1\r\n\r\n##[0.0.29] - 2020-03-17\r\n- Built against Test Executive v1.7.0\r\n- Save As will now create new GUIDs for the new file\r\n\r\n##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^2.0.1),@cs/mva-viewable (^0.1.2),@cs/popup-viewmanager (^1.1.1),@cs/test-executive (^1.9.5)'),
(1025, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '1.2.8', '2020-05-12 16:07:07', '##[1.2.8] - 2020-05-12\r\n- Improved the draw tree method to reduce execution time\r\n\r\n##[1.2.7] - 2020-05-12\r\n- Updated Test Step Dialog to handle pointers correctly\r\n\r\n##[1.2.6] - 2020-05-11\r\n- Added protected write accessors for dialog type overrides\r\n\r\n##[1.2.5] - 2020-05-11\r\n- Added protected read accessors for dialog type overrides\r\n\r\n##[1.2.4] - 2020-05-11\r\n- Built against Test Executive v1.9.5\r\n\r\n##[1.2.3] - 2020-05-05\r\n- Had to relink an application dependency\r\n\r\n##[1.2.2] - 2020-05-05\r\n- Built against Test Executive v1.9.4\r\n\r\n##[1.2.0] - 2020-05-05\r\n- Built against Test Executive v1.9.3\r\n- Built against MVA Viewable v0.1.2\r\n- Improved shipping example\r\n- Includes ability to run a Mass Relink on files\r\n\r\n##[1.1.2] - 2020-04-06\r\n- Built against Test Executive v1.8.2\r\n- Built against MVA Viewable v0.1.1\r\n- Built against MVA Popup ViewManager v1.1.1\r\n- Built against File Explorer Extension v2.0.1\r\n\r\n##[1.1.1] - 2020-04-01\r\n- Built against Test Executive v1.8.1\r\n\r\n##[1.1.0] - 2020-03-31\r\n- Built against Popup ViewManager v1.1.0\r\n\r\n##[1.0.0] - 2020-03-26\r\n- Built against MVA-Core dependencies\r\n\r\n##[0.0.31] - 2020-03-19\r\n- Built against Test Executive v1.8.0\r\n- Added ability to Insert a Halt flow control step into a test executive\r\n\r\n##[0.0.30] - 2020-03-18\r\n- Built against Test Executive v1.7.1\r\n\r\n##[0.0.29] - 2020-03-17\r\n- Built against Test Executive v1.7.0\r\n- Save As will now create new GUIDs for the new file\r\n\r\n##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^2.0.1),@cs/mva-viewable (^0.1.2),@cs/popup-viewmanager (^1.1.1),@cs/test-executive (^1.9.5)'),
(1026, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '1.2.9', '2020-05-12 20:17:52', '##[1.2.9] - 2020-05-12\r\n- Built against Test Executive v1.9.6\r\n\r\n##[1.2.8] - 2020-05-12\r\n- Improved the draw tree method to reduce execution time\r\n\r\n##[1.2.7] - 2020-05-12\r\n- Updated Test Step Dialog to handle pointers correctly\r\n\r\n##[1.2.6] - 2020-05-11\r\n- Added protected write accessors for dialog type overrides\r\n\r\n##[1.2.5] - 2020-05-11\r\n- Added protected read accessors for dialog type overrides\r\n\r\n##[1.2.4] - 2020-05-11\r\n- Built against Test Executive v1.9.5\r\n\r\n##[1.2.3] - 2020-05-05\r\n- Had to relink an application dependency\r\n\r\n##[1.2.2] - 2020-05-05\r\n- Built against Test Executive v1.9.4\r\n\r\n##[1.2.0] - 2020-05-05\r\n- Built against Test Executive v1.9.3\r\n- Built against MVA Viewable v0.1.2\r\n- Improved shipping example\r\n- Includes ability to run a Mass Relink on files\r\n\r\n##[1.1.2] - 2020-04-06\r\n- Built against Test Executive v1.8.2\r\n- Built against MVA Viewable v0.1.1\r\n- Built against MVA Popup ViewManager v1.1.1\r\n- Built against File Explorer Extension v2.0.1\r\n\r\n##[1.1.1] - 2020-04-01\r\n- Built against Test Executive v1.8.1\r\n\r\n##[1.1.0] - 2020-03-31\r\n- Built against Popup ViewManager v1.1.0\r\n\r\n##[1.0.0] - 2020-03-26\r\n- Built against MVA-Core dependencies\r\n\r\n##[0.0.31] - 2020-03-19\r\n- Built against Test Executive v1.8.0\r\n- Added ability to Insert a Halt flow control step into a test executive\r\n\r\n##[0.0.30] - 2020-03-18\r\n- Built against Test Executive v1.7.1\r\n\r\n##[0.0.29] - 2020-03-17\r\n- Built against Test Executive v1.7.0\r\n- Save As will now create new GUIDs for the new file\r\n\r\n##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^2.0.1),@cs/mva-viewable (^0.1.2),@cs/popup-viewmanager (^1.1.1),@cs/test-executive (^1.9.6)'),
(1027, 383, 'https://bitbucket.org/composedsystems/composed-test-executive-builder/src/master/', 'GPM', '1.3.0', '2020-06-24 18:49:58', '##[1.3.0] - 2020-05-12\r\n- Built against Test Executive v1.10.1\r\n- Includes support for Parallel flow control type\r\n\r\n##[1.2.9] - 2020-05-12\r\n- Built against Test Executive v1.9.6\r\n\r\n##[1.2.8] - 2020-05-12\r\n- Improved the draw tree method to reduce execution time\r\n\r\n##[1.2.7] - 2020-05-12\r\n- Updated Test Step Dialog to handle pointers correctly\r\n\r\n##[1.2.6] - 2020-05-11\r\n- Added protected write accessors for dialog type overrides\r\n\r\n##[1.2.5] - 2020-05-11\r\n- Added protected read accessors for dialog type overrides\r\n\r\n##[1.2.4] - 2020-05-11\r\n- Built against Test Executive v1.9.5\r\n\r\n##[1.2.3] - 2020-05-05\r\n- Had to relink an application dependency\r\n\r\n##[1.2.2] - 2020-05-05\r\n- Built against Test Executive v1.9.4\r\n\r\n##[1.2.0] - 2020-05-05\r\n- Built against Test Executive v1.9.3\r\n- Built against MVA Viewable v0.1.2\r\n- Improved shipping example\r\n- Includes ability to run a Mass Relink on files\r\n\r\n##[1.1.2] - 2020-04-06\r\n- Built against Test Executive v1.8.2\r\n- Built against MVA Viewable v0.1.1\r\n- Built against MVA Popup ViewManager v1.1.1\r\n- Built against File Explorer Extension v2.0.1\r\n\r\n##[1.1.1] - 2020-04-01\r\n- Built against Test Executive v1.8.1\r\n\r\n##[1.1.0] - 2020-03-31\r\n- Built against Popup ViewManager v1.1.0\r\n\r\n##[1.0.0] - 2020-03-26\r\n- Built against MVA-Core dependencies\r\n\r\n##[0.0.31] - 2020-03-19\r\n- Built against Test Executive v1.8.0\r\n- Added ability to Insert a Halt flow control step into a test executive\r\n\r\n##[0.0.30] - 2020-03-18\r\n- Built against Test Executive v1.7.1\r\n\r\n##[0.0.29] - 2020-03-17\r\n- Built against Test Executive v1.7.0\r\n- Save As will now create new GUIDs for the new file\r\n\r\n##[0.0.28] - 2020-01-15\r\n- Added the ability to insert a Case Structure.\r\n- This patch includes work in progress on creating basic Views that will make it easier to consume the package.\r\n\r\n##[0.0.27] - 2019-10-31\r\n- Fixed a bug that was prematurely saving freshly created test executives.  This bug was only visible if the Create Test Executive method was overridden, called the parent, and acted on the newly created Test Exec guid.\r\n\r\n##[0.0.26] - 2019-10-30\r\n- Built against Test Executive v1.5.0\r\n\r\n##[0.0.25] - 2019-10-29\r\n- Built against Test Executive v1.4.12\r\n\r\n##[0.0.24] - 2019-10-29\r\n- Built against Test Executive v1.4.11\r\n\r\n##[0.0.23] - 2019-10-23\r\n- Re-link and mass compile\r\n\r\n##[0.0.22] - 2019-10-23\r\n- Added alpha mask to prevent user from interacting with initial test executive\r\n\r\n##[0.0.21] - 2019-10-23\r\n- Built against Test Executive v1.4.5\r\n\r\n##[0.0.20] - 2019-10-15\r\n- Added accessors for injected object definitions\r\n\r\n##[0.0.19] - 2019-10-11\r\n- Building in ability to Save As and Create Parameterized on Test Executive files\r\n\r\n##[0.0.18] - 2019-10-09\r\n- Had to do some manual relinking of dependent packages\r\n\r\n##[0.0.17] - 2019-10-08\r\n- Built against File Explorer Extension v1.1.2\r\n\r\n##[0.0.16] - 2019-10-07\r\n- Refactored example application\r\n\r\n##[0.0.15] - 2019-10-07\r\n- Built against Test Executive v1.4.2\r\n\r\n##[0.0.13] - 2019-09-30\r\n- Added move/copy row highlighting to make it easier for users to tell where they are going to move/copy an element to\r\n\r\n##[0.0.12] - 2019-09-18\r\n- Added ability to provide custom symbols to test executive view\r\n\r\n##[0.0.11] - 2019-09-16\r\n- Built against File Explorer Extension v1.1.0\r\n\r\n##[0.0.10] - 2019-09-15\r\n- Built against Test Executive v1.3.0\r\n\r\n##[0.0.9] - 2019-09-13\r\n- Built against Test Executive v1.2.1\r\n- Built against MVA v2.2.3\r\n\r\n##[0.0.7] - 2019-09-05\r\n- Built against Test Executive v1.0.0\r\n\r\n##[0.0.6] - 2019-08-20\r\n- Built against Test Executive v0.0.46-Beta\r\n\r\n##[0.0.5] - 2019-08-20\r\n- Built against Test Executive v0.0.45-Beta\r\n\r\n##[0.0.4] - 2019-08-20\r\n- Built against Test Executive v0.0.44-Beta\r\n\r\n##[0.0.3] - 2019-08-20\r\n- GPM is failing to recognize v0.0.2 as an existing package for some reason so I am going to try publishing again as v0.0.3\r\n- There are no changes to source as compared to v0.0.2\r\n\r\n##[0.0.2] - 2019-08-20\r\n- Built against Test Executive v0.0.43-Beta\r\n\r\n##[0.0.1] - 2019-08-10\r\n- Initial commit', '@cs/file-explorer-extension (^2.0.1),@cs/mva-viewable (^0.1.3),@cs/popup-viewmanager (^1.1.1),@cs/test-executive (^1.10.1)'),
(1028, 384, '', 'GPM', '0.5.0', '2019-08-29 08:40:52', '', NULL),
(1029, 384, '', 'GPM', '0.6.0', '2019-08-29 09:28:06', '', NULL),
(1030, 384, '', 'GPM', '0.7.0', '2019-08-29 09:29:35', '', NULL),
(1031, 384, '', 'GPM', '0.18.0', '2019-08-29 10:49:38', '', NULL),
(1032, 385, 'https://bitbucket.org/composedsystems/composed-transport/', 'GPM', '0.0.0-beta', '2019-08-01 16:02:28', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.0.0.beta] - 2019-08-01\r\n### Added\r\n- Everything. Some error semantics known to be inconsistent but, hey, it\'s a beta. Interfaces are stable. Look for a proper release soon.', '@cs/actor-framework-messages (^0.1.0),@cs/variant (^1.0.1)'),
(1033, 385, 'https://bitbucket.org/composedsystems/composed-transport/', 'GPM', '0.0.1-beta', '2019-08-02 18:33:33', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.0.1.beta] - 2019-08-02\r\n###Changed\r\n- Whitelisted only source folder (omits tests from installed package)\r\n\r\n## [0.0.0.beta] - 2019-08-01\r\n### Added\r\n- Everything. Some error semantics known to be inconsistent but, hey, it\'s a beta. Interfaces are stable. Look for a proper release soon.', '@cs/actor-framework-messages (^0.1.0),@cs/variant (^1.0.1)'),
(1034, 385, 'https://bitbucket.org/composedsystems/composed-transport/', 'GPM', '0.0.1', '2019-08-05 18:17:26', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.0.1] - 2019-08-05\r\n### Fixed\r\n- Error semantics now consistent across all types. Failure to write = 517002 (explanations vary by type), All implementations of Transport Data.vi have standard error in/out functionality (upstream error causes no-op and propagates error through unaltered)\r\n\r\n## [0.0.1.beta] - 2019-08-02\r\n### Changed\r\n- Whitelisted only source folder (omits tests from installed package)\r\n\r\n## [0.0.0.beta] - 2019-08-01\r\n### Added\r\n- Everything. Some error semantics known to be inconsistent but, hey, it\'s a beta. Interfaces are stable. Look for a proper release soon.', '@cs/actor-framework-messages (^0.1.0),@cs/variant (^1.0.1)'),
(1035, 385, 'https://bitbucket.org/composedsystems/composed-transport/', 'GPM', '0.0.2', '2019-08-06 15:39:25', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.0.2] - 2019-08-06\r\n### Added\r\n- Additional API documentation to Readme (No source code changes)\r\n\r\n## [0.0.1] - 2019-08-05\r\n### Fixed\r\n- Error semantics now consistent across all types. Failure to write = 517002 (explanations vary by type), All implementations of Transport Data.vi have standard error in/out functionality (upstream error causes no-op and propagates error through unaltered)\r\n\r\n## [0.0.1.beta] - 2019-08-02\r\n### Changed\r\n- Whitelisted only source folder (omits tests from installed package)\r\n\r\n## [0.0.0.beta] - 2019-08-01\r\n### Added\r\n- Everything. Some error semantics known to be inconsistent but, hey, it\'s a beta. Interfaces are stable. Look for a proper release soon.', '@cs/actor-framework-messages (^0.1.0),@cs/variant (^1.0.1)'),
(1036, 385, 'https://bitbucket.org/composedsystems/composed-transport/', 'GPM', '0.0.3', '2019-09-09 20:10:32', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.0.3] - 2019-09-09\r\n### Changed\r\n- ActorMessageTransport\'s Notification Msg now has all DD methods. This is for backward compatibility in MVA Framework and will be removed in a future release. Do not override any Notification Msg methods.\r\n\r\n## [0.0.2] - 2019-08-06\r\n### Added\r\n- Additional API documentation to Readme (No source code changes)\r\n\r\n## [0.0.1] - 2019-08-05\r\n### Fixed\r\n- Error semantics now consistent across all types. Failure to write = 517002 (explanations vary by type), All implementations of Transport Data.vi have standard error in/out functionality (upstream error causes no-op and propagates error through unaltered)\r\n\r\n## [0.0.1.beta] - 2019-08-02\r\n### Changed\r\n- Whitelisted only source folder (omits tests from installed package)\r\n\r\n## [0.0.0.beta] - 2019-08-01\r\n### Added\r\n- Everything. Some error semantics known to be inconsistent but, hey, it\'s a beta. Interfaces are stable. Look for a proper release soon.', '@cs/actor-framework-messages (^0.1.0),@cs/variant (^1.0.1)'),
(1037, 385, 'https://bitbucket.org/composedsystems/composed-transport/', 'GPM', '0.0.4', '2019-09-12 15:55:44', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [0.0.4] - 2019-09-12\r\n### Fixed\r\n- FormattedStringBinding and BooleanTextBinding allow empty format string without returning constructor errors (writes using empty format string follow standard LabVIEW Format into String rules).\r\n\r\n## [0.0.3] - 2019-09-09\r\n### Changed\r\n- ActorMessageTransport\'s Notification Msg now has all DD methods. This is for backward compatibility in MVA Framework and will be removed in a future release. Do not override any Notification Msg methods.\r\n\r\n## [0.0.2] - 2019-08-06\r\n### Added\r\n- Additional API documentation to Readme (No source code changes)\r\n\r\n## [0.0.1] - 2019-08-05\r\n### Fixed\r\n- Error semantics now consistent across all types. Failure to write = 517002 (explanations vary by type), All implementations of Transport Data.vi have standard error in/out functionality (upstream error causes no-op and propagates error through unaltered)\r\n\r\n## [0.0.1.beta] - 2019-08-02\r\n### Changed\r\n- Whitelisted only source folder (omits tests from installed package)\r\n\r\n## [0.0.0.beta] - 2019-08-01\r\n### Added\r\n- Everything. Some error semantics known to be inconsistent but, hey, it\'s a beta. Interfaces are stable. Look for a proper release soon.', '@cs/actor-framework-messages (^0.1.0),@cs/variant (^1.0.1)'),
(1038, 386, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/tsn_community_lib_tsn_community_vis/tsn_community_lib_tsn_community_vis-1.0.0.2.vip', 'VIPM', '1.0.0.2', '2020-06-25 13:23:41', '', NULL),
(1039, 387, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/lava_lib_ui_tools/lava_lib_ui_tools-1.4.0.73.vip', 'VIPM', '1.4.0.73', '2016-08-25 02:45:31', '1.4.0\n- Added Selction List as a dialog box class\n- Upgraded the code base to LabVIEW 2012.', 'oglib_appcontrol>=4.1.0.7,oglib_array>=4.1.1.14,oglib_file>=4.0.1.22,oglib_lvdata>=4.2.0.21,oglib_string>=4.1.0.12,lava_rsc_lava_palette>=1.0.0.1'),
(1040, 387, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/lava_lib_ui_tools/lava_lib_ui_tools-1.4.1.74.vip', 'VIPM', '1.4.1.74', '2017-03-14 03:53:49', '1.4.1\n- Fixed a bug with centering text on Two Button Dialog box', 'oglib_appcontrol>=4.1.0.7,oglib_array>=4.1.1.14,oglib_file>=4.0.1.22,oglib_lvdata>=4.2.0.21,oglib_string>=4.1.0.12,lava_rsc_lava_palette>=1.0.0.1'),
(1041, 388, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/labview_open_source_lib_unicity/labview_open_source_lib_unicity-1.0.2.5.vip', 'VIPM', '1.0.2.5', '2020-04-15 04:12:51', 'changed license to Zero-Clause BSD', NULL),
(1042, 389, 'https://bitbucket.org/composedsystems/composed-user-manager/src/master/', 'GPM', '0.0.2-Alpha', '2019-09-30 16:10:46', '## [0.0.2-Alpha] - 2019-09-30\r\nRecompiled for LabVIEW 2017 SP1', NULL),
(1043, 389, 'https://bitbucket.org/composedsystems/composed-user-manager/src/master/', 'GPM', '0.0.3-Alpha', '2019-10-04 22:02:46', '## [0.0.2-Alpha] - 2019-09-30\r\nRecompiled for LabVIEW 2017 SP1', NULL),
(1044, 389, 'https://bitbucket.org/composedsystems/composed-user-manager/src/master/', 'GPM', '0.0.4-Alpha', '2019-10-07 20:03:26', '## [0.0.4-Alpha] - 2019-09-30\r\nRemoved test that was accidentally saved in 2019\r\n\r\n## [0.0.2-Alpha] - 2019-09-30\r\nRecompiled for LabVIEW 2017 SP1\r\n', NULL),
(1045, 389, 'https://bitbucket.org/composedsystems/composed-user-manager/src/master/', 'GPM', '0.0.5-Alpha', '2019-10-07 20:10:03', '## [0.0.4-Alpha] - 2019-10-07\r\nFound another 2019 vi.\r\n\r\n## [0.0.4-Alpha] - 2019-10-07\r\nRemoved test that was accidentally saved in 2019\r\n\r\n## [0.0.2-Alpha] - 2019-09-30\r\nRecompiled for LabVIEW 2017 SP1\r\n', NULL),
(1046, 389, 'https://bitbucket.org/composedsystems/composed-user-manager/src/master/', 'GPM', '0.0.6-Alpha', '2019-10-07 20:36:30', '## [0.0.6-Alpha] - 2019-10-07\r\nUpdating load vi. \r\n\r\n## [0.0.5-Alpha] - 2019-10-07\r\nFound another 2019 vi.\r\n\r\n## [0.0.4-Alpha] - 2019-10-07\r\nRemoved test that was accidentally saved in 2019\r\n\r\n## [0.0.2-Alpha] - 2019-09-30\r\nRecompiled for LabVIEW 2017 SP1\r\n', NULL),
(1047, 389, 'https://bitbucket.org/composedsystems/composed-user-manager/src/master/', 'GPM', '0.0.7-Alpha', '2019-10-07 21:03:31', '## [0.0.7-Alpha] - 2019-10-07\r\nFixed some compile errors.; \r\n\r\n## [0.0.6-Alpha] - 2019-10-07\r\nUpdating load vi. \r\n\r\n## [0.0.5-Alpha] - 2019-10-07\r\nFound another 2019 vi.\r\n\r\n## [0.0.4-Alpha] - 2019-10-07\r\nRemoved test that was accidentally saved in 2019\r\n\r\n## [0.0.2-Alpha] - 2019-09-30\r\nRecompiled for LabVIEW 2017 SP1\r\n', NULL),
(1048, 389, 'https://bitbucket.org/composedsystems/composed-user-manager/src/master/', 'GPM', '0.0.8-Alpha', '2019-10-07 21:11:10', '## [0.0.8-Alpha] - 2019-10-07\r\nMaking tests compile. \r\n\r\n## [0.0.7-Alpha] - 2019-10-07\r\nFixed some compile errors.; \r\n\r\n## [0.0.6-Alpha] - 2019-10-07\r\nUpdating load vi. \r\n\r\n## [0.0.5-Alpha] - 2019-10-07\r\nFound another 2019 vi.\r\n\r\n## [0.0.4-Alpha] - 2019-10-07\r\nRemoved test that was accidentally saved in 2019\r\n\r\n## [0.0.2-Alpha] - 2019-09-30\r\nRecompiled for LabVIEW 2017 SP1\r\n', NULL),
(1049, 389, 'https://bitbucket.org/composedsystems/composed-user-manager/src/master/', 'GPM', '0.0.9-Alpha', '2019-10-08 15:26:47', '## [0.0.9-Alpha] - 2019-10-08\r\nImproved User Login verification messages.\r\n\r\n## [0.0.8-Alpha] - 2019-10-07\r\nMaking tests compile. \r\n\r\n## [0.0.7-Alpha] - 2019-10-07\r\nFixed some compile errors.; \r\n\r\n## [0.0.6-Alpha] - 2019-10-07\r\nUpdating load vi. \r\n\r\n## [0.0.5-Alpha] - 2019-10-07\r\nFound another 2019 vi.\r\n\r\n## [0.0.4-Alpha] - 2019-10-07\r\nRemoved test that was accidentally saved in 2019\r\n\r\n## [0.0.2-Alpha] - 2019-09-30\r\nRecompiled for LabVIEW 2017 SP1\r\n', NULL),
(1050, 389, 'https://bitbucket.org/composedsystems/composed-user-manager/src/master/', 'GPM', '0.0.10-Alpha', '2019-10-08 23:45:00', '## [0.0.10-Alpha] - 2019-10-09\r\nmoved disk location of project.\r\n\r\n## [0.0.9-Alpha] - 2019-10-08\r\nImproved User Login verification messages.\r\n\r\n## [0.0.8-Alpha] - 2019-10-07\r\nMaking tests compile. \r\n\r\n## [0.0.7-Alpha] - 2019-10-07\r\nFixed some compile errors.; \r\n\r\n## [0.0.6-Alpha] - 2019-10-07\r\nUpdating load vi. \r\n\r\n## [0.0.5-Alpha] - 2019-10-07\r\nFound another 2019 vi.\r\n\r\n## [0.0.4-Alpha] - 2019-10-07\r\nRemoved test that was accidentally saved in 2019\r\n\r\n## [0.0.2-Alpha] - 2019-09-30\r\nRecompiled for LabVIEW 2017 SP1\r\n', '@cs/linked-list (^1.4.4)'),
(1051, 389, 'https://bitbucket.org/composedsystems/composed-user-manager/src/master/', 'GPM', '0.0.11-Alpha', '2019-10-14 23:08:24', '## [0.0.1-Alpha] - 2019-10-14\r\nWired out the verification message.\r\n\r\n## [0.0.10-Alpha] - 2019-10-09\r\nmoved disk location of project.\r\n\r\n## [0.0.9-Alpha] - 2019-10-08\r\nImproved User Login verification messages.\r\n\r\n## [0.0.8-Alpha] - 2019-10-07\r\nMaking tests compile. \r\n\r\n## [0.0.7-Alpha] - 2019-10-07\r\nFixed some compile errors.; \r\n\r\n## [0.0.6-Alpha] - 2019-10-07\r\nUpdating load vi. \r\n\r\n## [0.0.5-Alpha] - 2019-10-07\r\nFound another 2019 vi.\r\n\r\n## [0.0.4-Alpha] - 2019-10-07\r\nRemoved test that was accidentally saved in 2019\r\n\r\n## [0.0.2-Alpha] - 2019-09-30\r\nRecompiled for LabVIEW 2017 SP1\r\n', '@cs/linked-list (^1.4.4)'),
(1052, 389, 'https://bitbucket.org/composedsystems/composed-user-manager/src/master/', 'GPM', '0.0.12-Beta', '2019-10-31 03:06:50', '## [0.0.12-Beta] - 2019-10-30\r\nAdded SHA-1 encryption (Extendable by user)\r\nRefactored password management to take advantage of encryption\r\n\r\n## [0.0.11-Alpha] - 2019-10-14\r\nWired out the verification message.\r\n\r\n## [0.0.10-Alpha] - 2019-10-09\r\nmoved disk location of project.\r\n\r\n## [0.0.9-Alpha] - 2019-10-08\r\nImproved User Login verification messages.\r\n\r\n## [0.0.8-Alpha] - 2019-10-07\r\nMaking tests compile. \r\n\r\n## [0.0.7-Alpha] - 2019-10-07\r\nFixed some compile errors.; \r\n\r\n## [0.0.6-Alpha] - 2019-10-07\r\nUpdating load vi. \r\n\r\n## [0.0.5-Alpha] - 2019-10-07\r\nFound another 2019 vi.\r\n\r\n## [0.0.4-Alpha] - 2019-10-07\r\nRemoved test that was accidentally saved in 2019\r\n\r\n## [0.0.2-Alpha] - 2019-09-30\r\nRecompiled for LabVIEW 2017 SP1\r\n', '@cs/linked-list (^1.5.9)'),
(1053, 389, 'https://bitbucket.org/composedsystems/composed-user-manager/src/master/', 'GPM', '0.0.13-Beta', '2019-11-11 17:30:47', '## [0.0.13-Beta] - 2019-11-1\r\nAdded the ability to generate a random temporary password, which makes the action of resetting a password more robust\r\n\r\n## [0.0.12-Beta] - 2019-10-30\r\nAdded SHA-1 encryption (Extendable by user)\r\nRefactored password management to take advantage of encryption\r\n\r\n## [0.0.11-Alpha] - 2019-10-14\r\nWired out the verification message.\r\n\r\n## [0.0.10-Alpha] - 2019-10-09\r\nmoved disk location of project.\r\n\r\n## [0.0.9-Alpha] - 2019-10-08\r\nImproved User Login verification messages.\r\n\r\n## [0.0.8-Alpha] - 2019-10-07\r\nMaking tests compile. \r\n\r\n## [0.0.7-Alpha] - 2019-10-07\r\nFixed some compile errors.; \r\n\r\n## [0.0.6-Alpha] - 2019-10-07\r\nUpdating load vi. \r\n\r\n## [0.0.5-Alpha] - 2019-10-07\r\nFound another 2019 vi.\r\n\r\n## [0.0.4-Alpha] - 2019-10-07\r\nRemoved test that was accidentally saved in 2019\r\n\r\n## [0.0.2-Alpha] - 2019-09-30\r\nRecompiled for LabVIEW 2017 SP1\r\n', '@cs/linked-list (^1.5.9)'),
(1054, 389, 'https://bitbucket.org/composedsystems/composed-user-manager/src/master/', 'GPM', '0.0.14-Beta', '2020-08-11 12:45:36', '## [0.0.14-Beta] - 2020-08-11\r\nBuilt against latest linked list\r\n\r\n## [0.0.13-Beta] - 2019-11-1\r\nAdded the ability to generate a random temporary password, which makes the action of resetting a password more robust\r\n\r\n## [0.0.12-Beta] - 2019-10-30\r\nAdded SHA-1 encryption (Extendable by user)\r\nRefactored password management to take advantage of encryption\r\n\r\n## [0.0.11-Alpha] - 2019-10-14\r\nWired out the verification message.\r\n\r\n## [0.0.10-Alpha] - 2019-10-09\r\nmoved disk location of project.\r\n\r\n## [0.0.9-Alpha] - 2019-10-08\r\nImproved User Login verification messages.\r\n\r\n## [0.0.8-Alpha] - 2019-10-07\r\nMaking tests compile. \r\n\r\n## [0.0.7-Alpha] - 2019-10-07\r\nFixed some compile errors.; \r\n\r\n## [0.0.6-Alpha] - 2019-10-07\r\nUpdating load vi. \r\n\r\n## [0.0.5-Alpha] - 2019-10-07\r\nFound another 2019 vi.\r\n\r\n## [0.0.4-Alpha] - 2019-10-07\r\nRemoved test that was accidentally saved in 2019\r\n\r\n## [0.0.2-Alpha] - 2019-09-30\r\nRecompiled for LabVIEW 2017 SP1\r\n', '@cs/linked-list (^1.7.6),@cs/persistence (^0.0.9-Beta)'),
(1055, 390, 'https://bitbucket.org/composedsystems/composed-user-manager/src/master/', 'GPM', '0.1.0-1', '2019-09-30 13:40:10', 'Alpha release', '@cs/linked-list (^1.2.2)'),
(1056, 391, 'https://bitbucket.org/composedsystems/composed-user-manager-application/src/master/', 'GPM', '0.0.1-Alpha', '2019-10-15 00:28:27', ' ## Alpha Release [0.0.1]\r\nFirst build ', '@cs/mva-framework (^2.2.3),@cs/user-configuration-manager (^0.0.10-Alpha)'),
(1057, 391, 'https://bitbucket.org/composedsystems/composed-user-manager-application/src/master/', 'GPM', '0.0.2-Alpha', '2019-10-16 15:41:56', ' ## Alpha Release [0.0.2]\r\nRemoving persisted xml file.\r\n \r\n## Alpha Release [0.0.1]\r\nFirst build ', '@cs/mva-framework (^2.2.3),@cs/user-configuration-manager (^0.0.10-Alpha)'),
(1058, 391, 'https://bitbucket.org/composedsystems/composed-user-manager-application/src/master/', 'GPM', '0.0.3-Alpha', '2019-10-16 16:06:01', ' ## Alpha Release [0.0.3]\r\nAdded lvlibs for namespacing. \r\n\r\n## Alpha Release [0.0.2]\r\nRemoving persisted xml file.\r\n \r\n## Alpha Release [0.0.1]\r\nFirst build ', '@cs/mva-framework (^2.2.3),@cs/user-configuration-manager (^0.0.10-Alpha)'),
(1059, 391, 'https://bitbucket.org/composedsystems/composed-user-manager-application/src/master/', 'GPM', '0.0.4-Alpha', '2019-10-16 20:15:05', ' ## Alpha Release [0.0.4]\r\nMade view mananger metods dynamic disptach. Added accessors.\r\n\r\n ## Alpha Release [0.0.3]\r\nAdded lvlibs for namespacing. \r\n\r\n## Alpha Release [0.0.2]\r\nRemoving persisted xml file.\r\n \r\n## Alpha Release [0.0.1]\r\nFirst build ', '@cs/mva-framework (^2.2.3),@cs/user-configuration-manager (^0.0.10-Alpha)'),
(1060, 391, 'https://bitbucket.org/composedsystems/composed-user-manager-application/src/master/', 'GPM', '0.0.5-Alpha', '2019-10-18 02:49:24', ' ## Alpha Release [0.0.5]\r\nMajor refactor. Removed the event handler and created AF messages for each action.\r\n\r\n ## Alpha Release [0.0.4]\r\nMade view mananger metods dynamic disptach. Added accessors.\r\n\r\n ## Alpha Release [0.0.3]\r\nAdded lvlibs for namespacing. \r\n\r\n## Alpha Release [0.0.2]\r\nRemoving persisted xml file.\r\n \r\n## Alpha Release [0.0.1]\r\nFirst build ', '@cs/mva-framework (^2.2.3),@cs/user-configuration-manager (^0.0.10-Alpha)'),
(1061, 392, 'https://bitbucket.org/composedsystems/variant-extensions/src/master/', 'GPM', '1.0.0', '2019-01-23 21:54:46', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [1.0.0] - 2019-01-23\r\n### Release Note\r\nFirst release of this component through GPM\r\n### Changed\r\n- Renamed a public method for consistency and to make quick-dropping easier\r\n- Made one method private', NULL),
(1062, 392, 'https://bitbucket.org/composedsystems/variant-extensions/src/master/', 'GPM', '1.0.1', '2019-02-14 15:34:40', '# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n### Added\r\n### Changed\r\n### Deprecated\r\n### Removed\r\n### Fixed\r\n### Security\r\n\r\n## [1.0.1]- 2019-02-14\r\n### Changed\r\n- Separated all compiled code from source\r\n- Whitelisted Source folder only\r\n\r\n## [1.0.0] - 2019-01-23\r\n### Release Note\r\nFirst release of this component through GPM\r\n### Changed\r\n- Renamed a public method for consistency and to make quick-dropping easier\r\n- Made one method private', NULL),
(1063, 393, 'https://gitlab.com/mgi/gpm-packages/veristand-system-explorer-classes', 'GPM', '0.1.0', '2020-04-22 19:36:07', '## 0.1.0\r\n\r\nInitial Release.\r\n', NULL),
(1064, 394, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_vi_tester_junit_xml_results/jki_lib_vi_tester_junit_xml_results-2.0.0.15.vip', 'VIPM', '2.0.0.15', '2017-04-29 18:51:15', 'Initial release on GitHub', 'jki_labs_tool_vi_tester>=2.0.0.285,jki_lib_easyxml>=3.0.0.170,oglib_array>=4.1.1.14,oglib_error>=4.2.0.23,oglib_file>=4.0.1.22,oglib_lvdata>=4.2.0.21,oglib_string>=4.1.0.12,jki_rsc_palette>=1.1'),
(1065, 394, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_vi_tester_junit_xml_results/jki_lib_vi_tester_junit_xml_results-2.0.1.16.vip', 'VIPM', '2.0.1.16', '2017-05-01 20:55:28', '- 2.0 - Initial release on GitHub\n- 2.0.1 - Fixed dependency on jki_rsc_toolkits_palette', 'jki_labs_tool_vi_tester>=2.0.0.285,jki_lib_easyxml>=3.0.0.170,oglib_array>=4.1.1.14,oglib_error>=4.2.0.23,oglib_file>=4.0.1.22,oglib_lvdata>=4.2.0.21,oglib_string>=4.1.0.12,jki_rsc_toolkits_palette>=1.1'),
(1066, 395, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_vipm_api/jki_lib_vipm_api-2014.0.0.38.vip', 'VIPM', '2014.0.0.38', '2014-09-17 20:03:04', 'Fixed issue (16100) using VIPM API with named .vipb files in VIPM 2014.', NULL),
(1067, 395, 'https://s3-us-west-1.amazonaws.com/jki-vi-package-network/packages/packages/jki_lib_vipm_api/jki_lib_vipm_api-2017.0.0.55.vip', 'VIPM', '2017.0.0.55', '2018-01-10 16:13:07', 'Fixed issue (17755) \"VIPM API - VI Tree.vi\" missing from \"VIPM API.lvlib\" causing build breakages for end users.', NULL),
(1068, 396, 'https://gitlab.com/QSI_Shared_Code/VIServerToolkit.git', 'GPM', '1.0.0', '2018-09-14 17:31:34', 'Initial Release in GPM', NULL),
(1069, 397, 'http://bluecogsoftware.com:8443/mac671/zmq-binding', 'GPM', '1.5.3', '2019-04-22 19:52:07', 'ver 1.5.3 - 22-APR-2019\r\n===================================\r\n- fixed issue in split endpoint vi ( port number wasn\'t correctly parsed out )\r\n- separated compiled code from cache\r\n- moved repository to git', NULL),
(1070, 397, 'http://bluecogsoftware.com:8443/mac671/zmq-binding', 'GPM', '1.5.4', '2020-08-25 12:40:26', 'ver 1.5.3 - 22-APR-2019\r\n===================================\r\n- fixed issue in split endpoint vi ( port number wasn\'t correctly parsed out )\r\n- separated compiled code from cache\r\n- moved repository to git\r\n\r\nver 1.5.4 - 25-AUG-2020\r\n===================================\r\n- the zmq binding libraries were published with debug enabled occasionally causing assertion errors,\r\nlibraries were reverted to release.', NULL);


/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
